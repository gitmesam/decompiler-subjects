
ia32_elf/subject.exe:     file format elf32-i386


Disassembly of section .init:

08049000 <_init>:
 8049000:	f3 0f 1e fb          	endbr32 
 8049004:	53                   	push   %ebx
 8049005:	83 ec 08             	sub    $0x8,%esp
 8049008:	e8 13 01 00 00       	call   8049120 <__x86.get_pc_thunk.bx>
 804900d:	81 c3 f3 2f 00 00    	add    $0x2ff3,%ebx
 8049013:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8049019:	85 c0                	test   %eax,%eax
 804901b:	74 02                	je     804901f <_init+0x1f>
 804901d:	ff d0                	call   *%eax
 804901f:	83 c4 08             	add    $0x8,%esp
 8049022:	5b                   	pop    %ebx
 8049023:	c3                   	ret    

Disassembly of section .plt:

08049030 <.plt>:
 8049030:	ff 35 04 c0 04 08    	pushl  0x804c004
 8049036:	ff 25 08 c0 04 08    	jmp    *0x804c008
 804903c:	00 00                	add    %al,(%eax)
	...

08049040 <printf@plt>:
 8049040:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 8049046:	68 00 00 00 00       	push   $0x0
 804904b:	e9 e0 ff ff ff       	jmp    8049030 <.plt>

08049050 <__libc_start_main@plt>:
 8049050:	ff 25 10 c0 04 08    	jmp    *0x804c010
 8049056:	68 08 00 00 00       	push   $0x8
 804905b:	e9 d0 ff ff ff       	jmp    8049030 <.plt>

Disassembly of section .text:

08049060 <main>:
 8049060:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8049064:	83 e4 f0             	and    $0xfffffff0,%esp
 8049067:	ff 71 fc             	pushl  -0x4(%ecx)
 804906a:	55                   	push   %ebp
 804906b:	89 e5                	mov    %esp,%ebp
 804906d:	51                   	push   %ecx
 804906e:	83 ec 04             	sub    $0x4,%esp
 8049071:	83 39 02             	cmpl   $0x2,(%ecx)
 8049074:	74 45                	je     80490bb <main+0x5b>
 8049076:	e8 30 02 00 00       	call   80492ab <not_endless_loop>
 804907b:	83 ec 0c             	sub    $0xc,%esp
 804907e:	6a 2a                	push   $0x2a
 8049080:	e8 30 02 00 00       	call   80492b5 <add_one>
 8049085:	5a                   	pop    %edx
 8049086:	59                   	pop    %ecx
 8049087:	50                   	push   %eax
 8049088:	68 0c a0 04 08       	push   $0x804a00c
 804908d:	e8 ae ff ff ff       	call   8049040 <printf@plt>
 8049092:	e8 03 02 00 00       	call   804929a <return_constant>
 8049097:	31 d2                	xor    %edx,%edx
 8049099:	3d bc c4 ac ba       	cmp    $0xbaacc4bc,%eax
 804909e:	0f 94 c2             	sete   %dl
 80490a1:	52                   	push   %edx
 80490a2:	50                   	push   %eax
 80490a3:	50                   	push   %eax
 80490a4:	68 18 a0 04 08       	push   $0x804a018
 80490a9:	e8 92 ff ff ff       	call   8049040 <printf@plt>
 80490ae:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 80490b1:	83 c4 20             	add    $0x20,%esp
 80490b4:	31 c0                	xor    %eax,%eax
 80490b6:	c9                   	leave  
 80490b7:	8d 61 fc             	lea    -0x4(%ecx),%esp
 80490ba:	c3                   	ret    
 80490bb:	e8 26 01 00 00       	call   80491e6 <exec_python>
 80490c0:	eb b4                	jmp    8049076 <main+0x16>
 80490c2:	66 90                	xchg   %ax,%ax
 80490c4:	66 90                	xchg   %ax,%ax
 80490c6:	66 90                	xchg   %ax,%ax
 80490c8:	66 90                	xchg   %ax,%ax
 80490ca:	66 90                	xchg   %ax,%ax
 80490cc:	66 90                	xchg   %ax,%ax
 80490ce:	66 90                	xchg   %ax,%ax

080490d0 <_start>:
 80490d0:	f3 0f 1e fb          	endbr32 
 80490d4:	31 ed                	xor    %ebp,%ebp
 80490d6:	5e                   	pop    %esi
 80490d7:	89 e1                	mov    %esp,%ecx
 80490d9:	83 e4 f0             	and    $0xfffffff0,%esp
 80490dc:	50                   	push   %eax
 80490dd:	54                   	push   %esp
 80490de:	52                   	push   %edx
 80490df:	e8 23 00 00 00       	call   8049107 <_start+0x37>
 80490e4:	81 c3 1c 2f 00 00    	add    $0x2f1c,%ebx
 80490ea:	8d 83 20 d3 ff ff    	lea    -0x2ce0(%ebx),%eax
 80490f0:	50                   	push   %eax
 80490f1:	8d 83 c0 d2 ff ff    	lea    -0x2d40(%ebx),%eax
 80490f7:	50                   	push   %eax
 80490f8:	51                   	push   %ecx
 80490f9:	56                   	push   %esi
 80490fa:	c7 c0 60 90 04 08    	mov    $0x8049060,%eax
 8049100:	50                   	push   %eax
 8049101:	e8 4a ff ff ff       	call   8049050 <__libc_start_main@plt>
 8049106:	f4                   	hlt    
 8049107:	8b 1c 24             	mov    (%esp),%ebx
 804910a:	c3                   	ret    

0804910b <.annobin_init.c>:
 804910b:	66 90                	xchg   %ax,%ax
 804910d:	66 90                	xchg   %ax,%ax
 804910f:	90                   	nop

08049110 <_dl_relocate_static_pie>:
 8049110:	f3 0f 1e fb          	endbr32 
 8049114:	c3                   	ret    

08049115 <.annobin_static_reloc.c_end>:
 8049115:	66 90                	xchg   %ax,%ax
 8049117:	66 90                	xchg   %ax,%ax
 8049119:	66 90                	xchg   %ax,%ax
 804911b:	66 90                	xchg   %ax,%ax
 804911d:	66 90                	xchg   %ax,%ax
 804911f:	90                   	nop

08049120 <__x86.get_pc_thunk.bx>:
 8049120:	8b 1c 24             	mov    (%esp),%ebx
 8049123:	c3                   	ret    
 8049124:	66 90                	xchg   %ax,%ax
 8049126:	66 90                	xchg   %ax,%ax
 8049128:	66 90                	xchg   %ax,%ax
 804912a:	66 90                	xchg   %ax,%ax
 804912c:	66 90                	xchg   %ax,%ax
 804912e:	66 90                	xchg   %ax,%ax

08049130 <deregister_tm_clones>:
 8049130:	b8 18 c0 04 08       	mov    $0x804c018,%eax
 8049135:	3d 18 c0 04 08       	cmp    $0x804c018,%eax
 804913a:	74 24                	je     8049160 <deregister_tm_clones+0x30>
 804913c:	b8 00 00 00 00       	mov    $0x0,%eax
 8049141:	85 c0                	test   %eax,%eax
 8049143:	74 1b                	je     8049160 <deregister_tm_clones+0x30>
 8049145:	55                   	push   %ebp
 8049146:	89 e5                	mov    %esp,%ebp
 8049148:	83 ec 14             	sub    $0x14,%esp
 804914b:	68 18 c0 04 08       	push   $0x804c018
 8049150:	ff d0                	call   *%eax
 8049152:	83 c4 10             	add    $0x10,%esp
 8049155:	c9                   	leave  
 8049156:	c3                   	ret    
 8049157:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804915e:	66 90                	xchg   %ax,%ax
 8049160:	c3                   	ret    
 8049161:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8049168:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804916f:	90                   	nop

08049170 <register_tm_clones>:
 8049170:	b8 18 c0 04 08       	mov    $0x804c018,%eax
 8049175:	2d 18 c0 04 08       	sub    $0x804c018,%eax
 804917a:	c1 f8 02             	sar    $0x2,%eax
 804917d:	89 c2                	mov    %eax,%edx
 804917f:	c1 ea 1f             	shr    $0x1f,%edx
 8049182:	01 d0                	add    %edx,%eax
 8049184:	d1 f8                	sar    %eax
 8049186:	74 20                	je     80491a8 <register_tm_clones+0x38>
 8049188:	ba 00 00 00 00       	mov    $0x0,%edx
 804918d:	85 d2                	test   %edx,%edx
 804918f:	74 17                	je     80491a8 <register_tm_clones+0x38>
 8049191:	55                   	push   %ebp
 8049192:	89 e5                	mov    %esp,%ebp
 8049194:	83 ec 10             	sub    $0x10,%esp
 8049197:	50                   	push   %eax
 8049198:	68 18 c0 04 08       	push   $0x804c018
 804919d:	ff d2                	call   *%edx
 804919f:	83 c4 10             	add    $0x10,%esp
 80491a2:	c9                   	leave  
 80491a3:	c3                   	ret    
 80491a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80491a8:	c3                   	ret    
 80491a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

080491b0 <__do_global_dtors_aux>:
 80491b0:	f3 0f 1e fb          	endbr32 
 80491b4:	80 3d 18 c0 04 08 00 	cmpb   $0x0,0x804c018
 80491bb:	75 1b                	jne    80491d8 <__do_global_dtors_aux+0x28>
 80491bd:	55                   	push   %ebp
 80491be:	89 e5                	mov    %esp,%ebp
 80491c0:	83 ec 08             	sub    $0x8,%esp
 80491c3:	e8 68 ff ff ff       	call   8049130 <deregister_tm_clones>
 80491c8:	c6 05 18 c0 04 08 01 	movb   $0x1,0x804c018
 80491cf:	c9                   	leave  
 80491d0:	c3                   	ret    
 80491d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80491d8:	c3                   	ret    
 80491d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

080491e0 <frame_dummy>:
 80491e0:	f3 0f 1e fb          	endbr32 
 80491e4:	eb 8a                	jmp    8049170 <register_tm_clones>

080491e6 <exec_python>:
 80491e6:	05 31 c0 eb 01       	add    $0x1ebc031,%eax
 80491eb:	05 50 90 eb 01       	add    $0x1eb9050,%eax
 80491f0:	05 b0 10 eb 01       	add    $0x1eb10b0,%eax
 80491f5:	05 f7 e0 eb 01       	add    $0x1ebe0f7,%eax
 80491fa:	05 f7 e0 eb 01       	add    $0x1ebe0f7,%eax
 80491ff:	05 89 c3 eb 01       	add    $0x1ebc389,%eax
 8049204:	05 b4 6e eb 01       	add    $0x1eb6eb4,%eax
 8049209:	05 b0 6f eb 01       	add    $0x1eb6fb0,%eax
 804920e:	05 f7 e3 eb 01       	add    $0x1ebe3f7,%eax
 8049213:	05 b4 68 eb 01       	add    $0x1eb68b4,%eax
 8049218:	05 b0 74 eb 01       	add    $0x1eb74b0,%eax
 804921d:	05 50 90 eb 01       	add    $0x1eb9050,%eax
 8049222:	05 b4 79 eb 01       	add    $0x1eb79b4,%eax
 8049227:	05 b0 70 eb 01       	add    $0x1eb70b0,%eax
 804922c:	05 f7 e3 eb 01       	add    $0x1ebe3f7,%eax
 8049231:	05 b4 2f eb 01       	add    $0x1eb2fb4,%eax
 8049236:	05 b0 6e eb 01       	add    $0x1eb6eb0,%eax
 804923b:	05 50 90 eb 01       	add    $0x1eb9050,%eax
 8049240:	05 b4 69 eb 01       	add    $0x1eb69b4,%eax
 8049245:	05 b0 62 eb 01       	add    $0x1eb62b0,%eax
 804924a:	05 f7 e3 eb 01       	add    $0x1ebe3f7,%eax
 804924f:	05 b4 2f eb 01       	add    $0x1eb2fb4,%eax
 8049254:	05 b0 72 eb 01       	add    $0x1eb72b0,%eax
 8049259:	05 50 90 eb 01       	add    $0x1eb9050,%eax
 804925e:	05 b4 73 eb 01       	add    $0x1eb73b4,%eax
 8049263:	05 b0 75 eb 01       	add    $0x1eb75b0,%eax
 8049268:	05 f7 e3 eb 01       	add    $0x1ebe3f7,%eax
 804926d:	05 b4 2f eb 01       	add    $0x1eb2fb4,%eax
 8049272:	05 b0 2f eb 01       	add    $0x1eb2fb0,%eax
 8049277:	05 50 90 eb 01       	add    $0x1eb9050,%eax
 804927c:	05 31 c9 eb 01       	add    $0x1ebc931,%eax
 8049281:	05 f7 e1 eb 01       	add    $0x1ebe1f7,%eax
 8049286:	05 89 e3 eb 01       	add    $0x1ebe389,%eax
 804928b:	05 b0 0b eb 01       	add    $0x1eb0bb0,%eax
 8049290:	05 cd 80 eb 01       	add    $0x1eb80cd,%eax
 8049295:	e9 4d ff ff ff       	jmp    80491e7 <exec_python+0x1>

0804929a <return_constant>:
 804929a:	b8 00 03 c1 bb       	mov    $0xbbc10300,%eax
 804929f:	b9 00 00 00 05       	mov    $0x5000000,%ecx
 80492a4:	03 c1                	add    %ecx,%eax
 80492a6:	eb f4                	jmp    804929c <return_constant+0x2>
 80492a8:	03 c3                	add    %ebx,%eax
 80492aa:	c3                   	ret    

080492ab <not_endless_loop>:
 80492ab:	eb 01                	jmp    80492ae <not_endless_loop+0x3>
 80492ad:	81 c3 11 22 33 44    	add    $0x44332211,%ebx
 80492b3:	eb f6                	jmp    80492ab <not_endless_loop>

080492b5 <add_one>:
 80492b5:	8b 44 24 04          	mov    0x4(%esp),%eax
 80492b9:	eb ff                	jmp    80492ba <add_one+0x5>
 80492bb:	c0 c3 00             	rol    $0x0,%bl
 80492be:	66 90                	xchg   %ax,%ax

080492c0 <__libc_csu_init>:
 80492c0:	f3 0f 1e fb          	endbr32 
 80492c4:	55                   	push   %ebp
 80492c5:	57                   	push   %edi
 80492c6:	56                   	push   %esi
 80492c7:	53                   	push   %ebx
 80492c8:	e8 53 fe ff ff       	call   8049120 <__x86.get_pc_thunk.bx>
 80492cd:	81 c3 33 2d 00 00    	add    $0x2d33,%ebx
 80492d3:	83 ec 0c             	sub    $0xc,%esp
 80492d6:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 80492da:	e8 21 fd ff ff       	call   8049000 <_init>
 80492df:	8d b3 08 ff ff ff    	lea    -0xf8(%ebx),%esi
 80492e5:	8d 83 04 ff ff ff    	lea    -0xfc(%ebx),%eax
 80492eb:	29 c6                	sub    %eax,%esi
 80492ed:	c1 fe 02             	sar    $0x2,%esi
 80492f0:	74 23                	je     8049315 <__libc_csu_init+0x55>
 80492f2:	31 ff                	xor    %edi,%edi
 80492f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80492f8:	83 ec 04             	sub    $0x4,%esp
 80492fb:	55                   	push   %ebp
 80492fc:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049300:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049304:	ff 94 bb 04 ff ff ff 	call   *-0xfc(%ebx,%edi,4)
 804930b:	83 c7 01             	add    $0x1,%edi
 804930e:	83 c4 10             	add    $0x10,%esp
 8049311:	39 fe                	cmp    %edi,%esi
 8049313:	75 e3                	jne    80492f8 <__libc_csu_init+0x38>
 8049315:	83 c4 0c             	add    $0xc,%esp
 8049318:	5b                   	pop    %ebx
 8049319:	5e                   	pop    %esi
 804931a:	5f                   	pop    %edi
 804931b:	5d                   	pop    %ebp
 804931c:	c3                   	ret    
 804931d:	8d 76 00             	lea    0x0(%esi),%esi

08049320 <__libc_csu_fini>:
 8049320:	f3 0f 1e fb          	endbr32 
 8049324:	c3                   	ret    

Disassembly of section .fini:

08049328 <_fini>:
 8049328:	f3 0f 1e fb          	endbr32 
 804932c:	53                   	push   %ebx
 804932d:	83 ec 08             	sub    $0x8,%esp
 8049330:	e8 eb fd ff ff       	call   8049120 <__x86.get_pc_thunk.bx>
 8049335:	81 c3 cb 2c 00 00    	add    $0x2ccb,%ebx
 804933b:	83 c4 08             	add    $0x8,%esp
 804933e:	5b                   	pop    %ebx
 804933f:	c3                   	ret    
