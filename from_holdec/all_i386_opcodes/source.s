
        .file   "a.c"
        .text

    
.globl aaa_plain
         .type   aaa_plain, @function
aaa_plain:
      .byte 0x37
  mov $0x0,%eax

    ret
         .size   aaa_plain, .-aaa_plain

    
.globl aaa_allregs
         .type   aaa_allregs, @function
aaa_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x37
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aaa_allregs, .-aaa_allregs

    
.globl aaa_constant_simple_clear
         .type   aaa_constant_simple_clear, @function
aaa_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x37
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aaa_constant_simple_clear, .-aaa_constant_simple_clear

    
.globl aaa_constant_simple_set
         .type   aaa_constant_simple_set, @function
aaa_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x37
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aaa_constant_simple_set, .-aaa_constant_simple_set

    
.globl aaa_constant_complex1
         .type   aaa_constant_complex1, @function
aaa_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x37
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aaa_constant_complex1, .-aaa_constant_complex1

    
.globl aaa_constant_complex2
         .type   aaa_constant_complex2, @function
aaa_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x37
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aaa_constant_complex2, .-aaa_constant_complex2

    
.globl aad1_plain
         .type   aad1_plain, @function
aad1_plain:
      .byte 0xd5,0x0a
  mov $0x0,%eax

    ret
         .size   aad1_plain, .-aad1_plain

    
.globl aad1_allregs
         .type   aad1_allregs, @function
aad1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd5,0x0a
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aad1_allregs, .-aad1_allregs

    
.globl aad1_constant_simple
         .type   aad1_constant_simple, @function
aad1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd5,0x0a
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aad1_constant_simple, .-aad1_constant_simple

    
.globl aad1_constant_complex1
         .type   aad1_constant_complex1, @function
aad1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd5,0x0a
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aad1_constant_complex1, .-aad1_constant_complex1

    
.globl aad1_constant_complex2
         .type   aad1_constant_complex2, @function
aad1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd5,0x0a
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aad1_constant_complex2, .-aad1_constant_complex2

    
.globl aad2_plain
         .type   aad2_plain, @function
aad2_plain:
      .byte 0xd5,0x0f
  mov $0x0,%eax

    ret
         .size   aad2_plain, .-aad2_plain

    
.globl aad2_allregs
         .type   aad2_allregs, @function
aad2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd5,0x0f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aad2_allregs, .-aad2_allregs

    
.globl aad2_constant_simple
         .type   aad2_constant_simple, @function
aad2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd5,0x0f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aad2_constant_simple, .-aad2_constant_simple

    
.globl aad2_constant_complex1
         .type   aad2_constant_complex1, @function
aad2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd5,0x0f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aad2_constant_complex1, .-aad2_constant_complex1

    
.globl aad2_constant_complex2
         .type   aad2_constant_complex2, @function
aad2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd5,0x0f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aad2_constant_complex2, .-aad2_constant_complex2

    
.globl aam1_plain
         .type   aam1_plain, @function
aam1_plain:
      .byte 0xd4,0x0a
  mov $0x0,%eax

    ret
         .size   aam1_plain, .-aam1_plain

    
.globl aam1_allregs
         .type   aam1_allregs, @function
aam1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd4,0x0a
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aam1_allregs, .-aam1_allregs

    
.globl aam1_constant_simple
         .type   aam1_constant_simple, @function
aam1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd4,0x0a
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aam1_constant_simple, .-aam1_constant_simple

    
.globl aam1_constant_complex1
         .type   aam1_constant_complex1, @function
aam1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd4,0x0a
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aam1_constant_complex1, .-aam1_constant_complex1

    
.globl aam1_constant_complex2
         .type   aam1_constant_complex2, @function
aam1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd4,0x0a
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aam1_constant_complex2, .-aam1_constant_complex2

    
.globl aam2_plain
         .type   aam2_plain, @function
aam2_plain:
      .byte 0xd4,0x0f
  mov $0x0,%eax

    ret
         .size   aam2_plain, .-aam2_plain

    
.globl aam2_allregs
         .type   aam2_allregs, @function
aam2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd4,0x0f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aam2_allregs, .-aam2_allregs

    
.globl aam2_constant_simple
         .type   aam2_constant_simple, @function
aam2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd4,0x0f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aam2_constant_simple, .-aam2_constant_simple

    
.globl aam2_constant_complex1
         .type   aam2_constant_complex1, @function
aam2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd4,0x0f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aam2_constant_complex1, .-aam2_constant_complex1

    
.globl aam2_constant_complex2
         .type   aam2_constant_complex2, @function
aam2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd4,0x0f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aam2_constant_complex2, .-aam2_constant_complex2

    
.globl aas_plain
         .type   aas_plain, @function
aas_plain:
      .byte 0x3f
  mov $0x0,%eax

    ret
         .size   aas_plain, .-aas_plain

    
.globl aas_allregs
         .type   aas_allregs, @function
aas_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x3f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aas_allregs, .-aas_allregs

    
.globl aas_constant_simple_clear
         .type   aas_constant_simple_clear, @function
aas_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x3f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aas_constant_simple_clear, .-aas_constant_simple_clear

    
.globl aas_constant_simple_set
         .type   aas_constant_simple_set, @function
aas_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x3f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aas_constant_simple_set, .-aas_constant_simple_set

    
.globl aas_constant_complex1
         .type   aas_constant_complex1, @function
aas_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x3f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aas_constant_complex1, .-aas_constant_complex1

    
.globl aas_constant_complex2
         .type   aas_constant_complex2, @function
aas_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x3f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   aas_constant_complex2, .-aas_constant_complex2

    
.globl adc1_mv_plain
         .type   adc1_mv_plain, @function
adc1_mv_plain:
      adc $0x10,%al
  mov $0x0,%eax

    ret
         .size   adc1_mv_plain, .-adc1_mv_plain

    
.globl adc1_mv_allregs
         .type   adc1_mv_allregs, @function
adc1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  adc $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc1_mv_allregs, .-adc1_mv_allregs

    
.globl adc1_mv_constant_simple_clear
         .type   adc1_mv_constant_simple_clear, @function
adc1_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  adc $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc1_mv_constant_simple_clear, .-adc1_mv_constant_simple_clear

    
.globl adc1_mv_constant_simple_set
         .type   adc1_mv_constant_simple_set, @function
adc1_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  adc $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc1_mv_constant_simple_set, .-adc1_mv_constant_simple_set

    
.globl adc1_mv_constant_complex1
         .type   adc1_mv_constant_complex1, @function
adc1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  adc $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc1_mv_constant_complex1, .-adc1_mv_constant_complex1

    
.globl adc1_mv_constant_complex2
         .type   adc1_mv_constant_complex2, @function
adc1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  adc $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc1_mv_constant_complex2, .-adc1_mv_constant_complex2

    
.globl adc2_mv_plain
         .type   adc2_mv_plain, @function
adc2_mv_plain:
      adc $0x10,%ax
  mov $0x0,%eax

    ret
         .size   adc2_mv_plain, .-adc2_mv_plain

    
.globl adc2_mv_allregs
         .type   adc2_mv_allregs, @function
adc2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  adc $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc2_mv_allregs, .-adc2_mv_allregs

    
.globl adc2_mv_constant_simple_clear
         .type   adc2_mv_constant_simple_clear, @function
adc2_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  adc $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc2_mv_constant_simple_clear, .-adc2_mv_constant_simple_clear

    
.globl adc2_mv_constant_simple_set
         .type   adc2_mv_constant_simple_set, @function
adc2_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  adc $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc2_mv_constant_simple_set, .-adc2_mv_constant_simple_set

    
.globl adc2_mv_constant_complex1
         .type   adc2_mv_constant_complex1, @function
adc2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  adc $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc2_mv_constant_complex1, .-adc2_mv_constant_complex1

    
.globl adc2_mv_constant_complex2
         .type   adc2_mv_constant_complex2, @function
adc2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  adc $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc2_mv_constant_complex2, .-adc2_mv_constant_complex2

    
.globl adc2a_mv_plain
         .type   adc2a_mv_plain, @function
adc2a_mv_plain:
      .byte 0x66,0x15,0x10,0x00
  mov $0x0,%eax

    ret
         .size   adc2a_mv_plain, .-adc2a_mv_plain

    
.globl adc2a_mv_allregs
         .type   adc2a_mv_allregs, @function
adc2a_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x15,0x10,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc2a_mv_allregs, .-adc2a_mv_allregs

    
.globl adc2a_mv_constant_simple_clear
         .type   adc2a_mv_constant_simple_clear, @function
adc2a_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x15,0x10,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc2a_mv_constant_simple_clear, .-adc2a_mv_constant_simple_clear

    
.globl adc2a_mv_constant_simple_set
         .type   adc2a_mv_constant_simple_set, @function
adc2a_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x15,0x10,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc2a_mv_constant_simple_set, .-adc2a_mv_constant_simple_set

    
.globl adc2a_mv_constant_complex1
         .type   adc2a_mv_constant_complex1, @function
adc2a_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x15,0x10,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc2a_mv_constant_complex1, .-adc2a_mv_constant_complex1

    
.globl adc2a_mv_constant_complex2
         .type   adc2a_mv_constant_complex2, @function
adc2a_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x15,0x10,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc2a_mv_constant_complex2, .-adc2a_mv_constant_complex2

    
.globl adc3_plain
         .type   adc3_plain, @function
adc3_plain:
      adc $0x10,%eax
  mov $0x0,%eax

    ret
         .size   adc3_plain, .-adc3_plain

    
.globl adc3_allregs
         .type   adc3_allregs, @function
adc3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  adc $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc3_allregs, .-adc3_allregs

    
.globl adc3_constant_simple_clear
         .type   adc3_constant_simple_clear, @function
adc3_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  adc $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc3_constant_simple_clear, .-adc3_constant_simple_clear

    
.globl adc3_constant_simple_set
         .type   adc3_constant_simple_set, @function
adc3_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  adc $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc3_constant_simple_set, .-adc3_constant_simple_set

    
.globl adc3_constant_complex1
         .type   adc3_constant_complex1, @function
adc3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  adc $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc3_constant_complex1, .-adc3_constant_complex1

    
.globl adc3_constant_complex2
         .type   adc3_constant_complex2, @function
adc3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  adc $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc3_constant_complex2, .-adc3_constant_complex2

    
.globl adc3a_mv_plain
         .type   adc3a_mv_plain, @function
adc3a_mv_plain:
      .byte 0x15,0x10,0x00,0x00,0x00
  mov $0x0,%eax

    ret
         .size   adc3a_mv_plain, .-adc3a_mv_plain

    
.globl adc3a_mv_allregs
         .type   adc3a_mv_allregs, @function
adc3a_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc3a_mv_allregs, .-adc3a_mv_allregs

    
.globl adc3a_mv_constant_simple_clear
         .type   adc3a_mv_constant_simple_clear, @function
adc3a_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc3a_mv_constant_simple_clear, .-adc3a_mv_constant_simple_clear

    
.globl adc3a_mv_constant_simple_set
         .type   adc3a_mv_constant_simple_set, @function
adc3a_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc3a_mv_constant_simple_set, .-adc3a_mv_constant_simple_set

    
.globl adc3a_mv_constant_complex1
         .type   adc3a_mv_constant_complex1, @function
adc3a_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc3a_mv_constant_complex1, .-adc3a_mv_constant_complex1

    
.globl adc3a_mv_constant_complex2
         .type   adc3a_mv_constant_complex2, @function
adc3a_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc3a_mv_constant_complex2, .-adc3a_mv_constant_complex2

    
.globl adc4_mv_plain
         .type   adc4_mv_plain, @function
adc4_mv_plain:
      adc 8(%ebp), %eax
  mov $0x0,%eax

    ret
         .size   adc4_mv_plain, .-adc4_mv_plain

    
.globl adc4_mv_allregs
         .type   adc4_mv_allregs, @function
adc4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  adc 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc4_mv_allregs, .-adc4_mv_allregs

    
.globl adc4_mv_constant_simple_clear
         .type   adc4_mv_constant_simple_clear, @function
adc4_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  adc 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc4_mv_constant_simple_clear, .-adc4_mv_constant_simple_clear

    
.globl adc4_mv_constant_simple_set
         .type   adc4_mv_constant_simple_set, @function
adc4_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  adc 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc4_mv_constant_simple_set, .-adc4_mv_constant_simple_set

    
.globl adc4_mv_constant_complex1
         .type   adc4_mv_constant_complex1, @function
adc4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  adc 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc4_mv_constant_complex1, .-adc4_mv_constant_complex1

    
.globl adc4_mv_constant_complex2
         .type   adc4_mv_constant_complex2, @function
adc4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  adc 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc4_mv_constant_complex2, .-adc4_mv_constant_complex2

    
.globl adc_locked_mv_plain
         .type   adc_locked_mv_plain, @function
adc_locked_mv_plain:
      .byte 0xf0,0x13,0x45,0x08
  mov $0x0,%eax

    ret
         .size   adc_locked_mv_plain, .-adc_locked_mv_plain

    
.globl adc_locked_mv_allregs
         .type   adc_locked_mv_allregs, @function
adc_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf0,0x13,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc_locked_mv_allregs, .-adc_locked_mv_allregs

    
.globl adc_locked_mv_constant_simple
         .type   adc_locked_mv_constant_simple, @function
adc_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf0,0x13,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc_locked_mv_constant_simple, .-adc_locked_mv_constant_simple

    
.globl adc_locked_mv_constant_complex1
         .type   adc_locked_mv_constant_complex1, @function
adc_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf0,0x13,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc_locked_mv_constant_complex1, .-adc_locked_mv_constant_complex1

    
.globl adc_locked_mv_constant_complex2
         .type   adc_locked_mv_constant_complex2, @function
adc_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf0,0x13,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   adc_locked_mv_constant_complex2, .-adc_locked_mv_constant_complex2

    
.globl add1_plain
         .type   add1_plain, @function
add1_plain:
      .byte 0x04,0x02
  mov $0x0,%eax

    ret
         .size   add1_plain, .-add1_plain

    
.globl add1_allregs
         .type   add1_allregs, @function
add1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x04,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add1_allregs, .-add1_allregs

    
.globl add1_constant_simple
         .type   add1_constant_simple, @function
add1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x04,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add1_constant_simple, .-add1_constant_simple

    
.globl add1_constant_complex1
         .type   add1_constant_complex1, @function
add1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x04,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add1_constant_complex1, .-add1_constant_complex1

    
.globl add1_constant_complex2
         .type   add1_constant_complex2, @function
add1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x04,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add1_constant_complex2, .-add1_constant_complex2

    
.globl add2_mv_plain
         .type   add2_mv_plain, @function
add2_mv_plain:
      .byte 0x04,0xfe
  mov $0x0,%eax

    ret
         .size   add2_mv_plain, .-add2_mv_plain

    
.globl add2_mv_allregs
         .type   add2_mv_allregs, @function
add2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x04,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add2_mv_allregs, .-add2_mv_allregs

    
.globl add2_mv_constant_simple
         .type   add2_mv_constant_simple, @function
add2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x04,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add2_mv_constant_simple, .-add2_mv_constant_simple

    
.globl add2_mv_constant_complex1
         .type   add2_mv_constant_complex1, @function
add2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x04,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add2_mv_constant_complex1, .-add2_mv_constant_complex1

    
.globl add2_mv_constant_complex2
         .type   add2_mv_constant_complex2, @function
add2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x04,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add2_mv_constant_complex2, .-add2_mv_constant_complex2

    
.globl add3_mv_plain
         .type   add3_mv_plain, @function
add3_mv_plain:
      .byte 0x66,0x05,0x02,0x00
  mov $0x0,%eax

    ret
         .size   add3_mv_plain, .-add3_mv_plain

    
.globl add3_mv_allregs
         .type   add3_mv_allregs, @function
add3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x05,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add3_mv_allregs, .-add3_mv_allregs

    
.globl add3_mv_constant_simple
         .type   add3_mv_constant_simple, @function
add3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x05,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add3_mv_constant_simple, .-add3_mv_constant_simple

    
.globl add3_mv_constant_complex1
         .type   add3_mv_constant_complex1, @function
add3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x05,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add3_mv_constant_complex1, .-add3_mv_constant_complex1

    
.globl add3_mv_constant_complex2
         .type   add3_mv_constant_complex2, @function
add3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x05,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add3_mv_constant_complex2, .-add3_mv_constant_complex2

    
.globl add4_mv_plain
         .type   add4_mv_plain, @function
add4_mv_plain:
      .byte 0x66,0x05,0xfe,0xff
  mov $0x0,%eax

    ret
         .size   add4_mv_plain, .-add4_mv_plain

    
.globl add4_mv_allregs
         .type   add4_mv_allregs, @function
add4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x05,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add4_mv_allregs, .-add4_mv_allregs

    
.globl add4_mv_constant_simple
         .type   add4_mv_constant_simple, @function
add4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x05,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add4_mv_constant_simple, .-add4_mv_constant_simple

    
.globl add4_mv_constant_complex1
         .type   add4_mv_constant_complex1, @function
add4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x05,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add4_mv_constant_complex1, .-add4_mv_constant_complex1

    
.globl add4_mv_constant_complex2
         .type   add4_mv_constant_complex2, @function
add4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x05,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add4_mv_constant_complex2, .-add4_mv_constant_complex2

    
.globl add5_plain
         .type   add5_plain, @function
add5_plain:
      .byte 0x05,0x02,0x00,0x00,0x00
  mov $0x0,%eax

    ret
         .size   add5_plain, .-add5_plain

    
.globl add5_allregs
         .type   add5_allregs, @function
add5_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x05,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add5_allregs, .-add5_allregs

    
.globl add5_constant_simple
         .type   add5_constant_simple, @function
add5_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x05,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add5_constant_simple, .-add5_constant_simple

    
.globl add5_constant_complex1
         .type   add5_constant_complex1, @function
add5_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x05,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add5_constant_complex1, .-add5_constant_complex1

    
.globl add5_constant_complex2
         .type   add5_constant_complex2, @function
add5_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x05,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add5_constant_complex2, .-add5_constant_complex2

    
.globl add6_plain
         .type   add6_plain, @function
add6_plain:
      .byte 0x05,0xfe,0xff,0xff,0xff
  mov $0x0,%eax

    ret
         .size   add6_plain, .-add6_plain

    
.globl add6_allregs
         .type   add6_allregs, @function
add6_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x05,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add6_allregs, .-add6_allregs

    
.globl add6_constant_simple
         .type   add6_constant_simple, @function
add6_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x05,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add6_constant_simple, .-add6_constant_simple

    
.globl add6_constant_complex1
         .type   add6_constant_complex1, @function
add6_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x05,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add6_constant_complex1, .-add6_constant_complex1

    
.globl add6_constant_complex2
         .type   add6_constant_complex2, @function
add6_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x05,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add6_constant_complex2, .-add6_constant_complex2

    
.globl add7_mv_plain
         .type   add7_mv_plain, @function
add7_mv_plain:
      addl 8(%ebp), %eax
  mov $0x0,%eax

    ret
         .size   add7_mv_plain, .-add7_mv_plain

    
.globl add7_mv_allregs
         .type   add7_mv_allregs, @function
add7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  addl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add7_mv_allregs, .-add7_mv_allregs

    
.globl add7_mv_constant_simple
         .type   add7_mv_constant_simple, @function
add7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  addl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add7_mv_constant_simple, .-add7_mv_constant_simple

    
.globl add7_mv_constant_complex1
         .type   add7_mv_constant_complex1, @function
add7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  addl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add7_mv_constant_complex1, .-add7_mv_constant_complex1

    
.globl add7_mv_constant_complex2
         .type   add7_mv_constant_complex2, @function
add7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  addl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add7_mv_constant_complex2, .-add7_mv_constant_complex2

    
.globl add8_mv_plain
         .type   add8_mv_plain, @function
add8_mv_plain:
      add $0x2, %ah
  mov $0x0,%eax

    ret
         .size   add8_mv_plain, .-add8_mv_plain

    
.globl add8_mv_allregs
         .type   add8_mv_allregs, @function
add8_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  add $0x2, %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add8_mv_allregs, .-add8_mv_allregs

    
.globl add8_mv_constant_simple
         .type   add8_mv_constant_simple, @function
add8_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  add $0x2, %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add8_mv_constant_simple, .-add8_mv_constant_simple

    
.globl add8_mv_constant_complex1
         .type   add8_mv_constant_complex1, @function
add8_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  add $0x2, %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add8_mv_constant_complex1, .-add8_mv_constant_complex1

    
.globl add8_mv_constant_complex2
         .type   add8_mv_constant_complex2, @function
add8_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  add $0x2, %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add8_mv_constant_complex2, .-add8_mv_constant_complex2

    
.globl add9_mv_plain
         .type   add9_mv_plain, @function
add9_mv_plain:
      add $0x2, %ax
  mov $0x0,%eax

    ret
         .size   add9_mv_plain, .-add9_mv_plain

    
.globl add9_mv_allregs
         .type   add9_mv_allregs, @function
add9_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  add $0x2, %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add9_mv_allregs, .-add9_mv_allregs

    
.globl add9_mv_constant_simple
         .type   add9_mv_constant_simple, @function
add9_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  add $0x2, %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add9_mv_constant_simple, .-add9_mv_constant_simple

    
.globl add9_mv_constant_complex1
         .type   add9_mv_constant_complex1, @function
add9_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  add $0x2, %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add9_mv_constant_complex1, .-add9_mv_constant_complex1

    
.globl add9_mv_constant_complex2
         .type   add9_mv_constant_complex2, @function
add9_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  add $0x2, %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add9_mv_constant_complex2, .-add9_mv_constant_complex2

    
.globl add10_mv_plain
         .type   add10_mv_plain, @function
add10_mv_plain:
      add $0x2, %al
  mov $0x0,%eax

    ret
         .size   add10_mv_plain, .-add10_mv_plain

    
.globl add10_mv_allregs
         .type   add10_mv_allregs, @function
add10_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  add $0x2, %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add10_mv_allregs, .-add10_mv_allregs

    
.globl add10_mv_constant_simple
         .type   add10_mv_constant_simple, @function
add10_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  add $0x2, %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add10_mv_constant_simple, .-add10_mv_constant_simple

    
.globl add10_mv_constant_complex1
         .type   add10_mv_constant_complex1, @function
add10_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  add $0x2, %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add10_mv_constant_complex1, .-add10_mv_constant_complex1

    
.globl add10_mv_constant_complex2
         .type   add10_mv_constant_complex2, @function
add10_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  add $0x2, %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add10_mv_constant_complex2, .-add10_mv_constant_complex2

    
.globl add11_mv_plain
         .type   add11_mv_plain, @function
add11_mv_plain:
      add $0x2, %ah
  mov $0x0,%eax

    ret
         .size   add11_mv_plain, .-add11_mv_plain

    
.globl add11_mv_allregs
         .type   add11_mv_allregs, @function
add11_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  add $0x2, %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add11_mv_allregs, .-add11_mv_allregs

    
.globl add11_mv_constant_simple
         .type   add11_mv_constant_simple, @function
add11_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  add $0x2, %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add11_mv_constant_simple, .-add11_mv_constant_simple

    
.globl add11_mv_constant_complex1
         .type   add11_mv_constant_complex1, @function
add11_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  add $0x2, %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add11_mv_constant_complex1, .-add11_mv_constant_complex1

    
.globl add11_mv_constant_complex2
         .type   add11_mv_constant_complex2, @function
add11_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  add $0x2, %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add11_mv_constant_complex2, .-add11_mv_constant_complex2

    
.globl add12_mv_plain
         .type   add12_mv_plain, @function
add12_mv_plain:
      add $0x2, %ax
  mov $0x0,%eax

    ret
         .size   add12_mv_plain, .-add12_mv_plain

    
.globl add12_mv_allregs
         .type   add12_mv_allregs, @function
add12_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  add $0x2, %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add12_mv_allregs, .-add12_mv_allregs

    
.globl add12_mv_constant_simple
         .type   add12_mv_constant_simple, @function
add12_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  add $0x2, %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add12_mv_constant_simple, .-add12_mv_constant_simple

    
.globl add12_mv_constant_complex1
         .type   add12_mv_constant_complex1, @function
add12_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  add $0x2, %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add12_mv_constant_complex1, .-add12_mv_constant_complex1

    
.globl add12_mv_constant_complex2
         .type   add12_mv_constant_complex2, @function
add12_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  add $0x2, %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add12_mv_constant_complex2, .-add12_mv_constant_complex2

    
.globl add_locked_mv_plain
         .type   add_locked_mv_plain, @function
add_locked_mv_plain:
      .byte 0xf0,0x03,0x45,0x08
  mov $0x0,%eax

    ret
         .size   add_locked_mv_plain, .-add_locked_mv_plain

    
.globl add_locked_mv_allregs
         .type   add_locked_mv_allregs, @function
add_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf0,0x03,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_locked_mv_allregs, .-add_locked_mv_allregs

    
.globl add_locked_mv_constant_simple
         .type   add_locked_mv_constant_simple, @function
add_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf0,0x03,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_locked_mv_constant_simple, .-add_locked_mv_constant_simple

    
.globl add_locked_mv_constant_complex1
         .type   add_locked_mv_constant_complex1, @function
add_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf0,0x03,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_locked_mv_constant_complex1, .-add_locked_mv_constant_complex1

    
.globl add_locked_mv_constant_complex2
         .type   add_locked_mv_constant_complex2, @function
add_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf0,0x03,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_locked_mv_constant_complex2, .-add_locked_mv_constant_complex2

    
.globl add_ft_0_mv_plain
         .type   add_ft_0_mv_plain, @function
add_ft_0_mv_plain:
      mov $0x01,%al; mov $0x01,%bl; add %al,%bl
  mov $0x0,%eax

    ret
         .size   add_ft_0_mv_plain, .-add_ft_0_mv_plain

    
.globl add_ft_0_mv_allregs
         .type   add_ft_0_mv_allregs, @function
add_ft_0_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_0_mv_allregs, .-add_ft_0_mv_allregs

    
.globl add_ft_0_mv_constant_simple
         .type   add_ft_0_mv_constant_simple, @function
add_ft_0_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_0_mv_constant_simple, .-add_ft_0_mv_constant_simple

    
.globl add_ft_0_mv_constant_complex1
         .type   add_ft_0_mv_constant_complex1, @function
add_ft_0_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_0_mv_constant_complex1, .-add_ft_0_mv_constant_complex1

    
.globl add_ft_0_mv_constant_complex2
         .type   add_ft_0_mv_constant_complex2, @function
add_ft_0_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_0_mv_constant_complex2, .-add_ft_0_mv_constant_complex2

    
.globl add_ft_1_mv_plain
         .type   add_ft_1_mv_plain, @function
add_ft_1_mv_plain:
      mov $0x7f,%al; mov $0x01,%bl; add %al,%bl
  mov $0x0,%eax

    ret
         .size   add_ft_1_mv_plain, .-add_ft_1_mv_plain

    
.globl add_ft_1_mv_allregs
         .type   add_ft_1_mv_allregs, @function
add_ft_1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x7f,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_1_mv_allregs, .-add_ft_1_mv_allregs

    
.globl add_ft_1_mv_constant_simple
         .type   add_ft_1_mv_constant_simple, @function
add_ft_1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x7f,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_1_mv_constant_simple, .-add_ft_1_mv_constant_simple

    
.globl add_ft_1_mv_constant_complex1
         .type   add_ft_1_mv_constant_complex1, @function
add_ft_1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x7f,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_1_mv_constant_complex1, .-add_ft_1_mv_constant_complex1

    
.globl add_ft_1_mv_constant_complex2
         .type   add_ft_1_mv_constant_complex2, @function
add_ft_1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x7f,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_1_mv_constant_complex2, .-add_ft_1_mv_constant_complex2

    
.globl add_ft_2_mv_plain
         .type   add_ft_2_mv_plain, @function
add_ft_2_mv_plain:
      mov $0x01,%al; mov $0xff,%bl; add %al,%bl
  mov $0x0,%eax

    ret
         .size   add_ft_2_mv_plain, .-add_ft_2_mv_plain

    
.globl add_ft_2_mv_allregs
         .type   add_ft_2_mv_allregs, @function
add_ft_2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0xff,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_2_mv_allregs, .-add_ft_2_mv_allregs

    
.globl add_ft_2_mv_constant_simple
         .type   add_ft_2_mv_constant_simple, @function
add_ft_2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0xff,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_2_mv_constant_simple, .-add_ft_2_mv_constant_simple

    
.globl add_ft_2_mv_constant_complex1
         .type   add_ft_2_mv_constant_complex1, @function
add_ft_2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0xff,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_2_mv_constant_complex1, .-add_ft_2_mv_constant_complex1

    
.globl add_ft_2_mv_constant_complex2
         .type   add_ft_2_mv_constant_complex2, @function
add_ft_2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0xff,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_2_mv_constant_complex2, .-add_ft_2_mv_constant_complex2

    
.globl add_ft_3_mv_plain
         .type   add_ft_3_mv_plain, @function
add_ft_3_mv_plain:
      mov $0x01,%al; mov $0xfe,%bl; add %al,%bl
  mov $0x0,%eax

    ret
         .size   add_ft_3_mv_plain, .-add_ft_3_mv_plain

    
.globl add_ft_3_mv_allregs
         .type   add_ft_3_mv_allregs, @function
add_ft_3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0xfe,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_3_mv_allregs, .-add_ft_3_mv_allregs

    
.globl add_ft_3_mv_constant_simple
         .type   add_ft_3_mv_constant_simple, @function
add_ft_3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0xfe,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_3_mv_constant_simple, .-add_ft_3_mv_constant_simple

    
.globl add_ft_3_mv_constant_complex1
         .type   add_ft_3_mv_constant_complex1, @function
add_ft_3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0xfe,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_3_mv_constant_complex1, .-add_ft_3_mv_constant_complex1

    
.globl add_ft_3_mv_constant_complex2
         .type   add_ft_3_mv_constant_complex2, @function
add_ft_3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0xfe,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_3_mv_constant_complex2, .-add_ft_3_mv_constant_complex2

    
.globl add_ft_4_mv_plain
         .type   add_ft_4_mv_plain, @function
add_ft_4_mv_plain:
      mov $0xff,%al; mov $0x01,%bl; add %al,%bl
  mov $0x0,%eax

    ret
         .size   add_ft_4_mv_plain, .-add_ft_4_mv_plain

    
.globl add_ft_4_mv_allregs
         .type   add_ft_4_mv_allregs, @function
add_ft_4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0xff,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_4_mv_allregs, .-add_ft_4_mv_allregs

    
.globl add_ft_4_mv_constant_simple
         .type   add_ft_4_mv_constant_simple, @function
add_ft_4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0xff,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_4_mv_constant_simple, .-add_ft_4_mv_constant_simple

    
.globl add_ft_4_mv_constant_complex1
         .type   add_ft_4_mv_constant_complex1, @function
add_ft_4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0xff,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_4_mv_constant_complex1, .-add_ft_4_mv_constant_complex1

    
.globl add_ft_4_mv_constant_complex2
         .type   add_ft_4_mv_constant_complex2, @function
add_ft_4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0xff,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_4_mv_constant_complex2, .-add_ft_4_mv_constant_complex2

    
.globl add_ft_5_mv_plain
         .type   add_ft_5_mv_plain, @function
add_ft_5_mv_plain:
      mov $0xfe,%al; mov $0x01,%bl; add %al,%bl
  mov $0x0,%eax

    ret
         .size   add_ft_5_mv_plain, .-add_ft_5_mv_plain

    
.globl add_ft_5_mv_allregs
         .type   add_ft_5_mv_allregs, @function
add_ft_5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0xfe,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_5_mv_allregs, .-add_ft_5_mv_allregs

    
.globl add_ft_5_mv_constant_simple
         .type   add_ft_5_mv_constant_simple, @function
add_ft_5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0xfe,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_5_mv_constant_simple, .-add_ft_5_mv_constant_simple

    
.globl add_ft_5_mv_constant_complex1
         .type   add_ft_5_mv_constant_complex1, @function
add_ft_5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0xfe,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_5_mv_constant_complex1, .-add_ft_5_mv_constant_complex1

    
.globl add_ft_5_mv_constant_complex2
         .type   add_ft_5_mv_constant_complex2, @function
add_ft_5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0xfe,%al; mov $0x01,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_5_mv_constant_complex2, .-add_ft_5_mv_constant_complex2

    
.globl add_ft_6_mv_plain
         .type   add_ft_6_mv_plain, @function
add_ft_6_mv_plain:
      mov $0x80,%al; mov $0x80,%bl; add %al,%bl
  mov $0x0,%eax

    ret
         .size   add_ft_6_mv_plain, .-add_ft_6_mv_plain

    
.globl add_ft_6_mv_allregs
         .type   add_ft_6_mv_allregs, @function
add_ft_6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0x80,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_6_mv_allregs, .-add_ft_6_mv_allregs

    
.globl add_ft_6_mv_constant_simple
         .type   add_ft_6_mv_constant_simple, @function
add_ft_6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0x80,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_6_mv_constant_simple, .-add_ft_6_mv_constant_simple

    
.globl add_ft_6_mv_constant_complex1
         .type   add_ft_6_mv_constant_complex1, @function
add_ft_6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0x80,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_6_mv_constant_complex1, .-add_ft_6_mv_constant_complex1

    
.globl add_ft_6_mv_constant_complex2
         .type   add_ft_6_mv_constant_complex2, @function
add_ft_6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0x80,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_6_mv_constant_complex2, .-add_ft_6_mv_constant_complex2

    
.globl add_ft_7_mv_plain
         .type   add_ft_7_mv_plain, @function
add_ft_7_mv_plain:
      mov $0xff,%al; mov $0xff,%bl; add %al,%bl
  mov $0x0,%eax

    ret
         .size   add_ft_7_mv_plain, .-add_ft_7_mv_plain

    
.globl add_ft_7_mv_allregs
         .type   add_ft_7_mv_allregs, @function
add_ft_7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0xff,%al; mov $0xff,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_7_mv_allregs, .-add_ft_7_mv_allregs

    
.globl add_ft_7_mv_constant_simple
         .type   add_ft_7_mv_constant_simple, @function
add_ft_7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0xff,%al; mov $0xff,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_7_mv_constant_simple, .-add_ft_7_mv_constant_simple

    
.globl add_ft_7_mv_constant_complex1
         .type   add_ft_7_mv_constant_complex1, @function
add_ft_7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0xff,%al; mov $0xff,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_7_mv_constant_complex1, .-add_ft_7_mv_constant_complex1

    
.globl add_ft_7_mv_constant_complex2
         .type   add_ft_7_mv_constant_complex2, @function
add_ft_7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0xff,%al; mov $0xff,%bl; add %al,%bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   add_ft_7_mv_constant_complex2, .-add_ft_7_mv_constant_complex2

    
.globl and1_plain
         .type   and1_plain, @function
and1_plain:
      .byte 0x24,0x02
  mov $0x0,%eax

    ret
         .size   and1_plain, .-and1_plain

    
.globl and1_allregs
         .type   and1_allregs, @function
and1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x24,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and1_allregs, .-and1_allregs

    
.globl and1_constant_simple
         .type   and1_constant_simple, @function
and1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x24,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and1_constant_simple, .-and1_constant_simple

    
.globl and1_constant_complex1
         .type   and1_constant_complex1, @function
and1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x24,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and1_constant_complex1, .-and1_constant_complex1

    
.globl and1_constant_complex2
         .type   and1_constant_complex2, @function
and1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x24,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and1_constant_complex2, .-and1_constant_complex2

    
.globl and2_mv_plain
         .type   and2_mv_plain, @function
and2_mv_plain:
      .byte 0x24,0xfe
  mov $0x0,%eax

    ret
         .size   and2_mv_plain, .-and2_mv_plain

    
.globl and2_mv_allregs
         .type   and2_mv_allregs, @function
and2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x24,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and2_mv_allregs, .-and2_mv_allregs

    
.globl and2_mv_constant_simple
         .type   and2_mv_constant_simple, @function
and2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x24,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and2_mv_constant_simple, .-and2_mv_constant_simple

    
.globl and2_mv_constant_complex1
         .type   and2_mv_constant_complex1, @function
and2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x24,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and2_mv_constant_complex1, .-and2_mv_constant_complex1

    
.globl and2_mv_constant_complex2
         .type   and2_mv_constant_complex2, @function
and2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x24,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and2_mv_constant_complex2, .-and2_mv_constant_complex2

    
.globl and3_mv_plain
         .type   and3_mv_plain, @function
and3_mv_plain:
      .byte 0x66,0x25,0x02,0x00
  mov $0x0,%eax

    ret
         .size   and3_mv_plain, .-and3_mv_plain

    
.globl and3_mv_allregs
         .type   and3_mv_allregs, @function
and3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x25,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and3_mv_allregs, .-and3_mv_allregs

    
.globl and3_mv_constant_simple
         .type   and3_mv_constant_simple, @function
and3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x25,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and3_mv_constant_simple, .-and3_mv_constant_simple

    
.globl and3_mv_constant_complex1
         .type   and3_mv_constant_complex1, @function
and3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x25,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and3_mv_constant_complex1, .-and3_mv_constant_complex1

    
.globl and3_mv_constant_complex2
         .type   and3_mv_constant_complex2, @function
and3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x25,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and3_mv_constant_complex2, .-and3_mv_constant_complex2

    
.globl and4_mv_plain
         .type   and4_mv_plain, @function
and4_mv_plain:
      .byte 0x66,0x25,0xfe,0xff
  mov $0x0,%eax

    ret
         .size   and4_mv_plain, .-and4_mv_plain

    
.globl and4_mv_allregs
         .type   and4_mv_allregs, @function
and4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x25,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and4_mv_allregs, .-and4_mv_allregs

    
.globl and4_mv_constant_simple
         .type   and4_mv_constant_simple, @function
and4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x25,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and4_mv_constant_simple, .-and4_mv_constant_simple

    
.globl and4_mv_constant_complex1
         .type   and4_mv_constant_complex1, @function
and4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x25,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and4_mv_constant_complex1, .-and4_mv_constant_complex1

    
.globl and4_mv_constant_complex2
         .type   and4_mv_constant_complex2, @function
and4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x25,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and4_mv_constant_complex2, .-and4_mv_constant_complex2

    
.globl and5_plain
         .type   and5_plain, @function
and5_plain:
      .byte 0x25,0x02,0x00,0x00,0x00
  mov $0x0,%eax

    ret
         .size   and5_plain, .-and5_plain

    
.globl and5_allregs
         .type   and5_allregs, @function
and5_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x25,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and5_allregs, .-and5_allregs

    
.globl and5_constant_simple
         .type   and5_constant_simple, @function
and5_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x25,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and5_constant_simple, .-and5_constant_simple

    
.globl and5_constant_complex1
         .type   and5_constant_complex1, @function
and5_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x25,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and5_constant_complex1, .-and5_constant_complex1

    
.globl and5_constant_complex2
         .type   and5_constant_complex2, @function
and5_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x25,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and5_constant_complex2, .-and5_constant_complex2

    
.globl and6_mv_plain
         .type   and6_mv_plain, @function
and6_mv_plain:
      .byte 0x25,0xfe,0xff,0xff,0xff
  mov $0x0,%eax

    ret
         .size   and6_mv_plain, .-and6_mv_plain

    
.globl and6_mv_allregs
         .type   and6_mv_allregs, @function
and6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x25,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and6_mv_allregs, .-and6_mv_allregs

    
.globl and6_mv_constant_simple
         .type   and6_mv_constant_simple, @function
and6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x25,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and6_mv_constant_simple, .-and6_mv_constant_simple

    
.globl and6_mv_constant_complex1
         .type   and6_mv_constant_complex1, @function
and6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x25,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and6_mv_constant_complex1, .-and6_mv_constant_complex1

    
.globl and6_mv_constant_complex2
         .type   and6_mv_constant_complex2, @function
and6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x25,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and6_mv_constant_complex2, .-and6_mv_constant_complex2

    
.globl and7_mv_plain
         .type   and7_mv_plain, @function
and7_mv_plain:
      andl 8(%ebp), %eax
  mov $0x0,%eax

    ret
         .size   and7_mv_plain, .-and7_mv_plain

    
.globl and7_mv_allregs
         .type   and7_mv_allregs, @function
and7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  andl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and7_mv_allregs, .-and7_mv_allregs

    
.globl and7_mv_constant_simple
         .type   and7_mv_constant_simple, @function
and7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  andl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and7_mv_constant_simple, .-and7_mv_constant_simple

    
.globl and7_mv_constant_complex1
         .type   and7_mv_constant_complex1, @function
and7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  andl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and7_mv_constant_complex1, .-and7_mv_constant_complex1

    
.globl and7_mv_constant_complex2
         .type   and7_mv_constant_complex2, @function
and7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  andl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and7_mv_constant_complex2, .-and7_mv_constant_complex2

    
.globl and_locked_mv_plain
         .type   and_locked_mv_plain, @function
and_locked_mv_plain:
      .byte 0xf0,0x23,0x45,0x08
  mov $0x0,%eax

    ret
         .size   and_locked_mv_plain, .-and_locked_mv_plain

    
.globl and_locked_mv_allregs
         .type   and_locked_mv_allregs, @function
and_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf0,0x23,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and_locked_mv_allregs, .-and_locked_mv_allregs

    
.globl and_locked_mv_constant_simple
         .type   and_locked_mv_constant_simple, @function
and_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf0,0x23,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and_locked_mv_constant_simple, .-and_locked_mv_constant_simple

    
.globl and_locked_mv_constant_complex1
         .type   and_locked_mv_constant_complex1, @function
and_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf0,0x23,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and_locked_mv_constant_complex1, .-and_locked_mv_constant_complex1

    
.globl and_locked_mv_constant_complex2
         .type   and_locked_mv_constant_complex2, @function
and_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf0,0x23,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   and_locked_mv_constant_complex2, .-and_locked_mv_constant_complex2

    
.globl arpl_plain
         .type   arpl_plain, @function
arpl_plain:
      arpl %ax, %bx
  mov $0x0,%eax

    ret
         .size   arpl_plain, .-arpl_plain

    
.globl arpl_allregs
         .type   arpl_allregs, @function
arpl_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  arpl %ax, %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   arpl_allregs, .-arpl_allregs

    
.globl arpl_constant_simple
         .type   arpl_constant_simple, @function
arpl_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  arpl %ax, %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   arpl_constant_simple, .-arpl_constant_simple

    
.globl arpl_constant_complex1
         .type   arpl_constant_complex1, @function
arpl_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  arpl %ax, %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   arpl_constant_complex1, .-arpl_constant_complex1

    
.globl arpl_constant_complex2
         .type   arpl_constant_complex2, @function
arpl_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  arpl %ax, %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   arpl_constant_complex2, .-arpl_constant_complex2

    
.globl bound1_mv_plain
         .type   bound1_mv_plain, @function
bound1_mv_plain:
      bound %ax,(%bx)
  mov $0x0,%eax

    ret
         .size   bound1_mv_plain, .-bound1_mv_plain

    
.globl bound1_mv_allregs
         .type   bound1_mv_allregs, @function
bound1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bound %ax,(%bx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bound1_mv_allregs, .-bound1_mv_allregs

    
.globl bound1_mv_constant_simple
         .type   bound1_mv_constant_simple, @function
bound1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bound %ax,(%bx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bound1_mv_constant_simple, .-bound1_mv_constant_simple

    
.globl bound1_mv_constant_complex1
         .type   bound1_mv_constant_complex1, @function
bound1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bound %ax,(%bx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bound1_mv_constant_complex1, .-bound1_mv_constant_complex1

    
.globl bound1_mv_constant_complex2
         .type   bound1_mv_constant_complex2, @function
bound1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bound %ax,(%bx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bound1_mv_constant_complex2, .-bound1_mv_constant_complex2

    
.globl bound2_plain
         .type   bound2_plain, @function
bound2_plain:
      bound %eax,(%ebx)
  mov $0x0,%eax

    ret
         .size   bound2_plain, .-bound2_plain

    
.globl bound2_allregs
         .type   bound2_allregs, @function
bound2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bound %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bound2_allregs, .-bound2_allregs

    
.globl bound2_constant_simple
         .type   bound2_constant_simple, @function
bound2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bound %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bound2_constant_simple, .-bound2_constant_simple

    
.globl bound2_constant_complex1
         .type   bound2_constant_complex1, @function
bound2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bound %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bound2_constant_complex1, .-bound2_constant_complex1

    
.globl bound2_constant_complex2
         .type   bound2_constant_complex2, @function
bound2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bound %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bound2_constant_complex2, .-bound2_constant_complex2

    
.globl bsf1_mv_plain
         .type   bsf1_mv_plain, @function
bsf1_mv_plain:
      bsf %bx,%ax
  mov $0x0,%eax

    ret
         .size   bsf1_mv_plain, .-bsf1_mv_plain

    
.globl bsf1_mv_allregs
         .type   bsf1_mv_allregs, @function
bsf1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsf %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf1_mv_allregs, .-bsf1_mv_allregs

    
.globl bsf1_mv_constant_simple
         .type   bsf1_mv_constant_simple, @function
bsf1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsf %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf1_mv_constant_simple, .-bsf1_mv_constant_simple

    
.globl bsf1_mv_constant_complex1
         .type   bsf1_mv_constant_complex1, @function
bsf1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsf %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf1_mv_constant_complex1, .-bsf1_mv_constant_complex1

    
.globl bsf1_mv_constant_complex2
         .type   bsf1_mv_constant_complex2, @function
bsf1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsf %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf1_mv_constant_complex2, .-bsf1_mv_constant_complex2

    
.globl bsf2_plain
         .type   bsf2_plain, @function
bsf2_plain:
      bsf %ebx,%eax
  mov $0x0,%eax

    ret
         .size   bsf2_plain, .-bsf2_plain

    
.globl bsf2_allregs
         .type   bsf2_allregs, @function
bsf2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsf %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf2_allregs, .-bsf2_allregs

    
.globl bsf2_constant_simple
         .type   bsf2_constant_simple, @function
bsf2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsf %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf2_constant_simple, .-bsf2_constant_simple

    
.globl bsf2_constant_complex1
         .type   bsf2_constant_complex1, @function
bsf2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsf %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf2_constant_complex1, .-bsf2_constant_complex1

    
.globl bsf2_constant_complex2
         .type   bsf2_constant_complex2, @function
bsf2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsf %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf2_constant_complex2, .-bsf2_constant_complex2

    
.globl bsf3_mv_plain
         .type   bsf3_mv_plain, @function
bsf3_mv_plain:
      bsf %bx,%ax
  mov $0x0,%eax

    ret
         .size   bsf3_mv_plain, .-bsf3_mv_plain

    
.globl bsf3_mv_allregs
         .type   bsf3_mv_allregs, @function
bsf3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsf %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf3_mv_allregs, .-bsf3_mv_allregs

    
.globl bsf3_mv_constant_simple
         .type   bsf3_mv_constant_simple, @function
bsf3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsf %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf3_mv_constant_simple, .-bsf3_mv_constant_simple

    
.globl bsf3_mv_constant_complex1
         .type   bsf3_mv_constant_complex1, @function
bsf3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsf %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf3_mv_constant_complex1, .-bsf3_mv_constant_complex1

    
.globl bsf3_mv_constant_complex2
         .type   bsf3_mv_constant_complex2, @function
bsf3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsf %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf3_mv_constant_complex2, .-bsf3_mv_constant_complex2

    
.globl bsf4_mv_plain
         .type   bsf4_mv_plain, @function
bsf4_mv_plain:
      bsf %ebx,%eax
  mov $0x0,%eax

    ret
         .size   bsf4_mv_plain, .-bsf4_mv_plain

    
.globl bsf4_mv_allregs
         .type   bsf4_mv_allregs, @function
bsf4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsf %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf4_mv_allregs, .-bsf4_mv_allregs

    
.globl bsf4_mv_constant_simple
         .type   bsf4_mv_constant_simple, @function
bsf4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsf %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf4_mv_constant_simple, .-bsf4_mv_constant_simple

    
.globl bsf4_mv_constant_complex1
         .type   bsf4_mv_constant_complex1, @function
bsf4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsf %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf4_mv_constant_complex1, .-bsf4_mv_constant_complex1

    
.globl bsf4_mv_constant_complex2
         .type   bsf4_mv_constant_complex2, @function
bsf4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsf %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf4_mv_constant_complex2, .-bsf4_mv_constant_complex2

    
.globl bsf5_mv_plain
         .type   bsf5_mv_plain, @function
bsf5_mv_plain:
      bsf (%bx),%ax
  mov $0x0,%eax

    ret
         .size   bsf5_mv_plain, .-bsf5_mv_plain

    
.globl bsf5_mv_allregs
         .type   bsf5_mv_allregs, @function
bsf5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsf (%bx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf5_mv_allregs, .-bsf5_mv_allregs

    
.globl bsf5_mv_constant_simple
         .type   bsf5_mv_constant_simple, @function
bsf5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsf (%bx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf5_mv_constant_simple, .-bsf5_mv_constant_simple

    
.globl bsf5_mv_constant_complex1
         .type   bsf5_mv_constant_complex1, @function
bsf5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsf (%bx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf5_mv_constant_complex1, .-bsf5_mv_constant_complex1

    
.globl bsf5_mv_constant_complex2
         .type   bsf5_mv_constant_complex2, @function
bsf5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsf (%bx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf5_mv_constant_complex2, .-bsf5_mv_constant_complex2

    
.globl bsf6_mv_plain
         .type   bsf6_mv_plain, @function
bsf6_mv_plain:
      bsf (%ebx),%eax
  mov $0x0,%eax

    ret
         .size   bsf6_mv_plain, .-bsf6_mv_plain

    
.globl bsf6_mv_allregs
         .type   bsf6_mv_allregs, @function
bsf6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsf (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf6_mv_allregs, .-bsf6_mv_allregs

    
.globl bsf6_mv_constant_simple
         .type   bsf6_mv_constant_simple, @function
bsf6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsf (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf6_mv_constant_simple, .-bsf6_mv_constant_simple

    
.globl bsf6_mv_constant_complex1
         .type   bsf6_mv_constant_complex1, @function
bsf6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsf (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf6_mv_constant_complex1, .-bsf6_mv_constant_complex1

    
.globl bsf6_mv_constant_complex2
         .type   bsf6_mv_constant_complex2, @function
bsf6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsf (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf6_mv_constant_complex2, .-bsf6_mv_constant_complex2

    
.globl bsf7_mv_plain
         .type   bsf7_mv_plain, @function
bsf7_mv_plain:
      bsf (%bx),%eax
  mov $0x0,%eax

    ret
         .size   bsf7_mv_plain, .-bsf7_mv_plain

    
.globl bsf7_mv_allregs
         .type   bsf7_mv_allregs, @function
bsf7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsf (%bx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf7_mv_allregs, .-bsf7_mv_allregs

    
.globl bsf7_mv_constant_simple
         .type   bsf7_mv_constant_simple, @function
bsf7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsf (%bx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf7_mv_constant_simple, .-bsf7_mv_constant_simple

    
.globl bsf7_mv_constant_complex1
         .type   bsf7_mv_constant_complex1, @function
bsf7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsf (%bx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf7_mv_constant_complex1, .-bsf7_mv_constant_complex1

    
.globl bsf7_mv_constant_complex2
         .type   bsf7_mv_constant_complex2, @function
bsf7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsf (%bx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf7_mv_constant_complex2, .-bsf7_mv_constant_complex2

    
.globl bsf8_mv_plain
         .type   bsf8_mv_plain, @function
bsf8_mv_plain:
      bsf (%ebx),%ax
  mov $0x0,%eax

    ret
         .size   bsf8_mv_plain, .-bsf8_mv_plain

    
.globl bsf8_mv_allregs
         .type   bsf8_mv_allregs, @function
bsf8_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsf (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf8_mv_allregs, .-bsf8_mv_allregs

    
.globl bsf8_mv_constant_simple
         .type   bsf8_mv_constant_simple, @function
bsf8_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsf (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf8_mv_constant_simple, .-bsf8_mv_constant_simple

    
.globl bsf8_mv_constant_complex1
         .type   bsf8_mv_constant_complex1, @function
bsf8_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsf (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf8_mv_constant_complex1, .-bsf8_mv_constant_complex1

    
.globl bsf8_mv_constant_complex2
         .type   bsf8_mv_constant_complex2, @function
bsf8_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsf (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsf8_mv_constant_complex2, .-bsf8_mv_constant_complex2

    
.globl bsr1_mv_plain
         .type   bsr1_mv_plain, @function
bsr1_mv_plain:
      bsr %bx,%ax
  mov $0x0,%eax

    ret
         .size   bsr1_mv_plain, .-bsr1_mv_plain

    
.globl bsr1_mv_allregs
         .type   bsr1_mv_allregs, @function
bsr1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr1_mv_allregs, .-bsr1_mv_allregs

    
.globl bsr1_mv_constant_simple
         .type   bsr1_mv_constant_simple, @function
bsr1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr1_mv_constant_simple, .-bsr1_mv_constant_simple

    
.globl bsr1_mv_constant_complex1
         .type   bsr1_mv_constant_complex1, @function
bsr1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr1_mv_constant_complex1, .-bsr1_mv_constant_complex1

    
.globl bsr1_mv_constant_complex2
         .type   bsr1_mv_constant_complex2, @function
bsr1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr1_mv_constant_complex2, .-bsr1_mv_constant_complex2

    
.globl bsr2_plain
         .type   bsr2_plain, @function
bsr2_plain:
      bsr %ebx,%eax
  mov $0x0,%eax

    ret
         .size   bsr2_plain, .-bsr2_plain

    
.globl bsr2_allregs
         .type   bsr2_allregs, @function
bsr2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsr %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr2_allregs, .-bsr2_allregs

    
.globl bsr2_constant_simple
         .type   bsr2_constant_simple, @function
bsr2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsr %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr2_constant_simple, .-bsr2_constant_simple

    
.globl bsr2_constant_complex1
         .type   bsr2_constant_complex1, @function
bsr2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsr %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr2_constant_complex1, .-bsr2_constant_complex1

    
.globl bsr2_constant_complex2
         .type   bsr2_constant_complex2, @function
bsr2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsr %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr2_constant_complex2, .-bsr2_constant_complex2

    
.globl bsr3_mv_plain
         .type   bsr3_mv_plain, @function
bsr3_mv_plain:
      bsr %bx,%ax
  mov $0x0,%eax

    ret
         .size   bsr3_mv_plain, .-bsr3_mv_plain

    
.globl bsr3_mv_allregs
         .type   bsr3_mv_allregs, @function
bsr3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr3_mv_allregs, .-bsr3_mv_allregs

    
.globl bsr3_mv_constant_simple
         .type   bsr3_mv_constant_simple, @function
bsr3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr3_mv_constant_simple, .-bsr3_mv_constant_simple

    
.globl bsr3_mv_constant_complex1
         .type   bsr3_mv_constant_complex1, @function
bsr3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr3_mv_constant_complex1, .-bsr3_mv_constant_complex1

    
.globl bsr3_mv_constant_complex2
         .type   bsr3_mv_constant_complex2, @function
bsr3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr3_mv_constant_complex2, .-bsr3_mv_constant_complex2

    
.globl bsr4_mv_plain
         .type   bsr4_mv_plain, @function
bsr4_mv_plain:
      bsr %ebx,%eax
  mov $0x0,%eax

    ret
         .size   bsr4_mv_plain, .-bsr4_mv_plain

    
.globl bsr4_mv_allregs
         .type   bsr4_mv_allregs, @function
bsr4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsr %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr4_mv_allregs, .-bsr4_mv_allregs

    
.globl bsr4_mv_constant_simple
         .type   bsr4_mv_constant_simple, @function
bsr4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsr %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr4_mv_constant_simple, .-bsr4_mv_constant_simple

    
.globl bsr4_mv_constant_complex1
         .type   bsr4_mv_constant_complex1, @function
bsr4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsr %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr4_mv_constant_complex1, .-bsr4_mv_constant_complex1

    
.globl bsr4_mv_constant_complex2
         .type   bsr4_mv_constant_complex2, @function
bsr4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsr %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr4_mv_constant_complex2, .-bsr4_mv_constant_complex2

    
.globl bsr5_mv_plain
         .type   bsr5_mv_plain, @function
bsr5_mv_plain:
      bsr (%bx),%ax
  mov $0x0,%eax

    ret
         .size   bsr5_mv_plain, .-bsr5_mv_plain

    
.globl bsr5_mv_allregs
         .type   bsr5_mv_allregs, @function
bsr5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsr (%bx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr5_mv_allregs, .-bsr5_mv_allregs

    
.globl bsr5_mv_constant_simple
         .type   bsr5_mv_constant_simple, @function
bsr5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsr (%bx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr5_mv_constant_simple, .-bsr5_mv_constant_simple

    
.globl bsr5_mv_constant_complex1
         .type   bsr5_mv_constant_complex1, @function
bsr5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsr (%bx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr5_mv_constant_complex1, .-bsr5_mv_constant_complex1

    
.globl bsr5_mv_constant_complex2
         .type   bsr5_mv_constant_complex2, @function
bsr5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsr (%bx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr5_mv_constant_complex2, .-bsr5_mv_constant_complex2

    
.globl bsr6_mv_plain
         .type   bsr6_mv_plain, @function
bsr6_mv_plain:
      bsr (%ebx),%eax
  mov $0x0,%eax

    ret
         .size   bsr6_mv_plain, .-bsr6_mv_plain

    
.globl bsr6_mv_allregs
         .type   bsr6_mv_allregs, @function
bsr6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsr (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr6_mv_allregs, .-bsr6_mv_allregs

    
.globl bsr6_mv_constant_simple
         .type   bsr6_mv_constant_simple, @function
bsr6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsr (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr6_mv_constant_simple, .-bsr6_mv_constant_simple

    
.globl bsr6_mv_constant_complex1
         .type   bsr6_mv_constant_complex1, @function
bsr6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsr (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr6_mv_constant_complex1, .-bsr6_mv_constant_complex1

    
.globl bsr6_mv_constant_complex2
         .type   bsr6_mv_constant_complex2, @function
bsr6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsr (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr6_mv_constant_complex2, .-bsr6_mv_constant_complex2

    
.globl bsr7_mv_plain
         .type   bsr7_mv_plain, @function
bsr7_mv_plain:
      bsr (%bx),%eax
  mov $0x0,%eax

    ret
         .size   bsr7_mv_plain, .-bsr7_mv_plain

    
.globl bsr7_mv_allregs
         .type   bsr7_mv_allregs, @function
bsr7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsr (%bx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr7_mv_allregs, .-bsr7_mv_allregs

    
.globl bsr7_mv_constant_simple
         .type   bsr7_mv_constant_simple, @function
bsr7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsr (%bx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr7_mv_constant_simple, .-bsr7_mv_constant_simple

    
.globl bsr7_mv_constant_complex1
         .type   bsr7_mv_constant_complex1, @function
bsr7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsr (%bx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr7_mv_constant_complex1, .-bsr7_mv_constant_complex1

    
.globl bsr7_mv_constant_complex2
         .type   bsr7_mv_constant_complex2, @function
bsr7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsr (%bx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr7_mv_constant_complex2, .-bsr7_mv_constant_complex2

    
.globl bsr8_mv_plain
         .type   bsr8_mv_plain, @function
bsr8_mv_plain:
      bsr (%ebx),%ax
  mov $0x0,%eax

    ret
         .size   bsr8_mv_plain, .-bsr8_mv_plain

    
.globl bsr8_mv_allregs
         .type   bsr8_mv_allregs, @function
bsr8_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bsr (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr8_mv_allregs, .-bsr8_mv_allregs

    
.globl bsr8_mv_constant_simple
         .type   bsr8_mv_constant_simple, @function
bsr8_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bsr (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr8_mv_constant_simple, .-bsr8_mv_constant_simple

    
.globl bsr8_mv_constant_complex1
         .type   bsr8_mv_constant_complex1, @function
bsr8_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bsr (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr8_mv_constant_complex1, .-bsr8_mv_constant_complex1

    
.globl bsr8_mv_constant_complex2
         .type   bsr8_mv_constant_complex2, @function
bsr8_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bsr (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bsr8_mv_constant_complex2, .-bsr8_mv_constant_complex2

    
.globl bt1_mv_plain
         .type   bt1_mv_plain, @function
bt1_mv_plain:
      bt $4,%ax
  mov $0x0,%eax

    ret
         .size   bt1_mv_plain, .-bt1_mv_plain

    
.globl bt1_mv_allregs
         .type   bt1_mv_allregs, @function
bt1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bt $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt1_mv_allregs, .-bt1_mv_allregs

    
.globl bt1_mv_constant_simple
         .type   bt1_mv_constant_simple, @function
bt1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bt $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt1_mv_constant_simple, .-bt1_mv_constant_simple

    
.globl bt1_mv_constant_complex1
         .type   bt1_mv_constant_complex1, @function
bt1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bt $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt1_mv_constant_complex1, .-bt1_mv_constant_complex1

    
.globl bt1_mv_constant_complex2
         .type   bt1_mv_constant_complex2, @function
bt1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bt $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt1_mv_constant_complex2, .-bt1_mv_constant_complex2

    
.globl bt2_mv_plain
         .type   bt2_mv_plain, @function
bt2_mv_plain:
      bt %bx,%ax
  mov $0x0,%eax

    ret
         .size   bt2_mv_plain, .-bt2_mv_plain

    
.globl bt2_mv_allregs
         .type   bt2_mv_allregs, @function
bt2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bt %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt2_mv_allregs, .-bt2_mv_allregs

    
.globl bt2_mv_constant_simple
         .type   bt2_mv_constant_simple, @function
bt2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bt %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt2_mv_constant_simple, .-bt2_mv_constant_simple

    
.globl bt2_mv_constant_complex1
         .type   bt2_mv_constant_complex1, @function
bt2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bt %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt2_mv_constant_complex1, .-bt2_mv_constant_complex1

    
.globl bt2_mv_constant_complex2
         .type   bt2_mv_constant_complex2, @function
bt2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bt %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt2_mv_constant_complex2, .-bt2_mv_constant_complex2

    
.globl bt3_plain
         .type   bt3_plain, @function
bt3_plain:
      bt $31,%eax
  mov $0x0,%eax

    ret
         .size   bt3_plain, .-bt3_plain

    
.globl bt3_allregs
         .type   bt3_allregs, @function
bt3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bt $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt3_allregs, .-bt3_allregs

    
.globl bt3_constant_simple
         .type   bt3_constant_simple, @function
bt3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bt $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt3_constant_simple, .-bt3_constant_simple

    
.globl bt3_constant_complex1
         .type   bt3_constant_complex1, @function
bt3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bt $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt3_constant_complex1, .-bt3_constant_complex1

    
.globl bt3_constant_complex2
         .type   bt3_constant_complex2, @function
bt3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bt $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt3_constant_complex2, .-bt3_constant_complex2

    
.globl bt4_mv_plain
         .type   bt4_mv_plain, @function
bt4_mv_plain:
      bt %ebx,%eax
  mov $0x0,%eax

    ret
         .size   bt4_mv_plain, .-bt4_mv_plain

    
.globl bt4_mv_allregs
         .type   bt4_mv_allregs, @function
bt4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bt %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt4_mv_allregs, .-bt4_mv_allregs

    
.globl bt4_mv_constant_simple
         .type   bt4_mv_constant_simple, @function
bt4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bt %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt4_mv_constant_simple, .-bt4_mv_constant_simple

    
.globl bt4_mv_constant_complex1
         .type   bt4_mv_constant_complex1, @function
bt4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bt %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt4_mv_constant_complex1, .-bt4_mv_constant_complex1

    
.globl bt4_mv_constant_complex2
         .type   bt4_mv_constant_complex2, @function
bt4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bt %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt4_mv_constant_complex2, .-bt4_mv_constant_complex2

    
.globl bt5_mv_plain
         .type   bt5_mv_plain, @function
bt5_mv_plain:
      bt %ebx,(%eax)
  mov $0x0,%eax

    ret
         .size   bt5_mv_plain, .-bt5_mv_plain

    
.globl bt5_mv_allregs
         .type   bt5_mv_allregs, @function
bt5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bt %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt5_mv_allregs, .-bt5_mv_allregs

    
.globl bt5_mv_constant_simple
         .type   bt5_mv_constant_simple, @function
bt5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bt %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt5_mv_constant_simple, .-bt5_mv_constant_simple

    
.globl bt5_mv_constant_complex1
         .type   bt5_mv_constant_complex1, @function
bt5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bt %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt5_mv_constant_complex1, .-bt5_mv_constant_complex1

    
.globl bt5_mv_constant_complex2
         .type   bt5_mv_constant_complex2, @function
bt5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bt %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bt5_mv_constant_complex2, .-bt5_mv_constant_complex2

    
.globl btc1_mv_plain
         .type   btc1_mv_plain, @function
btc1_mv_plain:
      btc $4,%ax
  mov $0x0,%eax

    ret
         .size   btc1_mv_plain, .-btc1_mv_plain

    
.globl btc1_mv_allregs
         .type   btc1_mv_allregs, @function
btc1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  btc $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc1_mv_allregs, .-btc1_mv_allregs

    
.globl btc1_mv_constant_simple
         .type   btc1_mv_constant_simple, @function
btc1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  btc $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc1_mv_constant_simple, .-btc1_mv_constant_simple

    
.globl btc1_mv_constant_complex1
         .type   btc1_mv_constant_complex1, @function
btc1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  btc $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc1_mv_constant_complex1, .-btc1_mv_constant_complex1

    
.globl btc1_mv_constant_complex2
         .type   btc1_mv_constant_complex2, @function
btc1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  btc $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc1_mv_constant_complex2, .-btc1_mv_constant_complex2

    
.globl btc2_mv_plain
         .type   btc2_mv_plain, @function
btc2_mv_plain:
      btc %bx,%ax
  mov $0x0,%eax

    ret
         .size   btc2_mv_plain, .-btc2_mv_plain

    
.globl btc2_mv_allregs
         .type   btc2_mv_allregs, @function
btc2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  btc %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc2_mv_allregs, .-btc2_mv_allregs

    
.globl btc2_mv_constant_simple
         .type   btc2_mv_constant_simple, @function
btc2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  btc %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc2_mv_constant_simple, .-btc2_mv_constant_simple

    
.globl btc2_mv_constant_complex1
         .type   btc2_mv_constant_complex1, @function
btc2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  btc %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc2_mv_constant_complex1, .-btc2_mv_constant_complex1

    
.globl btc2_mv_constant_complex2
         .type   btc2_mv_constant_complex2, @function
btc2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  btc %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc2_mv_constant_complex2, .-btc2_mv_constant_complex2

    
.globl btc3_plain
         .type   btc3_plain, @function
btc3_plain:
      btc $31,%eax
  mov $0x0,%eax

    ret
         .size   btc3_plain, .-btc3_plain

    
.globl btc3_allregs
         .type   btc3_allregs, @function
btc3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  btc $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc3_allregs, .-btc3_allregs

    
.globl btc3_constant_simple
         .type   btc3_constant_simple, @function
btc3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  btc $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc3_constant_simple, .-btc3_constant_simple

    
.globl btc3_constant_complex1
         .type   btc3_constant_complex1, @function
btc3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  btc $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc3_constant_complex1, .-btc3_constant_complex1

    
.globl btc3_constant_complex2
         .type   btc3_constant_complex2, @function
btc3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  btc $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc3_constant_complex2, .-btc3_constant_complex2

    
.globl btc4_mv_plain
         .type   btc4_mv_plain, @function
btc4_mv_plain:
      btc %ebx,%eax
  mov $0x0,%eax

    ret
         .size   btc4_mv_plain, .-btc4_mv_plain

    
.globl btc4_mv_allregs
         .type   btc4_mv_allregs, @function
btc4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  btc %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc4_mv_allregs, .-btc4_mv_allregs

    
.globl btc4_mv_constant_simple
         .type   btc4_mv_constant_simple, @function
btc4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  btc %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc4_mv_constant_simple, .-btc4_mv_constant_simple

    
.globl btc4_mv_constant_complex1
         .type   btc4_mv_constant_complex1, @function
btc4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  btc %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc4_mv_constant_complex1, .-btc4_mv_constant_complex1

    
.globl btc4_mv_constant_complex2
         .type   btc4_mv_constant_complex2, @function
btc4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  btc %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc4_mv_constant_complex2, .-btc4_mv_constant_complex2

    
.globl btc5_mv_plain
         .type   btc5_mv_plain, @function
btc5_mv_plain:
      btc %ebx,(%eax)
  mov $0x0,%eax

    ret
         .size   btc5_mv_plain, .-btc5_mv_plain

    
.globl btc5_mv_allregs
         .type   btc5_mv_allregs, @function
btc5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  btc %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc5_mv_allregs, .-btc5_mv_allregs

    
.globl btc5_mv_constant_simple
         .type   btc5_mv_constant_simple, @function
btc5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  btc %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc5_mv_constant_simple, .-btc5_mv_constant_simple

    
.globl btc5_mv_constant_complex1
         .type   btc5_mv_constant_complex1, @function
btc5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  btc %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc5_mv_constant_complex1, .-btc5_mv_constant_complex1

    
.globl btc5_mv_constant_complex2
         .type   btc5_mv_constant_complex2, @function
btc5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  btc %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc5_mv_constant_complex2, .-btc5_mv_constant_complex2

    
.globl btc_locked_mv_plain
         .type   btc_locked_mv_plain, @function
btc_locked_mv_plain:
      lock btc %ebx,(%eax)
  mov $0x0,%eax

    ret
         .size   btc_locked_mv_plain, .-btc_locked_mv_plain

    
.globl btc_locked_mv_allregs
         .type   btc_locked_mv_allregs, @function
btc_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lock btc %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc_locked_mv_allregs, .-btc_locked_mv_allregs

    
.globl btc_locked_mv_constant_simple
         .type   btc_locked_mv_constant_simple, @function
btc_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lock btc %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc_locked_mv_constant_simple, .-btc_locked_mv_constant_simple

    
.globl btc_locked_mv_constant_complex1
         .type   btc_locked_mv_constant_complex1, @function
btc_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lock btc %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc_locked_mv_constant_complex1, .-btc_locked_mv_constant_complex1

    
.globl btc_locked_mv_constant_complex2
         .type   btc_locked_mv_constant_complex2, @function
btc_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lock btc %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btc_locked_mv_constant_complex2, .-btc_locked_mv_constant_complex2

    
.globl btr1_mv_plain
         .type   btr1_mv_plain, @function
btr1_mv_plain:
      btr $4,%ax
  mov $0x0,%eax

    ret
         .size   btr1_mv_plain, .-btr1_mv_plain

    
.globl btr1_mv_allregs
         .type   btr1_mv_allregs, @function
btr1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  btr $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr1_mv_allregs, .-btr1_mv_allregs

    
.globl btr1_mv_constant_simple
         .type   btr1_mv_constant_simple, @function
btr1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  btr $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr1_mv_constant_simple, .-btr1_mv_constant_simple

    
.globl btr1_mv_constant_complex1
         .type   btr1_mv_constant_complex1, @function
btr1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  btr $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr1_mv_constant_complex1, .-btr1_mv_constant_complex1

    
.globl btr1_mv_constant_complex2
         .type   btr1_mv_constant_complex2, @function
btr1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  btr $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr1_mv_constant_complex2, .-btr1_mv_constant_complex2

    
.globl btr2_mv_plain
         .type   btr2_mv_plain, @function
btr2_mv_plain:
      btr %bx,%ax
  mov $0x0,%eax

    ret
         .size   btr2_mv_plain, .-btr2_mv_plain

    
.globl btr2_mv_allregs
         .type   btr2_mv_allregs, @function
btr2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  btr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr2_mv_allregs, .-btr2_mv_allregs

    
.globl btr2_mv_constant_simple
         .type   btr2_mv_constant_simple, @function
btr2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  btr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr2_mv_constant_simple, .-btr2_mv_constant_simple

    
.globl btr2_mv_constant_complex1
         .type   btr2_mv_constant_complex1, @function
btr2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  btr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr2_mv_constant_complex1, .-btr2_mv_constant_complex1

    
.globl btr2_mv_constant_complex2
         .type   btr2_mv_constant_complex2, @function
btr2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  btr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr2_mv_constant_complex2, .-btr2_mv_constant_complex2

    
.globl btr3_plain
         .type   btr3_plain, @function
btr3_plain:
      btr $31,%eax
  mov $0x0,%eax

    ret
         .size   btr3_plain, .-btr3_plain

    
.globl btr3_allregs
         .type   btr3_allregs, @function
btr3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  btr $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr3_allregs, .-btr3_allregs

    
.globl btr3_constant_simple
         .type   btr3_constant_simple, @function
btr3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  btr $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr3_constant_simple, .-btr3_constant_simple

    
.globl btr3_constant_complex1
         .type   btr3_constant_complex1, @function
btr3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  btr $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr3_constant_complex1, .-btr3_constant_complex1

    
.globl btr3_constant_complex2
         .type   btr3_constant_complex2, @function
btr3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  btr $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr3_constant_complex2, .-btr3_constant_complex2

    
.globl btr4_mv_plain
         .type   btr4_mv_plain, @function
btr4_mv_plain:
      btr %ebx,%eax
  mov $0x0,%eax

    ret
         .size   btr4_mv_plain, .-btr4_mv_plain

    
.globl btr4_mv_allregs
         .type   btr4_mv_allregs, @function
btr4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  btr %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr4_mv_allregs, .-btr4_mv_allregs

    
.globl btr4_mv_constant_simple
         .type   btr4_mv_constant_simple, @function
btr4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  btr %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr4_mv_constant_simple, .-btr4_mv_constant_simple

    
.globl btr4_mv_constant_complex1
         .type   btr4_mv_constant_complex1, @function
btr4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  btr %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr4_mv_constant_complex1, .-btr4_mv_constant_complex1

    
.globl btr4_mv_constant_complex2
         .type   btr4_mv_constant_complex2, @function
btr4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  btr %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr4_mv_constant_complex2, .-btr4_mv_constant_complex2

    
.globl btr5_mv_plain
         .type   btr5_mv_plain, @function
btr5_mv_plain:
      btr %ebx,(%eax)
  mov $0x0,%eax

    ret
         .size   btr5_mv_plain, .-btr5_mv_plain

    
.globl btr5_mv_allregs
         .type   btr5_mv_allregs, @function
btr5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  btr %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr5_mv_allregs, .-btr5_mv_allregs

    
.globl btr5_mv_constant_simple
         .type   btr5_mv_constant_simple, @function
btr5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  btr %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr5_mv_constant_simple, .-btr5_mv_constant_simple

    
.globl btr5_mv_constant_complex1
         .type   btr5_mv_constant_complex1, @function
btr5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  btr %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr5_mv_constant_complex1, .-btr5_mv_constant_complex1

    
.globl btr5_mv_constant_complex2
         .type   btr5_mv_constant_complex2, @function
btr5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  btr %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr5_mv_constant_complex2, .-btr5_mv_constant_complex2

    
.globl btr_locked_mv_plain
         .type   btr_locked_mv_plain, @function
btr_locked_mv_plain:
      lock btr %ebx,(%eax)
  mov $0x0,%eax

    ret
         .size   btr_locked_mv_plain, .-btr_locked_mv_plain

    
.globl btr_locked_mv_allregs
         .type   btr_locked_mv_allregs, @function
btr_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lock btr %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr_locked_mv_allregs, .-btr_locked_mv_allregs

    
.globl btr_locked_mv_constant_simple
         .type   btr_locked_mv_constant_simple, @function
btr_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lock btr %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr_locked_mv_constant_simple, .-btr_locked_mv_constant_simple

    
.globl btr_locked_mv_constant_complex1
         .type   btr_locked_mv_constant_complex1, @function
btr_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lock btr %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr_locked_mv_constant_complex1, .-btr_locked_mv_constant_complex1

    
.globl btr_locked_mv_constant_complex2
         .type   btr_locked_mv_constant_complex2, @function
btr_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lock btr %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   btr_locked_mv_constant_complex2, .-btr_locked_mv_constant_complex2

    
.globl bts1_mv_plain
         .type   bts1_mv_plain, @function
bts1_mv_plain:
      bts $4,%ax
  mov $0x0,%eax

    ret
         .size   bts1_mv_plain, .-bts1_mv_plain

    
.globl bts1_mv_allregs
         .type   bts1_mv_allregs, @function
bts1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bts $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts1_mv_allregs, .-bts1_mv_allregs

    
.globl bts1_mv_constant_simple
         .type   bts1_mv_constant_simple, @function
bts1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bts $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts1_mv_constant_simple, .-bts1_mv_constant_simple

    
.globl bts1_mv_constant_complex1
         .type   bts1_mv_constant_complex1, @function
bts1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bts $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts1_mv_constant_complex1, .-bts1_mv_constant_complex1

    
.globl bts1_mv_constant_complex2
         .type   bts1_mv_constant_complex2, @function
bts1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bts $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts1_mv_constant_complex2, .-bts1_mv_constant_complex2

    
.globl bts2_mv_plain
         .type   bts2_mv_plain, @function
bts2_mv_plain:
      bts %bx,%ax
  mov $0x0,%eax

    ret
         .size   bts2_mv_plain, .-bts2_mv_plain

    
.globl bts2_mv_allregs
         .type   bts2_mv_allregs, @function
bts2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bts %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts2_mv_allregs, .-bts2_mv_allregs

    
.globl bts2_mv_constant_simple
         .type   bts2_mv_constant_simple, @function
bts2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bts %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts2_mv_constant_simple, .-bts2_mv_constant_simple

    
.globl bts2_mv_constant_complex1
         .type   bts2_mv_constant_complex1, @function
bts2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bts %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts2_mv_constant_complex1, .-bts2_mv_constant_complex1

    
.globl bts2_mv_constant_complex2
         .type   bts2_mv_constant_complex2, @function
bts2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bts %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts2_mv_constant_complex2, .-bts2_mv_constant_complex2

    
.globl bts3_plain
         .type   bts3_plain, @function
bts3_plain:
      bts $31,%eax
  mov $0x0,%eax

    ret
         .size   bts3_plain, .-bts3_plain

    
.globl bts3_allregs
         .type   bts3_allregs, @function
bts3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bts $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts3_allregs, .-bts3_allregs

    
.globl bts3_constant_simple
         .type   bts3_constant_simple, @function
bts3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bts $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts3_constant_simple, .-bts3_constant_simple

    
.globl bts3_constant_complex1
         .type   bts3_constant_complex1, @function
bts3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bts $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts3_constant_complex1, .-bts3_constant_complex1

    
.globl bts3_constant_complex2
         .type   bts3_constant_complex2, @function
bts3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bts $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts3_constant_complex2, .-bts3_constant_complex2

    
.globl bts4_mv_plain
         .type   bts4_mv_plain, @function
bts4_mv_plain:
      bts %ebx,%eax
  mov $0x0,%eax

    ret
         .size   bts4_mv_plain, .-bts4_mv_plain

    
.globl bts4_mv_allregs
         .type   bts4_mv_allregs, @function
bts4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bts %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts4_mv_allregs, .-bts4_mv_allregs

    
.globl bts4_mv_constant_simple
         .type   bts4_mv_constant_simple, @function
bts4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bts %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts4_mv_constant_simple, .-bts4_mv_constant_simple

    
.globl bts4_mv_constant_complex1
         .type   bts4_mv_constant_complex1, @function
bts4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bts %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts4_mv_constant_complex1, .-bts4_mv_constant_complex1

    
.globl bts4_mv_constant_complex2
         .type   bts4_mv_constant_complex2, @function
bts4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bts %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts4_mv_constant_complex2, .-bts4_mv_constant_complex2

    
.globl bts5_mv_plain
         .type   bts5_mv_plain, @function
bts5_mv_plain:
      bts %ebx,(%eax)
  mov $0x0,%eax

    ret
         .size   bts5_mv_plain, .-bts5_mv_plain

    
.globl bts5_mv_allregs
         .type   bts5_mv_allregs, @function
bts5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  bts %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts5_mv_allregs, .-bts5_mv_allregs

    
.globl bts5_mv_constant_simple
         .type   bts5_mv_constant_simple, @function
bts5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  bts %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts5_mv_constant_simple, .-bts5_mv_constant_simple

    
.globl bts5_mv_constant_complex1
         .type   bts5_mv_constant_complex1, @function
bts5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  bts %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts5_mv_constant_complex1, .-bts5_mv_constant_complex1

    
.globl bts5_mv_constant_complex2
         .type   bts5_mv_constant_complex2, @function
bts5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  bts %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts5_mv_constant_complex2, .-bts5_mv_constant_complex2

    
.globl bts_locked_mv_plain
         .type   bts_locked_mv_plain, @function
bts_locked_mv_plain:
      lock bts %ebx,(%eax)
  mov $0x0,%eax

    ret
         .size   bts_locked_mv_plain, .-bts_locked_mv_plain

    
.globl bts_locked_mv_allregs
         .type   bts_locked_mv_allregs, @function
bts_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lock bts %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts_locked_mv_allregs, .-bts_locked_mv_allregs

    
.globl bts_locked_mv_constant_simple
         .type   bts_locked_mv_constant_simple, @function
bts_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lock bts %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts_locked_mv_constant_simple, .-bts_locked_mv_constant_simple

    
.globl bts_locked_mv_constant_complex1
         .type   bts_locked_mv_constant_complex1, @function
bts_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lock bts %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts_locked_mv_constant_complex1, .-bts_locked_mv_constant_complex1

    
.globl bts_locked_mv_constant_complex2
         .type   bts_locked_mv_constant_complex2, @function
bts_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lock bts %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   bts_locked_mv_constant_complex2, .-bts_locked_mv_constant_complex2

    
.globl call1_mv_plain
         .type   call1_mv_plain, @function
call1_mv_plain:
      .byte 0xe8,0xfb,0xff,0xff,0xff
  mov $0x0,%eax

    ret
         .size   call1_mv_plain, .-call1_mv_plain

    
.globl call1_mv_allregs
         .type   call1_mv_allregs, @function
call1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xe8,0xfb,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call1_mv_allregs, .-call1_mv_allregs

    
.globl call1_mv_constant_simple
         .type   call1_mv_constant_simple, @function
call1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xe8,0xfb,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call1_mv_constant_simple, .-call1_mv_constant_simple

    
.globl call1_mv_constant_complex1
         .type   call1_mv_constant_complex1, @function
call1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xe8,0xfb,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call1_mv_constant_complex1, .-call1_mv_constant_complex1

    
.globl call1_mv_constant_complex2
         .type   call1_mv_constant_complex2, @function
call1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xe8,0xfb,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call1_mv_constant_complex2, .-call1_mv_constant_complex2

    
.globl call2_plain
         .type   call2_plain, @function
call2_plain:
      call call2_plain
  mov $0x0,%eax

    ret
         .size   call2_plain, .-call2_plain

    
.globl call2_allregs
         .type   call2_allregs, @function
call2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  call call2_plain
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call2_allregs, .-call2_allregs

    
.globl call2_constant_simple
         .type   call2_constant_simple, @function
call2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  call call2_plain
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call2_constant_simple, .-call2_constant_simple

    
.globl call2_constant_complex1
         .type   call2_constant_complex1, @function
call2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  call call2_plain
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call2_constant_complex1, .-call2_constant_complex1

    
.globl call2_constant_complex2
         .type   call2_constant_complex2, @function
call2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  call call2_plain
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call2_constant_complex2, .-call2_constant_complex2

    
.globl call3_mv_plain
         .type   call3_mv_plain, @function
call3_mv_plain:
      call malloc
  mov $0x0,%eax

    ret
         .size   call3_mv_plain, .-call3_mv_plain

    
.globl call3_mv_allregs
         .type   call3_mv_allregs, @function
call3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  call malloc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call3_mv_allregs, .-call3_mv_allregs

    
.globl call3_mv_constant_simple
         .type   call3_mv_constant_simple, @function
call3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  call malloc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call3_mv_constant_simple, .-call3_mv_constant_simple

    
.globl call3_mv_constant_complex1
         .type   call3_mv_constant_complex1, @function
call3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  call malloc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call3_mv_constant_complex1, .-call3_mv_constant_complex1

    
.globl call3_mv_constant_complex2
         .type   call3_mv_constant_complex2, @function
call3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  call malloc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call3_mv_constant_complex2, .-call3_mv_constant_complex2

    
.globl call5_mv_plain
         .type   call5_mv_plain, @function
call5_mv_plain:
      call *%eax
  mov $0x0,%eax

    ret
         .size   call5_mv_plain, .-call5_mv_plain

    
.globl call5_mv_allregs
         .type   call5_mv_allregs, @function
call5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  call *%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call5_mv_allregs, .-call5_mv_allregs

    
.globl call5_mv_constant_simple
         .type   call5_mv_constant_simple, @function
call5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  call *%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call5_mv_constant_simple, .-call5_mv_constant_simple

    
.globl call5_mv_constant_complex1
         .type   call5_mv_constant_complex1, @function
call5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  call *%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call5_mv_constant_complex1, .-call5_mv_constant_complex1

    
.globl call5_mv_constant_complex2
         .type   call5_mv_constant_complex2, @function
call5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  call *%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call5_mv_constant_complex2, .-call5_mv_constant_complex2

    
.globl call6_mv_plain
         .type   call6_mv_plain, @function
call6_mv_plain:
      call *(%eax)
  mov $0x0,%eax

    ret
         .size   call6_mv_plain, .-call6_mv_plain

    
.globl call6_mv_allregs
         .type   call6_mv_allregs, @function
call6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  call *(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call6_mv_allregs, .-call6_mv_allregs

    
.globl call6_mv_constant_simple
         .type   call6_mv_constant_simple, @function
call6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  call *(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call6_mv_constant_simple, .-call6_mv_constant_simple

    
.globl call6_mv_constant_complex1
         .type   call6_mv_constant_complex1, @function
call6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  call *(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call6_mv_constant_complex1, .-call6_mv_constant_complex1

    
.globl call6_mv_constant_complex2
         .type   call6_mv_constant_complex2, @function
call6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  call *(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   call6_mv_constant_complex2, .-call6_mv_constant_complex2

    
.globl cbw1_plain
         .type   cbw1_plain, @function
cbw1_plain:
      .byte 0x98
  mov $0x0,%eax

    ret
         .size   cbw1_plain, .-cbw1_plain

    
.globl cbw1_allregs
         .type   cbw1_allregs, @function
cbw1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x98
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cbw1_allregs, .-cbw1_allregs

    
.globl cbw1_constant_simple
         .type   cbw1_constant_simple, @function
cbw1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x98
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cbw1_constant_simple, .-cbw1_constant_simple

    
.globl cbw1_constant_complex1
         .type   cbw1_constant_complex1, @function
cbw1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x98
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cbw1_constant_complex1, .-cbw1_constant_complex1

    
.globl cbw1_constant_complex2
         .type   cbw1_constant_complex2, @function
cbw1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x98
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cbw1_constant_complex2, .-cbw1_constant_complex2

    
.globl cbw2_plain
         .type   cbw2_plain, @function
cbw2_plain:
      .byte 0x66,0x98
  mov $0x0,%eax

    ret
         .size   cbw2_plain, .-cbw2_plain

    
.globl cbw2_allregs
         .type   cbw2_allregs, @function
cbw2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x98
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cbw2_allregs, .-cbw2_allregs

    
.globl cbw2_constant_simple
         .type   cbw2_constant_simple, @function
cbw2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x98
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cbw2_constant_simple, .-cbw2_constant_simple

    
.globl cbw2_constant_complex1
         .type   cbw2_constant_complex1, @function
cbw2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x98
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cbw2_constant_complex1, .-cbw2_constant_complex1

    
.globl cbw2_constant_complex2
         .type   cbw2_constant_complex2, @function
cbw2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x98
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cbw2_constant_complex2, .-cbw2_constant_complex2

    
.globl clc_plain
         .type   clc_plain, @function
clc_plain:
      clc
  mov $0x0,%eax

    ret
         .size   clc_plain, .-clc_plain

    
.globl clc_allregs
         .type   clc_allregs, @function
clc_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  clc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   clc_allregs, .-clc_allregs

    
.globl clc_constant_simple_clear
         .type   clc_constant_simple_clear, @function
clc_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  clc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   clc_constant_simple_clear, .-clc_constant_simple_clear

    
.globl clc_constant_simple_set
         .type   clc_constant_simple_set, @function
clc_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  clc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   clc_constant_simple_set, .-clc_constant_simple_set

    
.globl clc_constant_complex1
         .type   clc_constant_complex1, @function
clc_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  clc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   clc_constant_complex1, .-clc_constant_complex1

    
.globl clc_constant_complex2
         .type   clc_constant_complex2, @function
clc_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  clc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   clc_constant_complex2, .-clc_constant_complex2

    
.globl cld_plain
         .type   cld_plain, @function
cld_plain:
      cld
  mov $0x0,%eax

    ret
         .size   cld_plain, .-cld_plain

    
.globl cld_allregs
         .type   cld_allregs, @function
cld_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  cld
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cld_allregs, .-cld_allregs

    
.globl cld_constant_simple
         .type   cld_constant_simple, @function
cld_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  cld
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cld_constant_simple, .-cld_constant_simple

    
.globl cld_constant_complex1
         .type   cld_constant_complex1, @function
cld_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  cld
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cld_constant_complex1, .-cld_constant_complex1

    
.globl cld_constant_complex2
         .type   cld_constant_complex2, @function
cld_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  cld
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cld_constant_complex2, .-cld_constant_complex2

    
.globl cli_plain
         .type   cli_plain, @function
cli_plain:
      cli
  mov $0x0,%eax

    ret
         .size   cli_plain, .-cli_plain

    
.globl cli_allregs
         .type   cli_allregs, @function
cli_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  cli
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cli_allregs, .-cli_allregs

    
.globl cli_constant_simple
         .type   cli_constant_simple, @function
cli_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  cli
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cli_constant_simple, .-cli_constant_simple

    
.globl cli_constant_complex1
         .type   cli_constant_complex1, @function
cli_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  cli
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cli_constant_complex1, .-cli_constant_complex1

    
.globl cli_constant_complex2
         .type   cli_constant_complex2, @function
cli_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  cli
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cli_constant_complex2, .-cli_constant_complex2

    
.globl clts_plain
         .type   clts_plain, @function
clts_plain:
      clts
  mov $0x0,%eax

    ret
         .size   clts_plain, .-clts_plain

    
.globl clts_allregs
         .type   clts_allregs, @function
clts_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  clts
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   clts_allregs, .-clts_allregs

    
.globl clts_constant_simple
         .type   clts_constant_simple, @function
clts_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  clts
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   clts_constant_simple, .-clts_constant_simple

    
.globl clts_constant_complex1
         .type   clts_constant_complex1, @function
clts_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  clts
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   clts_constant_complex1, .-clts_constant_complex1

    
.globl clts_constant_complex2
         .type   clts_constant_complex2, @function
clts_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  clts
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   clts_constant_complex2, .-clts_constant_complex2

    
.globl cmc_plain
         .type   cmc_plain, @function
cmc_plain:
      cmc
  mov $0x0,%eax

    ret
         .size   cmc_plain, .-cmc_plain

    
.globl cmc_allregs
         .type   cmc_allregs, @function
cmc_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  cmc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmc_allregs, .-cmc_allregs

    
.globl cmc_constant_simple_clear
         .type   cmc_constant_simple_clear, @function
cmc_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  cmc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmc_constant_simple_clear, .-cmc_constant_simple_clear

    
.globl cmc_constant_simple_set
         .type   cmc_constant_simple_set, @function
cmc_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  cmc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmc_constant_simple_set, .-cmc_constant_simple_set

    
.globl cmc_constant_complex1
         .type   cmc_constant_complex1, @function
cmc_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  cmc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmc_constant_complex1, .-cmc_constant_complex1

    
.globl cmc_constant_complex2
         .type   cmc_constant_complex2, @function
cmc_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  cmc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmc_constant_complex2, .-cmc_constant_complex2

    
.globl cmp1_mv_plain
         .type   cmp1_mv_plain, @function
cmp1_mv_plain:
      .byte 0x3c,0x02
  mov $0x0,%eax

    ret
         .size   cmp1_mv_plain, .-cmp1_mv_plain

    
.globl cmp1_mv_allregs
         .type   cmp1_mv_allregs, @function
cmp1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x3c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp1_mv_allregs, .-cmp1_mv_allregs

    
.globl cmp1_mv_constant_simple
         .type   cmp1_mv_constant_simple, @function
cmp1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x3c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp1_mv_constant_simple, .-cmp1_mv_constant_simple

    
.globl cmp1_mv_constant_complex1
         .type   cmp1_mv_constant_complex1, @function
cmp1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x3c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp1_mv_constant_complex1, .-cmp1_mv_constant_complex1

    
.globl cmp1_mv_constant_complex2
         .type   cmp1_mv_constant_complex2, @function
cmp1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x3c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp1_mv_constant_complex2, .-cmp1_mv_constant_complex2

    
.globl cmp2_mv_plain
         .type   cmp2_mv_plain, @function
cmp2_mv_plain:
      .byte 0x3c,0xfe
  mov $0x0,%eax

    ret
         .size   cmp2_mv_plain, .-cmp2_mv_plain

    
.globl cmp2_mv_allregs
         .type   cmp2_mv_allregs, @function
cmp2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x3c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp2_mv_allregs, .-cmp2_mv_allregs

    
.globl cmp2_mv_constant_simple
         .type   cmp2_mv_constant_simple, @function
cmp2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x3c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp2_mv_constant_simple, .-cmp2_mv_constant_simple

    
.globl cmp2_mv_constant_complex1
         .type   cmp2_mv_constant_complex1, @function
cmp2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x3c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp2_mv_constant_complex1, .-cmp2_mv_constant_complex1

    
.globl cmp2_mv_constant_complex2
         .type   cmp2_mv_constant_complex2, @function
cmp2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x3c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp2_mv_constant_complex2, .-cmp2_mv_constant_complex2

    
.globl cmp3_mv_plain
         .type   cmp3_mv_plain, @function
cmp3_mv_plain:
      .byte 0x66,0x3d,0x02,0x00
  mov $0x0,%eax

    ret
         .size   cmp3_mv_plain, .-cmp3_mv_plain

    
.globl cmp3_mv_allregs
         .type   cmp3_mv_allregs, @function
cmp3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x3d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp3_mv_allregs, .-cmp3_mv_allregs

    
.globl cmp3_mv_constant_simple
         .type   cmp3_mv_constant_simple, @function
cmp3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x3d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp3_mv_constant_simple, .-cmp3_mv_constant_simple

    
.globl cmp3_mv_constant_complex1
         .type   cmp3_mv_constant_complex1, @function
cmp3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x3d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp3_mv_constant_complex1, .-cmp3_mv_constant_complex1

    
.globl cmp3_mv_constant_complex2
         .type   cmp3_mv_constant_complex2, @function
cmp3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x3d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp3_mv_constant_complex2, .-cmp3_mv_constant_complex2

    
.globl cmp4_mv_plain
         .type   cmp4_mv_plain, @function
cmp4_mv_plain:
      .byte 0x66,0x3d,0xfe,0xff
  mov $0x0,%eax

    ret
         .size   cmp4_mv_plain, .-cmp4_mv_plain

    
.globl cmp4_mv_allregs
         .type   cmp4_mv_allregs, @function
cmp4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x3d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp4_mv_allregs, .-cmp4_mv_allregs

    
.globl cmp4_mv_constant_simple
         .type   cmp4_mv_constant_simple, @function
cmp4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x3d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp4_mv_constant_simple, .-cmp4_mv_constant_simple

    
.globl cmp4_mv_constant_complex1
         .type   cmp4_mv_constant_complex1, @function
cmp4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x3d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp4_mv_constant_complex1, .-cmp4_mv_constant_complex1

    
.globl cmp4_mv_constant_complex2
         .type   cmp4_mv_constant_complex2, @function
cmp4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x3d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp4_mv_constant_complex2, .-cmp4_mv_constant_complex2

    
.globl cmp5_plain
         .type   cmp5_plain, @function
cmp5_plain:
      .byte 0x3d,0x02,0x00,0x00,0x00
  mov $0x0,%eax

    ret
         .size   cmp5_plain, .-cmp5_plain

    
.globl cmp5_allregs
         .type   cmp5_allregs, @function
cmp5_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x3d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp5_allregs, .-cmp5_allregs

    
.globl cmp5_constant_simple
         .type   cmp5_constant_simple, @function
cmp5_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x3d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp5_constant_simple, .-cmp5_constant_simple

    
.globl cmp5_constant_complex1
         .type   cmp5_constant_complex1, @function
cmp5_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x3d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp5_constant_complex1, .-cmp5_constant_complex1

    
.globl cmp5_constant_complex2
         .type   cmp5_constant_complex2, @function
cmp5_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x3d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp5_constant_complex2, .-cmp5_constant_complex2

    
.globl cmp6_mv_plain
         .type   cmp6_mv_plain, @function
cmp6_mv_plain:
      .byte 0x3d,0xfe,0xff,0xff,0xff
  mov $0x0,%eax

    ret
         .size   cmp6_mv_plain, .-cmp6_mv_plain

    
.globl cmp6_mv_allregs
         .type   cmp6_mv_allregs, @function
cmp6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x3d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp6_mv_allregs, .-cmp6_mv_allregs

    
.globl cmp6_mv_constant_simple
         .type   cmp6_mv_constant_simple, @function
cmp6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x3d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp6_mv_constant_simple, .-cmp6_mv_constant_simple

    
.globl cmp6_mv_constant_complex1
         .type   cmp6_mv_constant_complex1, @function
cmp6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x3d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp6_mv_constant_complex1, .-cmp6_mv_constant_complex1

    
.globl cmp6_mv_constant_complex2
         .type   cmp6_mv_constant_complex2, @function
cmp6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x3d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp6_mv_constant_complex2, .-cmp6_mv_constant_complex2

    
.globl cmp7_mv_plain
         .type   cmp7_mv_plain, @function
cmp7_mv_plain:
      cmpl 8(%ebp), %eax
  mov $0x0,%eax

    ret
         .size   cmp7_mv_plain, .-cmp7_mv_plain

    
.globl cmp7_mv_allregs
         .type   cmp7_mv_allregs, @function
cmp7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  cmpl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp7_mv_allregs, .-cmp7_mv_allregs

    
.globl cmp7_mv_constant_simple
         .type   cmp7_mv_constant_simple, @function
cmp7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  cmpl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp7_mv_constant_simple, .-cmp7_mv_constant_simple

    
.globl cmp7_mv_constant_complex1
         .type   cmp7_mv_constant_complex1, @function
cmp7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  cmpl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp7_mv_constant_complex1, .-cmp7_mv_constant_complex1

    
.globl cmp7_mv_constant_complex2
         .type   cmp7_mv_constant_complex2, @function
cmp7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  cmpl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp7_mv_constant_complex2, .-cmp7_mv_constant_complex2

    
.globl cmp8_mv_plain
         .type   cmp8_mv_plain, @function
cmp8_mv_plain:
      cmpl $100, 7(%eax,%ebp)
  mov $0x0,%eax

    ret
         .size   cmp8_mv_plain, .-cmp8_mv_plain

    
.globl cmp8_mv_allregs
         .type   cmp8_mv_allregs, @function
cmp8_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  cmpl $100, 7(%eax,%ebp)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp8_mv_allregs, .-cmp8_mv_allregs

    
.globl cmp8_mv_constant_simple
         .type   cmp8_mv_constant_simple, @function
cmp8_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  cmpl $100, 7(%eax,%ebp)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp8_mv_constant_simple, .-cmp8_mv_constant_simple

    
.globl cmp8_mv_constant_complex1
         .type   cmp8_mv_constant_complex1, @function
cmp8_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  cmpl $100, 7(%eax,%ebp)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp8_mv_constant_complex1, .-cmp8_mv_constant_complex1

    
.globl cmp8_mv_constant_complex2
         .type   cmp8_mv_constant_complex2, @function
cmp8_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  cmpl $100, 7(%eax,%ebp)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmp8_mv_constant_complex2, .-cmp8_mv_constant_complex2

    
.globl cmps1_plain
         .type   cmps1_plain, @function
cmps1_plain:
      .byte 0xa6
  mov $0x0,%eax

    ret
         .size   cmps1_plain, .-cmps1_plain

    
.globl cmps1_allregs
         .type   cmps1_allregs, @function
cmps1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps1_allregs, .-cmps1_allregs

    
.globl cmps1_constant_simple
         .type   cmps1_constant_simple, @function
cmps1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps1_constant_simple, .-cmps1_constant_simple

    
.globl cmps1_constant_complex1
         .type   cmps1_constant_complex1, @function
cmps1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps1_constant_complex1, .-cmps1_constant_complex1

    
.globl cmps1_constant_complex2
         .type   cmps1_constant_complex2, @function
cmps1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps1_constant_complex2, .-cmps1_constant_complex2

    
.globl cmps2_mv_plain
         .type   cmps2_mv_plain, @function
cmps2_mv_plain:
      .byte 0x67,0xa6
  mov $0x0,%eax

    ret
         .size   cmps2_mv_plain, .-cmps2_mv_plain

    
.globl cmps2_mv_allregs
         .type   cmps2_mv_allregs, @function
cmps2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x67,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps2_mv_allregs, .-cmps2_mv_allregs

    
.globl cmps2_mv_constant_simple
         .type   cmps2_mv_constant_simple, @function
cmps2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x67,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps2_mv_constant_simple, .-cmps2_mv_constant_simple

    
.globl cmps2_mv_constant_complex1
         .type   cmps2_mv_constant_complex1, @function
cmps2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x67,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps2_mv_constant_complex1, .-cmps2_mv_constant_complex1

    
.globl cmps2_mv_constant_complex2
         .type   cmps2_mv_constant_complex2, @function
cmps2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x67,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps2_mv_constant_complex2, .-cmps2_mv_constant_complex2

    
.globl cmps3_plain
         .type   cmps3_plain, @function
cmps3_plain:
      .byte 0xa7
  mov $0x0,%eax

    ret
         .size   cmps3_plain, .-cmps3_plain

    
.globl cmps3_allregs
         .type   cmps3_allregs, @function
cmps3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps3_allregs, .-cmps3_allregs

    
.globl cmps3_constant_simple
         .type   cmps3_constant_simple, @function
cmps3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps3_constant_simple, .-cmps3_constant_simple

    
.globl cmps3_constant_complex1
         .type   cmps3_constant_complex1, @function
cmps3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps3_constant_complex1, .-cmps3_constant_complex1

    
.globl cmps3_constant_complex2
         .type   cmps3_constant_complex2, @function
cmps3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps3_constant_complex2, .-cmps3_constant_complex2

    
.globl cmps4_mv_plain
         .type   cmps4_mv_plain, @function
cmps4_mv_plain:
      .byte 0x66,0xa7
  mov $0x0,%eax

    ret
         .size   cmps4_mv_plain, .-cmps4_mv_plain

    
.globl cmps4_mv_allregs
         .type   cmps4_mv_allregs, @function
cmps4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps4_mv_allregs, .-cmps4_mv_allregs

    
.globl cmps4_mv_constant_simple
         .type   cmps4_mv_constant_simple, @function
cmps4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps4_mv_constant_simple, .-cmps4_mv_constant_simple

    
.globl cmps4_mv_constant_complex1
         .type   cmps4_mv_constant_complex1, @function
cmps4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps4_mv_constant_complex1, .-cmps4_mv_constant_complex1

    
.globl cmps4_mv_constant_complex2
         .type   cmps4_mv_constant_complex2, @function
cmps4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps4_mv_constant_complex2, .-cmps4_mv_constant_complex2

    
.globl cmps5_mv_plain
         .type   cmps5_mv_plain, @function
cmps5_mv_plain:
      .byte 0x66,0x67,0xa7
  mov $0x0,%eax

    ret
         .size   cmps5_mv_plain, .-cmps5_mv_plain

    
.globl cmps5_mv_allregs
         .type   cmps5_mv_allregs, @function
cmps5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps5_mv_allregs, .-cmps5_mv_allregs

    
.globl cmps5_mv_constant_simple
         .type   cmps5_mv_constant_simple, @function
cmps5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps5_mv_constant_simple, .-cmps5_mv_constant_simple

    
.globl cmps5_mv_constant_complex1
         .type   cmps5_mv_constant_complex1, @function
cmps5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps5_mv_constant_complex1, .-cmps5_mv_constant_complex1

    
.globl cmps5_mv_constant_complex2
         .type   cmps5_mv_constant_complex2, @function
cmps5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps5_mv_constant_complex2, .-cmps5_mv_constant_complex2

    
.globl cmps6_mv_plain
         .type   cmps6_mv_plain, @function
cmps6_mv_plain:
      .byte 0x67,0xa7
  mov $0x0,%eax

    ret
         .size   cmps6_mv_plain, .-cmps6_mv_plain

    
.globl cmps6_mv_allregs
         .type   cmps6_mv_allregs, @function
cmps6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps6_mv_allregs, .-cmps6_mv_allregs

    
.globl cmps6_mv_constant_simple
         .type   cmps6_mv_constant_simple, @function
cmps6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps6_mv_constant_simple, .-cmps6_mv_constant_simple

    
.globl cmps6_mv_constant_complex1
         .type   cmps6_mv_constant_complex1, @function
cmps6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps6_mv_constant_complex1, .-cmps6_mv_constant_complex1

    
.globl cmps6_mv_constant_complex2
         .type   cmps6_mv_constant_complex2, @function
cmps6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps6_mv_constant_complex2, .-cmps6_mv_constant_complex2

    
.globl cmps_seg_mv_plain
         .type   cmps_seg_mv_plain, @function
cmps_seg_mv_plain:
      .byte 0x36,0x67,0xa7
  mov $0x0,%eax

    ret
         .size   cmps_seg_mv_plain, .-cmps_seg_mv_plain

    
.globl cmps_seg_mv_allregs
         .type   cmps_seg_mv_allregs, @function
cmps_seg_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x36,0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps_seg_mv_allregs, .-cmps_seg_mv_allregs

    
.globl cmps_seg_mv_constant_simple
         .type   cmps_seg_mv_constant_simple, @function
cmps_seg_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x36,0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps_seg_mv_constant_simple, .-cmps_seg_mv_constant_simple

    
.globl cmps_seg_mv_constant_complex1
         .type   cmps_seg_mv_constant_complex1, @function
cmps_seg_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x36,0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps_seg_mv_constant_complex1, .-cmps_seg_mv_constant_complex1

    
.globl cmps_seg_mv_constant_complex2
         .type   cmps_seg_mv_constant_complex2, @function
cmps_seg_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x36,0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cmps_seg_mv_constant_complex2, .-cmps_seg_mv_constant_complex2

    
.globl cwd1_plain
         .type   cwd1_plain, @function
cwd1_plain:
      .byte 0x99
  mov $0x0,%eax

    ret
         .size   cwd1_plain, .-cwd1_plain

    
.globl cwd1_allregs
         .type   cwd1_allregs, @function
cwd1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x99
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cwd1_allregs, .-cwd1_allregs

    
.globl cwd1_constant_simple
         .type   cwd1_constant_simple, @function
cwd1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x99
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cwd1_constant_simple, .-cwd1_constant_simple

    
.globl cwd1_constant_complex1
         .type   cwd1_constant_complex1, @function
cwd1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x99
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cwd1_constant_complex1, .-cwd1_constant_complex1

    
.globl cwd1_constant_complex2
         .type   cwd1_constant_complex2, @function
cwd1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x99
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cwd1_constant_complex2, .-cwd1_constant_complex2

    
.globl cwd2_plain
         .type   cwd2_plain, @function
cwd2_plain:
      .byte 0x66,0x99
  mov $0x0,%eax

    ret
         .size   cwd2_plain, .-cwd2_plain

    
.globl cwd2_allregs
         .type   cwd2_allregs, @function
cwd2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x99
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cwd2_allregs, .-cwd2_allregs

    
.globl cwd2_constant_simple
         .type   cwd2_constant_simple, @function
cwd2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x99
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cwd2_constant_simple, .-cwd2_constant_simple

    
.globl cwd2_constant_complex1
         .type   cwd2_constant_complex1, @function
cwd2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x99
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cwd2_constant_complex1, .-cwd2_constant_complex1

    
.globl cwd2_constant_complex2
         .type   cwd2_constant_complex2, @function
cwd2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x99
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   cwd2_constant_complex2, .-cwd2_constant_complex2

    
.globl daa_plain
         .type   daa_plain, @function
daa_plain:
      daa
  mov $0x0,%eax

    ret
         .size   daa_plain, .-daa_plain

    
.globl daa_allregs
         .type   daa_allregs, @function
daa_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  daa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   daa_allregs, .-daa_allregs

    
.globl daa_constant_simple_clear
         .type   daa_constant_simple_clear, @function
daa_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  daa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   daa_constant_simple_clear, .-daa_constant_simple_clear

    
.globl daa_constant_simple_set
         .type   daa_constant_simple_set, @function
daa_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  daa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   daa_constant_simple_set, .-daa_constant_simple_set

    
.globl daa_constant_complex1
         .type   daa_constant_complex1, @function
daa_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  daa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   daa_constant_complex1, .-daa_constant_complex1

    
.globl daa_constant_complex2
         .type   daa_constant_complex2, @function
daa_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  daa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   daa_constant_complex2, .-daa_constant_complex2

    
.globl das_plain
         .type   das_plain, @function
das_plain:
      das
  mov $0x0,%eax

    ret
         .size   das_plain, .-das_plain

    
.globl das_allregs
         .type   das_allregs, @function
das_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  das
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   das_allregs, .-das_allregs

    
.globl das_constant_simple_clear
         .type   das_constant_simple_clear, @function
das_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  das
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   das_constant_simple_clear, .-das_constant_simple_clear

    
.globl das_constant_simple_set
         .type   das_constant_simple_set, @function
das_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  das
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   das_constant_simple_set, .-das_constant_simple_set

    
.globl das_constant_complex1
         .type   das_constant_complex1, @function
das_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  das
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   das_constant_complex1, .-das_constant_complex1

    
.globl das_constant_complex2
         .type   das_constant_complex2, @function
das_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  das
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   das_constant_complex2, .-das_constant_complex2

    
.globl dec1_mv_plain
         .type   dec1_mv_plain, @function
dec1_mv_plain:
      dec %al
  mov $0x0,%eax

    ret
         .size   dec1_mv_plain, .-dec1_mv_plain

    
.globl dec1_mv_allregs
         .type   dec1_mv_allregs, @function
dec1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  dec %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec1_mv_allregs, .-dec1_mv_allregs

    
.globl dec1_mv_constant_simple
         .type   dec1_mv_constant_simple, @function
dec1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  dec %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec1_mv_constant_simple, .-dec1_mv_constant_simple

    
.globl dec1_mv_constant_complex1
         .type   dec1_mv_constant_complex1, @function
dec1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  dec %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec1_mv_constant_complex1, .-dec1_mv_constant_complex1

    
.globl dec1_mv_constant_complex2
         .type   dec1_mv_constant_complex2, @function
dec1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  dec %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec1_mv_constant_complex2, .-dec1_mv_constant_complex2

    
.globl dec2_mv_plain
         .type   dec2_mv_plain, @function
dec2_mv_plain:
      dec %ax
  mov $0x0,%eax

    ret
         .size   dec2_mv_plain, .-dec2_mv_plain

    
.globl dec2_mv_allregs
         .type   dec2_mv_allregs, @function
dec2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  dec %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec2_mv_allregs, .-dec2_mv_allregs

    
.globl dec2_mv_constant_simple
         .type   dec2_mv_constant_simple, @function
dec2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  dec %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec2_mv_constant_simple, .-dec2_mv_constant_simple

    
.globl dec2_mv_constant_complex1
         .type   dec2_mv_constant_complex1, @function
dec2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  dec %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec2_mv_constant_complex1, .-dec2_mv_constant_complex1

    
.globl dec2_mv_constant_complex2
         .type   dec2_mv_constant_complex2, @function
dec2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  dec %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec2_mv_constant_complex2, .-dec2_mv_constant_complex2

    
.globl dec3_mv_plain
         .type   dec3_mv_plain, @function
dec3_mv_plain:
      dec %ah
  mov $0x0,%eax

    ret
         .size   dec3_mv_plain, .-dec3_mv_plain

    
.globl dec3_mv_allregs
         .type   dec3_mv_allregs, @function
dec3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  dec %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec3_mv_allregs, .-dec3_mv_allregs

    
.globl dec3_mv_constant_simple
         .type   dec3_mv_constant_simple, @function
dec3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  dec %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec3_mv_constant_simple, .-dec3_mv_constant_simple

    
.globl dec3_mv_constant_complex1
         .type   dec3_mv_constant_complex1, @function
dec3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  dec %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec3_mv_constant_complex1, .-dec3_mv_constant_complex1

    
.globl dec3_mv_constant_complex2
         .type   dec3_mv_constant_complex2, @function
dec3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  dec %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec3_mv_constant_complex2, .-dec3_mv_constant_complex2

    
.globl dec4_plain
         .type   dec4_plain, @function
dec4_plain:
      dec %eax
  mov $0x0,%eax

    ret
         .size   dec4_plain, .-dec4_plain

    
.globl dec4_allregs
         .type   dec4_allregs, @function
dec4_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  dec %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec4_allregs, .-dec4_allregs

    
.globl dec4_constant_simple
         .type   dec4_constant_simple, @function
dec4_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  dec %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec4_constant_simple, .-dec4_constant_simple

    
.globl dec4_constant_complex1
         .type   dec4_constant_complex1, @function
dec4_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  dec %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec4_constant_complex1, .-dec4_constant_complex1

    
.globl dec4_constant_complex2
         .type   dec4_constant_complex2, @function
dec4_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  dec %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec4_constant_complex2, .-dec4_constant_complex2

    
.globl dec5b_mv_plain
         .type   dec5b_mv_plain, @function
dec5b_mv_plain:
      decb (%eax)
  mov $0x0,%eax

    ret
         .size   dec5b_mv_plain, .-dec5b_mv_plain

    
.globl dec5b_mv_allregs
         .type   dec5b_mv_allregs, @function
dec5b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  decb (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec5b_mv_allregs, .-dec5b_mv_allregs

    
.globl dec5b_mv_constant_simple
         .type   dec5b_mv_constant_simple, @function
dec5b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  decb (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec5b_mv_constant_simple, .-dec5b_mv_constant_simple

    
.globl dec5b_mv_constant_complex1
         .type   dec5b_mv_constant_complex1, @function
dec5b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  decb (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec5b_mv_constant_complex1, .-dec5b_mv_constant_complex1

    
.globl dec5b_mv_constant_complex2
         .type   dec5b_mv_constant_complex2, @function
dec5b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  decb (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec5b_mv_constant_complex2, .-dec5b_mv_constant_complex2

    
.globl dec5w_mv_plain
         .type   dec5w_mv_plain, @function
dec5w_mv_plain:
      decw (%eax)
  mov $0x0,%eax

    ret
         .size   dec5w_mv_plain, .-dec5w_mv_plain

    
.globl dec5w_mv_allregs
         .type   dec5w_mv_allregs, @function
dec5w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  decw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec5w_mv_allregs, .-dec5w_mv_allregs

    
.globl dec5w_mv_constant_simple
         .type   dec5w_mv_constant_simple, @function
dec5w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  decw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec5w_mv_constant_simple, .-dec5w_mv_constant_simple

    
.globl dec5w_mv_constant_complex1
         .type   dec5w_mv_constant_complex1, @function
dec5w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  decw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec5w_mv_constant_complex1, .-dec5w_mv_constant_complex1

    
.globl dec5w_mv_constant_complex2
         .type   dec5w_mv_constant_complex2, @function
dec5w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  decw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec5w_mv_constant_complex2, .-dec5w_mv_constant_complex2

    
.globl dec5l_mv_plain
         .type   dec5l_mv_plain, @function
dec5l_mv_plain:
      decl (%eax)
  mov $0x0,%eax

    ret
         .size   dec5l_mv_plain, .-dec5l_mv_plain

    
.globl dec5l_mv_allregs
         .type   dec5l_mv_allregs, @function
dec5l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  decl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec5l_mv_allregs, .-dec5l_mv_allregs

    
.globl dec5l_mv_constant_simple
         .type   dec5l_mv_constant_simple, @function
dec5l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  decl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec5l_mv_constant_simple, .-dec5l_mv_constant_simple

    
.globl dec5l_mv_constant_complex1
         .type   dec5l_mv_constant_complex1, @function
dec5l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  decl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec5l_mv_constant_complex1, .-dec5l_mv_constant_complex1

    
.globl dec5l_mv_constant_complex2
         .type   dec5l_mv_constant_complex2, @function
dec5l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  decl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec5l_mv_constant_complex2, .-dec5l_mv_constant_complex2

    
.globl dec_locked_mv_plain
         .type   dec_locked_mv_plain, @function
dec_locked_mv_plain:
      lock decl (%eax)
  mov $0x0,%eax

    ret
         .size   dec_locked_mv_plain, .-dec_locked_mv_plain

    
.globl dec_locked_mv_allregs
         .type   dec_locked_mv_allregs, @function
dec_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lock decl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec_locked_mv_allregs, .-dec_locked_mv_allregs

    
.globl dec_locked_mv_constant_simple
         .type   dec_locked_mv_constant_simple, @function
dec_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lock decl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec_locked_mv_constant_simple, .-dec_locked_mv_constant_simple

    
.globl dec_locked_mv_constant_complex1
         .type   dec_locked_mv_constant_complex1, @function
dec_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lock decl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec_locked_mv_constant_complex1, .-dec_locked_mv_constant_complex1

    
.globl dec_locked_mv_constant_complex2
         .type   dec_locked_mv_constant_complex2, @function
dec_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lock decl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   dec_locked_mv_constant_complex2, .-dec_locked_mv_constant_complex2

    
.globl div1_plain
         .type   div1_plain, @function
div1_plain:
      div %bl,%al
  mov $0x0,%eax

    ret
         .size   div1_plain, .-div1_plain

    
.globl div1_allregs
         .type   div1_allregs, @function
div1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  div %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div1_allregs, .-div1_allregs

    
.globl div1_constant_simple
         .type   div1_constant_simple, @function
div1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  div %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div1_constant_simple, .-div1_constant_simple

    
.globl div1_constant_complex1
         .type   div1_constant_complex1, @function
div1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  div %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div1_constant_complex1, .-div1_constant_complex1

    
.globl div1_constant_complex2
         .type   div1_constant_complex2, @function
div1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  div %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div1_constant_complex2, .-div1_constant_complex2

    
.globl div2_plain
         .type   div2_plain, @function
div2_plain:
      div %bp,%ax
  mov $0x0,%eax

    ret
         .size   div2_plain, .-div2_plain

    
.globl div2_allregs
         .type   div2_allregs, @function
div2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  div %bp,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div2_allregs, .-div2_allregs

    
.globl div2_constant_simple
         .type   div2_constant_simple, @function
div2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  div %bp,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div2_constant_simple, .-div2_constant_simple

    
.globl div2_constant_complex1
         .type   div2_constant_complex1, @function
div2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  div %bp,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div2_constant_complex1, .-div2_constant_complex1

    
.globl div2_constant_complex2
         .type   div2_constant_complex2, @function
div2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  div %bp,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div2_constant_complex2, .-div2_constant_complex2

    
.globl div3_plain
         .type   div3_plain, @function
div3_plain:
      div %edi,%eax
  mov $0x0,%eax

    ret
         .size   div3_plain, .-div3_plain

    
.globl div3_allregs
         .type   div3_allregs, @function
div3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  div %edi,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div3_allregs, .-div3_allregs

    
.globl div3_constant_simple
         .type   div3_constant_simple, @function
div3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  div %edi,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div3_constant_simple, .-div3_constant_simple

    
.globl div3_constant_complex1
         .type   div3_constant_complex1, @function
div3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  div %edi,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div3_constant_complex1, .-div3_constant_complex1

    
.globl div3_constant_complex2
         .type   div3_constant_complex2, @function
div3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  div %edi,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div3_constant_complex2, .-div3_constant_complex2

    
.globl div4_mv_plain
         .type   div4_mv_plain, @function
div4_mv_plain:
      divb 0x1234(%ebx),%al
  mov $0x0,%eax

    ret
         .size   div4_mv_plain, .-div4_mv_plain

    
.globl div4_mv_allregs
         .type   div4_mv_allregs, @function
div4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  divb 0x1234(%ebx),%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div4_mv_allregs, .-div4_mv_allregs

    
.globl div4_mv_constant_simple
         .type   div4_mv_constant_simple, @function
div4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  divb 0x1234(%ebx),%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div4_mv_constant_simple, .-div4_mv_constant_simple

    
.globl div4_mv_constant_complex1
         .type   div4_mv_constant_complex1, @function
div4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  divb 0x1234(%ebx),%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div4_mv_constant_complex1, .-div4_mv_constant_complex1

    
.globl div4_mv_constant_complex2
         .type   div4_mv_constant_complex2, @function
div4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  divb 0x1234(%ebx),%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   div4_mv_constant_complex2, .-div4_mv_constant_complex2

    
.globl enter1_plain
         .type   enter1_plain, @function
enter1_plain:
      .byte 0xc8,0x34,0x12,0x00
  mov $0x0,%eax

    ret
         .size   enter1_plain, .-enter1_plain

    
.globl enter1_allregs
         .type   enter1_allregs, @function
enter1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc8,0x34,0x12,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   enter1_allregs, .-enter1_allregs

    
.globl enter1_constant_simple
         .type   enter1_constant_simple, @function
enter1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc8,0x34,0x12,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   enter1_constant_simple, .-enter1_constant_simple

    
.globl enter1_constant_complex1
         .type   enter1_constant_complex1, @function
enter1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc8,0x34,0x12,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   enter1_constant_complex1, .-enter1_constant_complex1

    
.globl enter1_constant_complex2
         .type   enter1_constant_complex2, @function
enter1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc8,0x34,0x12,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   enter1_constant_complex2, .-enter1_constant_complex2

    
.globl enter2_mv_plain
         .type   enter2_mv_plain, @function
enter2_mv_plain:
      .byte 0xc8,0x34,0x12,0x01
  mov $0x0,%eax

    ret
         .size   enter2_mv_plain, .-enter2_mv_plain

    
.globl enter2_mv_allregs
         .type   enter2_mv_allregs, @function
enter2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc8,0x34,0x12,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   enter2_mv_allregs, .-enter2_mv_allregs

    
.globl enter2_mv_constant_simple
         .type   enter2_mv_constant_simple, @function
enter2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc8,0x34,0x12,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   enter2_mv_constant_simple, .-enter2_mv_constant_simple

    
.globl enter2_mv_constant_complex1
         .type   enter2_mv_constant_complex1, @function
enter2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc8,0x34,0x12,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   enter2_mv_constant_complex1, .-enter2_mv_constant_complex1

    
.globl enter2_mv_constant_complex2
         .type   enter2_mv_constant_complex2, @function
enter2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc8,0x34,0x12,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   enter2_mv_constant_complex2, .-enter2_mv_constant_complex2

    
.globl enter3_mv_plain
         .type   enter3_mv_plain, @function
enter3_mv_plain:
      .byte 0xc8,0x34,0x12,0x55
  mov $0x0,%eax

    ret
         .size   enter3_mv_plain, .-enter3_mv_plain

    
.globl enter3_mv_allregs
         .type   enter3_mv_allregs, @function
enter3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc8,0x34,0x12,0x55
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   enter3_mv_allregs, .-enter3_mv_allregs

    
.globl enter3_mv_constant_simple
         .type   enter3_mv_constant_simple, @function
enter3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc8,0x34,0x12,0x55
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   enter3_mv_constant_simple, .-enter3_mv_constant_simple

    
.globl enter3_mv_constant_complex1
         .type   enter3_mv_constant_complex1, @function
enter3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc8,0x34,0x12,0x55
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   enter3_mv_constant_complex1, .-enter3_mv_constant_complex1

    
.globl enter3_mv_constant_complex2
         .type   enter3_mv_constant_complex2, @function
enter3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc8,0x34,0x12,0x55
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   enter3_mv_constant_complex2, .-enter3_mv_constant_complex2

    
.globl hlt_plain
         .type   hlt_plain, @function
hlt_plain:
      hlt
  mov $0x0,%eax

    ret
         .size   hlt_plain, .-hlt_plain

    
.globl hlt_allregs
         .type   hlt_allregs, @function
hlt_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  hlt
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   hlt_allregs, .-hlt_allregs

    
.globl hlt_constant_simple
         .type   hlt_constant_simple, @function
hlt_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  hlt
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   hlt_constant_simple, .-hlt_constant_simple

    
.globl hlt_constant_complex1
         .type   hlt_constant_complex1, @function
hlt_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  hlt
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   hlt_constant_complex1, .-hlt_constant_complex1

    
.globl hlt_constant_complex2
         .type   hlt_constant_complex2, @function
hlt_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  hlt
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   hlt_constant_complex2, .-hlt_constant_complex2

    
.globl idiv1_plain
         .type   idiv1_plain, @function
idiv1_plain:
      idiv %cl,%al
  mov $0x0,%eax

    ret
         .size   idiv1_plain, .-idiv1_plain

    
.globl idiv1_allregs
         .type   idiv1_allregs, @function
idiv1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  idiv %cl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   idiv1_allregs, .-idiv1_allregs

    
.globl idiv1_constant_simple
         .type   idiv1_constant_simple, @function
idiv1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  idiv %cl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   idiv1_constant_simple, .-idiv1_constant_simple

    
.globl idiv1_constant_complex1
         .type   idiv1_constant_complex1, @function
idiv1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b11984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  idiv %cl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   idiv1_constant_complex1, .-idiv1_constant_complex1

    
.globl idiv1_constant_complex2
         .type   idiv1_constant_complex2, @function
idiv1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0xa3b1f978,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  idiv %cl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   idiv1_constant_complex2, .-idiv1_constant_complex2

    
.globl idiv2_plain
         .type   idiv2_plain, @function
idiv2_plain:
      idiv %cx,%ax
  mov $0x0,%eax

    ret
         .size   idiv2_plain, .-idiv2_plain

    
.globl idiv2_allregs
         .type   idiv2_allregs, @function
idiv2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  idiv %cx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   idiv2_allregs, .-idiv2_allregs

    
.globl idiv2_constant_simple
         .type   idiv2_constant_simple, @function
idiv2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $0xf3,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  idiv %cx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   idiv2_constant_simple, .-idiv2_constant_simple

    
.globl idiv2_constant_complex1
         .type   idiv2_constant_complex1, @function
idiv2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0xf9b2,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  idiv %cx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   idiv2_constant_complex1, .-idiv2_constant_complex1

    
.globl idiv2_constant_complex2
         .type   idiv2_constant_complex2, @function
idiv2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  idiv %cx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   idiv2_constant_complex2, .-idiv2_constant_complex2

    
.globl idiv3_plain
         .type   idiv3_plain, @function
idiv3_plain:
      idiv %ecx,%eax
  mov $0x0,%eax

    ret
         .size   idiv3_plain, .-idiv3_plain

    
.globl idiv3_allregs
         .type   idiv3_allregs, @function
idiv3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  idiv %ecx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   idiv3_allregs, .-idiv3_allregs

    
.globl idiv3_constant_simple
         .type   idiv3_constant_simple, @function
idiv3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $0xfe3f6cb2,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  idiv %ecx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   idiv3_constant_simple, .-idiv3_constant_simple

    
.globl idiv3_constant_complex1
         .type   idiv3_constant_complex1, @function
idiv3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x7e3f6cb2,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  idiv %ecx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   idiv3_constant_complex1, .-idiv3_constant_complex1

    
.globl idiv3_constant_complex2
         .type   idiv3_constant_complex2, @function
idiv3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x73af6cb2,%ecx
  mov $0x1e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  idiv %ecx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   idiv3_constant_complex2, .-idiv3_constant_complex2

    
.globl imul_one_op1_plain
         .type   imul_one_op1_plain, @function
imul_one_op1_plain:
      imul %bl
  mov $0x0,%eax

    ret
         .size   imul_one_op1_plain, .-imul_one_op1_plain

    
.globl imul_one_op1_allregs
         .type   imul_one_op1_allregs, @function
imul_one_op1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  imul %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op1_allregs, .-imul_one_op1_allregs

    
.globl imul_one_op1_constant_simple
         .type   imul_one_op1_constant_simple, @function
imul_one_op1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  imul %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op1_constant_simple, .-imul_one_op1_constant_simple

    
.globl imul_one_op1_constant_complex1
         .type   imul_one_op1_constant_complex1, @function
imul_one_op1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  imul %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op1_constant_complex1, .-imul_one_op1_constant_complex1

    
.globl imul_one_op1_constant_complex2
         .type   imul_one_op1_constant_complex2, @function
imul_one_op1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  imul %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op1_constant_complex2, .-imul_one_op1_constant_complex2

    
.globl imul_one_op2_plain
         .type   imul_one_op2_plain, @function
imul_one_op2_plain:
      imul %bx
  mov $0x0,%eax

    ret
         .size   imul_one_op2_plain, .-imul_one_op2_plain

    
.globl imul_one_op2_allregs
         .type   imul_one_op2_allregs, @function
imul_one_op2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  imul %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op2_allregs, .-imul_one_op2_allregs

    
.globl imul_one_op2_constant_simple
         .type   imul_one_op2_constant_simple, @function
imul_one_op2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  imul %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op2_constant_simple, .-imul_one_op2_constant_simple

    
.globl imul_one_op2_constant_complex1
         .type   imul_one_op2_constant_complex1, @function
imul_one_op2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  imul %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op2_constant_complex1, .-imul_one_op2_constant_complex1

    
.globl imul_one_op2_constant_complex2
         .type   imul_one_op2_constant_complex2, @function
imul_one_op2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  imul %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op2_constant_complex2, .-imul_one_op2_constant_complex2

    
.globl imul_one_op3_plain
         .type   imul_one_op3_plain, @function
imul_one_op3_plain:
      imul %ebx
  mov $0x0,%eax

    ret
         .size   imul_one_op3_plain, .-imul_one_op3_plain

    
.globl imul_one_op3_allregs
         .type   imul_one_op3_allregs, @function
imul_one_op3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  imul %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op3_allregs, .-imul_one_op3_allregs

    
.globl imul_one_op3_constant_simple
         .type   imul_one_op3_constant_simple, @function
imul_one_op3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  imul %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op3_constant_simple, .-imul_one_op3_constant_simple

    
.globl imul_one_op3_constant_complex1
         .type   imul_one_op3_constant_complex1, @function
imul_one_op3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  imul %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op3_constant_complex1, .-imul_one_op3_constant_complex1

    
.globl imul_one_op3_constant_complex2
         .type   imul_one_op3_constant_complex2, @function
imul_one_op3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  imul %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op3_constant_complex2, .-imul_one_op3_constant_complex2

    
.globl imul_one_op4_mv_plain
         .type   imul_one_op4_mv_plain, @function
imul_one_op4_mv_plain:
      imulw (%ebx)
  mov $0x0,%eax

    ret
         .size   imul_one_op4_mv_plain, .-imul_one_op4_mv_plain

    
.globl imul_one_op4_mv_allregs
         .type   imul_one_op4_mv_allregs, @function
imul_one_op4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  imulw (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op4_mv_allregs, .-imul_one_op4_mv_allregs

    
.globl imul_one_op4_mv_constant_simple
         .type   imul_one_op4_mv_constant_simple, @function
imul_one_op4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  imulw (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op4_mv_constant_simple, .-imul_one_op4_mv_constant_simple

    
.globl imul_one_op4_mv_constant_complex1
         .type   imul_one_op4_mv_constant_complex1, @function
imul_one_op4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  imulw (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op4_mv_constant_complex1, .-imul_one_op4_mv_constant_complex1

    
.globl imul_one_op4_mv_constant_complex2
         .type   imul_one_op4_mv_constant_complex2, @function
imul_one_op4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  imulw (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_one_op4_mv_constant_complex2, .-imul_one_op4_mv_constant_complex2

    
.globl imul_two_op1_plain
         .type   imul_two_op1_plain, @function
imul_two_op1_plain:
      imul %bx,%cx
  mov $0x0,%eax

    ret
         .size   imul_two_op1_plain, .-imul_two_op1_plain

    
.globl imul_two_op1_allregs
         .type   imul_two_op1_allregs, @function
imul_two_op1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  imul %bx,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_two_op1_allregs, .-imul_two_op1_allregs

    
.globl imul_two_op1_constant_simple
         .type   imul_two_op1_constant_simple, @function
imul_two_op1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  imul %bx,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_two_op1_constant_simple, .-imul_two_op1_constant_simple

    
.globl imul_two_op1_constant_complex1
         .type   imul_two_op1_constant_complex1, @function
imul_two_op1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  imul %bx,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_two_op1_constant_complex1, .-imul_two_op1_constant_complex1

    
.globl imul_two_op1_constant_complex2
         .type   imul_two_op1_constant_complex2, @function
imul_two_op1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  imul %bx,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_two_op1_constant_complex2, .-imul_two_op1_constant_complex2

    
.globl imul_two_op2_plain
         .type   imul_two_op2_plain, @function
imul_two_op2_plain:
      imul %ebx,%ecx
  mov $0x0,%eax

    ret
         .size   imul_two_op2_plain, .-imul_two_op2_plain

    
.globl imul_two_op2_allregs
         .type   imul_two_op2_allregs, @function
imul_two_op2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  imul %ebx,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_two_op2_allregs, .-imul_two_op2_allregs

    
.globl imul_two_op2_constant_simple
         .type   imul_two_op2_constant_simple, @function
imul_two_op2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  imul %ebx,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_two_op2_constant_simple, .-imul_two_op2_constant_simple

    
.globl imul_two_op2_constant_complex1
         .type   imul_two_op2_constant_complex1, @function
imul_two_op2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  imul %ebx,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_two_op2_constant_complex1, .-imul_two_op2_constant_complex1

    
.globl imul_two_op2_constant_complex2
         .type   imul_two_op2_constant_complex2, @function
imul_two_op2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  imul %ebx,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_two_op2_constant_complex2, .-imul_two_op2_constant_complex2

    
.globl imul_two_op3_mv_plain
         .type   imul_two_op3_mv_plain, @function
imul_two_op3_mv_plain:
      imul (%ebx),%ecx
  mov $0x0,%eax

    ret
         .size   imul_two_op3_mv_plain, .-imul_two_op3_mv_plain

    
.globl imul_two_op3_mv_allregs
         .type   imul_two_op3_mv_allregs, @function
imul_two_op3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  imul (%ebx),%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_two_op3_mv_allregs, .-imul_two_op3_mv_allregs

    
.globl imul_two_op3_mv_constant_simple
         .type   imul_two_op3_mv_constant_simple, @function
imul_two_op3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  imul (%ebx),%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_two_op3_mv_constant_simple, .-imul_two_op3_mv_constant_simple

    
.globl imul_two_op3_mv_constant_complex1
         .type   imul_two_op3_mv_constant_complex1, @function
imul_two_op3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  imul (%ebx),%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_two_op3_mv_constant_complex1, .-imul_two_op3_mv_constant_complex1

    
.globl imul_two_op3_mv_constant_complex2
         .type   imul_two_op3_mv_constant_complex2, @function
imul_two_op3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  imul (%ebx),%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_two_op3_mv_constant_complex2, .-imul_two_op3_mv_constant_complex2

    
.globl imul_three_op1_plain
         .type   imul_three_op1_plain, @function
imul_three_op1_plain:
      imul $10,%bx,%cx
  mov $0x0,%eax

    ret
         .size   imul_three_op1_plain, .-imul_three_op1_plain

    
.globl imul_three_op1_allregs
         .type   imul_three_op1_allregs, @function
imul_three_op1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  imul $10,%bx,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_three_op1_allregs, .-imul_three_op1_allregs

    
.globl imul_three_op1_constant_simple
         .type   imul_three_op1_constant_simple, @function
imul_three_op1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  imul $10,%bx,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_three_op1_constant_simple, .-imul_three_op1_constant_simple

    
.globl imul_three_op1_constant_complex1
         .type   imul_three_op1_constant_complex1, @function
imul_three_op1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  imul $10,%bx,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_three_op1_constant_complex1, .-imul_three_op1_constant_complex1

    
.globl imul_three_op1_constant_complex2
         .type   imul_three_op1_constant_complex2, @function
imul_three_op1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  imul $10,%bx,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_three_op1_constant_complex2, .-imul_three_op1_constant_complex2

    
.globl imul_three_op2_plain
         .type   imul_three_op2_plain, @function
imul_three_op2_plain:
      imul $10,%ebx,%ecx
  mov $0x0,%eax

    ret
         .size   imul_three_op2_plain, .-imul_three_op2_plain

    
.globl imul_three_op2_allregs
         .type   imul_three_op2_allregs, @function
imul_three_op2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  imul $10,%ebx,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_three_op2_allregs, .-imul_three_op2_allregs

    
.globl imul_three_op2_constant_simple
         .type   imul_three_op2_constant_simple, @function
imul_three_op2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  imul $10,%ebx,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_three_op2_constant_simple, .-imul_three_op2_constant_simple

    
.globl imul_three_op2_constant_complex1
         .type   imul_three_op2_constant_complex1, @function
imul_three_op2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  imul $10,%ebx,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_three_op2_constant_complex1, .-imul_three_op2_constant_complex1

    
.globl imul_three_op2_constant_complex2
         .type   imul_three_op2_constant_complex2, @function
imul_three_op2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  imul $10,%ebx,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_three_op2_constant_complex2, .-imul_three_op2_constant_complex2

    
.globl imul_three_op3_mv_plain
         .type   imul_three_op3_mv_plain, @function
imul_three_op3_mv_plain:
      imul $10,(%ebx),%ecx
  mov $0x0,%eax

    ret
         .size   imul_three_op3_mv_plain, .-imul_three_op3_mv_plain

    
.globl imul_three_op3_mv_allregs
         .type   imul_three_op3_mv_allregs, @function
imul_three_op3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  imul $10,(%ebx),%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_three_op3_mv_allregs, .-imul_three_op3_mv_allregs

    
.globl imul_three_op3_mv_constant_simple
         .type   imul_three_op3_mv_constant_simple, @function
imul_three_op3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  imul $10,(%ebx),%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_three_op3_mv_constant_simple, .-imul_three_op3_mv_constant_simple

    
.globl imul_three_op3_mv_constant_complex1
         .type   imul_three_op3_mv_constant_complex1, @function
imul_three_op3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  imul $10,(%ebx),%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_three_op3_mv_constant_complex1, .-imul_three_op3_mv_constant_complex1

    
.globl imul_three_op3_mv_constant_complex2
         .type   imul_three_op3_mv_constant_complex2, @function
imul_three_op3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  imul $10,(%ebx),%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   imul_three_op3_mv_constant_complex2, .-imul_three_op3_mv_constant_complex2

    
.globl in1_plain
         .type   in1_plain, @function
in1_plain:
      .byte 0xe4,0x12
  mov $0x0,%eax

    ret
         .size   in1_plain, .-in1_plain

    
.globl in1_allregs
         .type   in1_allregs, @function
in1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xe4,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in1_allregs, .-in1_allregs

    
.globl in1_constant_simple
         .type   in1_constant_simple, @function
in1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xe4,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in1_constant_simple, .-in1_constant_simple

    
.globl in1_constant_complex1
         .type   in1_constant_complex1, @function
in1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xe4,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in1_constant_complex1, .-in1_constant_complex1

    
.globl in1_constant_complex2
         .type   in1_constant_complex2, @function
in1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xe4,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in1_constant_complex2, .-in1_constant_complex2

    
.globl in2_mv_plain
         .type   in2_mv_plain, @function
in2_mv_plain:
      .byte 0x66,0xe5,0x12
  mov $0x0,%eax

    ret
         .size   in2_mv_plain, .-in2_mv_plain

    
.globl in2_mv_allregs
         .type   in2_mv_allregs, @function
in2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xe5,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in2_mv_allregs, .-in2_mv_allregs

    
.globl in2_mv_constant_simple
         .type   in2_mv_constant_simple, @function
in2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xe5,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in2_mv_constant_simple, .-in2_mv_constant_simple

    
.globl in2_mv_constant_complex1
         .type   in2_mv_constant_complex1, @function
in2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xe5,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in2_mv_constant_complex1, .-in2_mv_constant_complex1

    
.globl in2_mv_constant_complex2
         .type   in2_mv_constant_complex2, @function
in2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xe5,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in2_mv_constant_complex2, .-in2_mv_constant_complex2

    
.globl in3_plain
         .type   in3_plain, @function
in3_plain:
      .byte 0xe5,0x12
  mov $0x0,%eax

    ret
         .size   in3_plain, .-in3_plain

    
.globl in3_allregs
         .type   in3_allregs, @function
in3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xe5,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in3_allregs, .-in3_allregs

    
.globl in3_constant_simple
         .type   in3_constant_simple, @function
in3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xe5,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in3_constant_simple, .-in3_constant_simple

    
.globl in3_constant_complex1
         .type   in3_constant_complex1, @function
in3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xe5,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in3_constant_complex1, .-in3_constant_complex1

    
.globl in3_constant_complex2
         .type   in3_constant_complex2, @function
in3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xe5,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in3_constant_complex2, .-in3_constant_complex2

    
.globl in4_plain
         .type   in4_plain, @function
in4_plain:
      .byte 0xec
  mov $0x0,%eax

    ret
         .size   in4_plain, .-in4_plain

    
.globl in4_allregs
         .type   in4_allregs, @function
in4_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xec
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in4_allregs, .-in4_allregs

    
.globl in4_constant_simple
         .type   in4_constant_simple, @function
in4_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xec
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in4_constant_simple, .-in4_constant_simple

    
.globl in4_constant_complex1
         .type   in4_constant_complex1, @function
in4_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xec
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in4_constant_complex1, .-in4_constant_complex1

    
.globl in4_constant_complex2
         .type   in4_constant_complex2, @function
in4_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xec
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in4_constant_complex2, .-in4_constant_complex2

    
.globl in5_mv_plain
         .type   in5_mv_plain, @function
in5_mv_plain:
      .byte 0x66,0xed
  mov $0x0,%eax

    ret
         .size   in5_mv_plain, .-in5_mv_plain

    
.globl in5_mv_allregs
         .type   in5_mv_allregs, @function
in5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xed
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in5_mv_allregs, .-in5_mv_allregs

    
.globl in5_mv_constant_simple
         .type   in5_mv_constant_simple, @function
in5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xed
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in5_mv_constant_simple, .-in5_mv_constant_simple

    
.globl in5_mv_constant_complex1
         .type   in5_mv_constant_complex1, @function
in5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xed
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in5_mv_constant_complex1, .-in5_mv_constant_complex1

    
.globl in5_mv_constant_complex2
         .type   in5_mv_constant_complex2, @function
in5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xed
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in5_mv_constant_complex2, .-in5_mv_constant_complex2

    
.globl in6_mv_plain
         .type   in6_mv_plain, @function
in6_mv_plain:
      .byte 0xed
  mov $0x0,%eax

    ret
         .size   in6_mv_plain, .-in6_mv_plain

    
.globl in6_mv_allregs
         .type   in6_mv_allregs, @function
in6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xed
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in6_mv_allregs, .-in6_mv_allregs

    
.globl in6_mv_constant_simple
         .type   in6_mv_constant_simple, @function
in6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xed
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in6_mv_constant_simple, .-in6_mv_constant_simple

    
.globl in6_mv_constant_complex1
         .type   in6_mv_constant_complex1, @function
in6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xed
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in6_mv_constant_complex1, .-in6_mv_constant_complex1

    
.globl in6_mv_constant_complex2
         .type   in6_mv_constant_complex2, @function
in6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xed
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   in6_mv_constant_complex2, .-in6_mv_constant_complex2

    
.globl inc1_mv_plain
         .type   inc1_mv_plain, @function
inc1_mv_plain:
      inc %al
  mov $0x0,%eax

    ret
         .size   inc1_mv_plain, .-inc1_mv_plain

    
.globl inc1_mv_allregs
         .type   inc1_mv_allregs, @function
inc1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  inc %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc1_mv_allregs, .-inc1_mv_allregs

    
.globl inc1_mv_constant_simple
         .type   inc1_mv_constant_simple, @function
inc1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  inc %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc1_mv_constant_simple, .-inc1_mv_constant_simple

    
.globl inc1_mv_constant_complex1
         .type   inc1_mv_constant_complex1, @function
inc1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  inc %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc1_mv_constant_complex1, .-inc1_mv_constant_complex1

    
.globl inc1_mv_constant_complex2
         .type   inc1_mv_constant_complex2, @function
inc1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  inc %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc1_mv_constant_complex2, .-inc1_mv_constant_complex2

    
.globl inc2_mv_plain
         .type   inc2_mv_plain, @function
inc2_mv_plain:
      inc %ax
  mov $0x0,%eax

    ret
         .size   inc2_mv_plain, .-inc2_mv_plain

    
.globl inc2_mv_allregs
         .type   inc2_mv_allregs, @function
inc2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  inc %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc2_mv_allregs, .-inc2_mv_allregs

    
.globl inc2_mv_constant_simple
         .type   inc2_mv_constant_simple, @function
inc2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  inc %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc2_mv_constant_simple, .-inc2_mv_constant_simple

    
.globl inc2_mv_constant_complex1
         .type   inc2_mv_constant_complex1, @function
inc2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  inc %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc2_mv_constant_complex1, .-inc2_mv_constant_complex1

    
.globl inc2_mv_constant_complex2
         .type   inc2_mv_constant_complex2, @function
inc2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  inc %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc2_mv_constant_complex2, .-inc2_mv_constant_complex2

    
.globl inc3_mv_plain
         .type   inc3_mv_plain, @function
inc3_mv_plain:
      inc %ah
  mov $0x0,%eax

    ret
         .size   inc3_mv_plain, .-inc3_mv_plain

    
.globl inc3_mv_allregs
         .type   inc3_mv_allregs, @function
inc3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  inc %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc3_mv_allregs, .-inc3_mv_allregs

    
.globl inc3_mv_constant_simple
         .type   inc3_mv_constant_simple, @function
inc3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  inc %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc3_mv_constant_simple, .-inc3_mv_constant_simple

    
.globl inc3_mv_constant_complex1
         .type   inc3_mv_constant_complex1, @function
inc3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  inc %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc3_mv_constant_complex1, .-inc3_mv_constant_complex1

    
.globl inc3_mv_constant_complex2
         .type   inc3_mv_constant_complex2, @function
inc3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  inc %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc3_mv_constant_complex2, .-inc3_mv_constant_complex2

    
.globl inc4_plain
         .type   inc4_plain, @function
inc4_plain:
      inc %eax
  mov $0x0,%eax

    ret
         .size   inc4_plain, .-inc4_plain

    
.globl inc4_allregs
         .type   inc4_allregs, @function
inc4_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  inc %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc4_allregs, .-inc4_allregs

    
.globl inc4_constant_simple
         .type   inc4_constant_simple, @function
inc4_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  inc %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc4_constant_simple, .-inc4_constant_simple

    
.globl inc4_constant_complex1
         .type   inc4_constant_complex1, @function
inc4_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  inc %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc4_constant_complex1, .-inc4_constant_complex1

    
.globl inc4_constant_complex2
         .type   inc4_constant_complex2, @function
inc4_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  inc %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc4_constant_complex2, .-inc4_constant_complex2

    
.globl inc5b_mv_plain
         .type   inc5b_mv_plain, @function
inc5b_mv_plain:
      incb (%eax)
  mov $0x0,%eax

    ret
         .size   inc5b_mv_plain, .-inc5b_mv_plain

    
.globl inc5b_mv_allregs
         .type   inc5b_mv_allregs, @function
inc5b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  incb (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc5b_mv_allregs, .-inc5b_mv_allregs

    
.globl inc5b_mv_constant_simple
         .type   inc5b_mv_constant_simple, @function
inc5b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  incb (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc5b_mv_constant_simple, .-inc5b_mv_constant_simple

    
.globl inc5b_mv_constant_complex1
         .type   inc5b_mv_constant_complex1, @function
inc5b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  incb (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc5b_mv_constant_complex1, .-inc5b_mv_constant_complex1

    
.globl inc5b_mv_constant_complex2
         .type   inc5b_mv_constant_complex2, @function
inc5b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  incb (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc5b_mv_constant_complex2, .-inc5b_mv_constant_complex2

    
.globl inc5w_mv_plain
         .type   inc5w_mv_plain, @function
inc5w_mv_plain:
      incw (%eax)
  mov $0x0,%eax

    ret
         .size   inc5w_mv_plain, .-inc5w_mv_plain

    
.globl inc5w_mv_allregs
         .type   inc5w_mv_allregs, @function
inc5w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  incw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc5w_mv_allregs, .-inc5w_mv_allregs

    
.globl inc5w_mv_constant_simple
         .type   inc5w_mv_constant_simple, @function
inc5w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  incw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc5w_mv_constant_simple, .-inc5w_mv_constant_simple

    
.globl inc5w_mv_constant_complex1
         .type   inc5w_mv_constant_complex1, @function
inc5w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  incw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc5w_mv_constant_complex1, .-inc5w_mv_constant_complex1

    
.globl inc5w_mv_constant_complex2
         .type   inc5w_mv_constant_complex2, @function
inc5w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  incw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc5w_mv_constant_complex2, .-inc5w_mv_constant_complex2

    
.globl inc5l_mv_plain
         .type   inc5l_mv_plain, @function
inc5l_mv_plain:
      incl (%eax)
  mov $0x0,%eax

    ret
         .size   inc5l_mv_plain, .-inc5l_mv_plain

    
.globl inc5l_mv_allregs
         .type   inc5l_mv_allregs, @function
inc5l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  incl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc5l_mv_allregs, .-inc5l_mv_allregs

    
.globl inc5l_mv_constant_simple
         .type   inc5l_mv_constant_simple, @function
inc5l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  incl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc5l_mv_constant_simple, .-inc5l_mv_constant_simple

    
.globl inc5l_mv_constant_complex1
         .type   inc5l_mv_constant_complex1, @function
inc5l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  incl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc5l_mv_constant_complex1, .-inc5l_mv_constant_complex1

    
.globl inc5l_mv_constant_complex2
         .type   inc5l_mv_constant_complex2, @function
inc5l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  incl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc5l_mv_constant_complex2, .-inc5l_mv_constant_complex2

    
.globl inc_locked_mv_plain
         .type   inc_locked_mv_plain, @function
inc_locked_mv_plain:
      lock incl (%eax)
  mov $0x0,%eax

    ret
         .size   inc_locked_mv_plain, .-inc_locked_mv_plain

    
.globl inc_locked_mv_allregs
         .type   inc_locked_mv_allregs, @function
inc_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lock incl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc_locked_mv_allregs, .-inc_locked_mv_allregs

    
.globl inc_locked_mv_constant_simple
         .type   inc_locked_mv_constant_simple, @function
inc_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lock incl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc_locked_mv_constant_simple, .-inc_locked_mv_constant_simple

    
.globl inc_locked_mv_constant_complex1
         .type   inc_locked_mv_constant_complex1, @function
inc_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lock incl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc_locked_mv_constant_complex1, .-inc_locked_mv_constant_complex1

    
.globl inc_locked_mv_constant_complex2
         .type   inc_locked_mv_constant_complex2, @function
inc_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lock incl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   inc_locked_mv_constant_complex2, .-inc_locked_mv_constant_complex2

    
.globl ins1_plain
         .type   ins1_plain, @function
ins1_plain:
      .byte 0x6c
  mov $0x0,%eax

    ret
         .size   ins1_plain, .-ins1_plain

    
.globl ins1_allregs
         .type   ins1_allregs, @function
ins1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ins1_allregs, .-ins1_allregs

    
.globl ins1_constant_simple
         .type   ins1_constant_simple, @function
ins1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ins1_constant_simple, .-ins1_constant_simple

    
.globl ins1_constant_complex1
         .type   ins1_constant_complex1, @function
ins1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ins1_constant_complex1, .-ins1_constant_complex1

    
.globl ins1_constant_complex2
         .type   ins1_constant_complex2, @function
ins1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ins1_constant_complex2, .-ins1_constant_complex2

    
.globl ins2_mv_plain
         .type   ins2_mv_plain, @function
ins2_mv_plain:
      .byte 0x66,0x6d
  mov $0x0,%eax

    ret
         .size   ins2_mv_plain, .-ins2_mv_plain

    
.globl ins2_mv_allregs
         .type   ins2_mv_allregs, @function
ins2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ins2_mv_allregs, .-ins2_mv_allregs

    
.globl ins2_mv_constant_simple
         .type   ins2_mv_constant_simple, @function
ins2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ins2_mv_constant_simple, .-ins2_mv_constant_simple

    
.globl ins2_mv_constant_complex1
         .type   ins2_mv_constant_complex1, @function
ins2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ins2_mv_constant_complex1, .-ins2_mv_constant_complex1

    
.globl ins2_mv_constant_complex2
         .type   ins2_mv_constant_complex2, @function
ins2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ins2_mv_constant_complex2, .-ins2_mv_constant_complex2

    
.globl ins3_plain
         .type   ins3_plain, @function
ins3_plain:
      .byte 0x6d
  mov $0x0,%eax

    ret
         .size   ins3_plain, .-ins3_plain

    
.globl ins3_allregs
         .type   ins3_allregs, @function
ins3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ins3_allregs, .-ins3_allregs

    
.globl ins3_constant_simple
         .type   ins3_constant_simple, @function
ins3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ins3_constant_simple, .-ins3_constant_simple

    
.globl ins3_constant_complex1
         .type   ins3_constant_complex1, @function
ins3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ins3_constant_complex1, .-ins3_constant_complex1

    
.globl ins3_constant_complex2
         .type   ins3_constant_complex2, @function
ins3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ins3_constant_complex2, .-ins3_constant_complex2

    
.globl int1_mv_plain
         .type   int1_mv_plain, @function
int1_mv_plain:
      .byte 0xcc
  mov $0x0,%eax

    ret
         .size   int1_mv_plain, .-int1_mv_plain

    
.globl int1_mv_allregs
         .type   int1_mv_allregs, @function
int1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xcc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   int1_mv_allregs, .-int1_mv_allregs

    
.globl int1_mv_constant_simple
         .type   int1_mv_constant_simple, @function
int1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xcc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   int1_mv_constant_simple, .-int1_mv_constant_simple

    
.globl int1_mv_constant_complex1
         .type   int1_mv_constant_complex1, @function
int1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xcc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   int1_mv_constant_complex1, .-int1_mv_constant_complex1

    
.globl int1_mv_constant_complex2
         .type   int1_mv_constant_complex2, @function
int1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xcc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   int1_mv_constant_complex2, .-int1_mv_constant_complex2

    
.globl int2_mv_plain
         .type   int2_mv_plain, @function
int2_mv_plain:
      .byte 0xcd,0x12
  mov $0x0,%eax

    ret
         .size   int2_mv_plain, .-int2_mv_plain

    
.globl int2_mv_allregs
         .type   int2_mv_allregs, @function
int2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xcd,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   int2_mv_allregs, .-int2_mv_allregs

    
.globl int2_mv_constant_simple
         .type   int2_mv_constant_simple, @function
int2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xcd,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   int2_mv_constant_simple, .-int2_mv_constant_simple

    
.globl int2_mv_constant_complex1
         .type   int2_mv_constant_complex1, @function
int2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xcd,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   int2_mv_constant_complex1, .-int2_mv_constant_complex1

    
.globl int2_mv_constant_complex2
         .type   int2_mv_constant_complex2, @function
int2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xcd,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   int2_mv_constant_complex2, .-int2_mv_constant_complex2

    
.globl int3_mv_plain
         .type   int3_mv_plain, @function
int3_mv_plain:
      .byte 0xce
  mov $0x0,%eax

    ret
         .size   int3_mv_plain, .-int3_mv_plain

    
.globl int3_mv_allregs
         .type   int3_mv_allregs, @function
int3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xce
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   int3_mv_allregs, .-int3_mv_allregs

    
.globl int3_mv_constant_simple
         .type   int3_mv_constant_simple, @function
int3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xce
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   int3_mv_constant_simple, .-int3_mv_constant_simple

    
.globl int3_mv_constant_complex1
         .type   int3_mv_constant_complex1, @function
int3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xce
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   int3_mv_constant_complex1, .-int3_mv_constant_complex1

    
.globl int3_mv_constant_complex2
         .type   int3_mv_constant_complex2, @function
int3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xce
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   int3_mv_constant_complex2, .-int3_mv_constant_complex2

    
.globl iret1_plain
         .type   iret1_plain, @function
iret1_plain:
      .byte 0xcf
  mov $0x0,%eax

    ret
         .size   iret1_plain, .-iret1_plain

    
.globl iret1_allregs
         .type   iret1_allregs, @function
iret1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xcf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   iret1_allregs, .-iret1_allregs

    
.globl iret1_constant_simple
         .type   iret1_constant_simple, @function
iret1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xcf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   iret1_constant_simple, .-iret1_constant_simple

    
.globl iret1_constant_complex1
         .type   iret1_constant_complex1, @function
iret1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xcf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   iret1_constant_complex1, .-iret1_constant_complex1

    
.globl iret1_constant_complex2
         .type   iret1_constant_complex2, @function
iret1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xcf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   iret1_constant_complex2, .-iret1_constant_complex2

    
.globl iret2_mv_plain
         .type   iret2_mv_plain, @function
iret2_mv_plain:
      .byte 0x66,0xcf
  mov $0x0,%eax

    ret
         .size   iret2_mv_plain, .-iret2_mv_plain

    
.globl iret2_mv_allregs
         .type   iret2_mv_allregs, @function
iret2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xcf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   iret2_mv_allregs, .-iret2_mv_allregs

    
.globl iret2_mv_constant_simple
         .type   iret2_mv_constant_simple, @function
iret2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xcf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   iret2_mv_constant_simple, .-iret2_mv_constant_simple

    
.globl iret2_mv_constant_complex1
         .type   iret2_mv_constant_complex1, @function
iret2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xcf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   iret2_mv_constant_complex1, .-iret2_mv_constant_complex1

    
.globl iret2_mv_constant_complex2
         .type   iret2_mv_constant_complex2, @function
iret2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xcf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   iret2_mv_constant_complex2, .-iret2_mv_constant_complex2

    
.globl jcc_short_with_code_0_plain
         .type   jcc_short_with_code_0_plain, @function
jcc_short_with_code_0_plain:
      .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_0_plain, .-jcc_short_with_code_0_plain

    
.globl jcc_short_with_code_0_allregs
         .type   jcc_short_with_code_0_allregs, @function
jcc_short_with_code_0_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_0_allregs, .-jcc_short_with_code_0_allregs

    
.globl jcc_short_with_code_0_constant_simple_clear
         .type   jcc_short_with_code_0_constant_simple_clear, @function
jcc_short_with_code_0_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_0_constant_simple_clear, .-jcc_short_with_code_0_constant_simple_clear

    
.globl jcc_short_with_code_0_constant_simple_set
         .type   jcc_short_with_code_0_constant_simple_set, @function
jcc_short_with_code_0_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_0_constant_simple_set, .-jcc_short_with_code_0_constant_simple_set

    
.globl jcc_short_with_code_0_constant_complex1
         .type   jcc_short_with_code_0_constant_complex1, @function
jcc_short_with_code_0_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_0_constant_complex1, .-jcc_short_with_code_0_constant_complex1

    
.globl jcc_short_with_code_0_constant_complex2
         .type   jcc_short_with_code_0_constant_complex2, @function
jcc_short_with_code_0_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_0_constant_complex2, .-jcc_short_with_code_0_constant_complex2

    
.globl jcc_short_with_code_1_mv_plain
         .type   jcc_short_with_code_1_mv_plain, @function
jcc_short_with_code_1_mv_plain:
      .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_1_mv_plain, .-jcc_short_with_code_1_mv_plain

    
.globl jcc_short_with_code_1_mv_allregs
         .type   jcc_short_with_code_1_mv_allregs, @function
jcc_short_with_code_1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_1_mv_allregs, .-jcc_short_with_code_1_mv_allregs

    
.globl jcc_short_with_code_1_mv_constant_simple_clear
         .type   jcc_short_with_code_1_mv_constant_simple_clear, @function
jcc_short_with_code_1_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_1_mv_constant_simple_clear, .-jcc_short_with_code_1_mv_constant_simple_clear

    
.globl jcc_short_with_code_1_mv_constant_simple_set
         .type   jcc_short_with_code_1_mv_constant_simple_set, @function
jcc_short_with_code_1_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_1_mv_constant_simple_set, .-jcc_short_with_code_1_mv_constant_simple_set

    
.globl jcc_short_with_code_1_mv_constant_complex1
         .type   jcc_short_with_code_1_mv_constant_complex1, @function
jcc_short_with_code_1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_1_mv_constant_complex1, .-jcc_short_with_code_1_mv_constant_complex1

    
.globl jcc_short_with_code_1_mv_constant_complex2
         .type   jcc_short_with_code_1_mv_constant_complex2, @function
jcc_short_with_code_1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_1_mv_constant_complex2, .-jcc_short_with_code_1_mv_constant_complex2

    
.globl jcc_short_with_code_2_mv_plain
         .type   jcc_short_with_code_2_mv_plain, @function
jcc_short_with_code_2_mv_plain:
      .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_2_mv_plain, .-jcc_short_with_code_2_mv_plain

    
.globl jcc_short_with_code_2_mv_allregs
         .type   jcc_short_with_code_2_mv_allregs, @function
jcc_short_with_code_2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_2_mv_allregs, .-jcc_short_with_code_2_mv_allregs

    
.globl jcc_short_with_code_2_mv_constant_simple_clear
         .type   jcc_short_with_code_2_mv_constant_simple_clear, @function
jcc_short_with_code_2_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_2_mv_constant_simple_clear, .-jcc_short_with_code_2_mv_constant_simple_clear

    
.globl jcc_short_with_code_2_mv_constant_simple_set
         .type   jcc_short_with_code_2_mv_constant_simple_set, @function
jcc_short_with_code_2_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_2_mv_constant_simple_set, .-jcc_short_with_code_2_mv_constant_simple_set

    
.globl jcc_short_with_code_2_mv_constant_complex1
         .type   jcc_short_with_code_2_mv_constant_complex1, @function
jcc_short_with_code_2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_2_mv_constant_complex1, .-jcc_short_with_code_2_mv_constant_complex1

    
.globl jcc_short_with_code_2_mv_constant_complex2
         .type   jcc_short_with_code_2_mv_constant_complex2, @function
jcc_short_with_code_2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_2_mv_constant_complex2, .-jcc_short_with_code_2_mv_constant_complex2

    
.globl jcc_short_with_code_3_mv_plain
         .type   jcc_short_with_code_3_mv_plain, @function
jcc_short_with_code_3_mv_plain:
      .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_3_mv_plain, .-jcc_short_with_code_3_mv_plain

    
.globl jcc_short_with_code_3_mv_allregs
         .type   jcc_short_with_code_3_mv_allregs, @function
jcc_short_with_code_3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_3_mv_allregs, .-jcc_short_with_code_3_mv_allregs

    
.globl jcc_short_with_code_3_mv_constant_simple_clear
         .type   jcc_short_with_code_3_mv_constant_simple_clear, @function
jcc_short_with_code_3_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_3_mv_constant_simple_clear, .-jcc_short_with_code_3_mv_constant_simple_clear

    
.globl jcc_short_with_code_3_mv_constant_simple_set
         .type   jcc_short_with_code_3_mv_constant_simple_set, @function
jcc_short_with_code_3_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_3_mv_constant_simple_set, .-jcc_short_with_code_3_mv_constant_simple_set

    
.globl jcc_short_with_code_3_mv_constant_complex1
         .type   jcc_short_with_code_3_mv_constant_complex1, @function
jcc_short_with_code_3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_3_mv_constant_complex1, .-jcc_short_with_code_3_mv_constant_complex1

    
.globl jcc_short_with_code_3_mv_constant_complex2
         .type   jcc_short_with_code_3_mv_constant_complex2, @function
jcc_short_with_code_3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_3_mv_constant_complex2, .-jcc_short_with_code_3_mv_constant_complex2

    
.globl jcc_short_with_code_4_mv_plain
         .type   jcc_short_with_code_4_mv_plain, @function
jcc_short_with_code_4_mv_plain:
      .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_4_mv_plain, .-jcc_short_with_code_4_mv_plain

    
.globl jcc_short_with_code_4_mv_allregs
         .type   jcc_short_with_code_4_mv_allregs, @function
jcc_short_with_code_4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_4_mv_allregs, .-jcc_short_with_code_4_mv_allregs

    
.globl jcc_short_with_code_4_mv_constant_simple_clear
         .type   jcc_short_with_code_4_mv_constant_simple_clear, @function
jcc_short_with_code_4_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_4_mv_constant_simple_clear, .-jcc_short_with_code_4_mv_constant_simple_clear

    
.globl jcc_short_with_code_4_mv_constant_simple_set
         .type   jcc_short_with_code_4_mv_constant_simple_set, @function
jcc_short_with_code_4_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_4_mv_constant_simple_set, .-jcc_short_with_code_4_mv_constant_simple_set

    
.globl jcc_short_with_code_4_mv_constant_complex1
         .type   jcc_short_with_code_4_mv_constant_complex1, @function
jcc_short_with_code_4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_4_mv_constant_complex1, .-jcc_short_with_code_4_mv_constant_complex1

    
.globl jcc_short_with_code_4_mv_constant_complex2
         .type   jcc_short_with_code_4_mv_constant_complex2, @function
jcc_short_with_code_4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_4_mv_constant_complex2, .-jcc_short_with_code_4_mv_constant_complex2

    
.globl jcc_short_with_code_5_mv_plain
         .type   jcc_short_with_code_5_mv_plain, @function
jcc_short_with_code_5_mv_plain:
      .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_5_mv_plain, .-jcc_short_with_code_5_mv_plain

    
.globl jcc_short_with_code_5_mv_allregs
         .type   jcc_short_with_code_5_mv_allregs, @function
jcc_short_with_code_5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_5_mv_allregs, .-jcc_short_with_code_5_mv_allregs

    
.globl jcc_short_with_code_5_mv_constant_simple_clear
         .type   jcc_short_with_code_5_mv_constant_simple_clear, @function
jcc_short_with_code_5_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_5_mv_constant_simple_clear, .-jcc_short_with_code_5_mv_constant_simple_clear

    
.globl jcc_short_with_code_5_mv_constant_simple_set
         .type   jcc_short_with_code_5_mv_constant_simple_set, @function
jcc_short_with_code_5_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_5_mv_constant_simple_set, .-jcc_short_with_code_5_mv_constant_simple_set

    
.globl jcc_short_with_code_5_mv_constant_complex1
         .type   jcc_short_with_code_5_mv_constant_complex1, @function
jcc_short_with_code_5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_5_mv_constant_complex1, .-jcc_short_with_code_5_mv_constant_complex1

    
.globl jcc_short_with_code_5_mv_constant_complex2
         .type   jcc_short_with_code_5_mv_constant_complex2, @function
jcc_short_with_code_5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_5_mv_constant_complex2, .-jcc_short_with_code_5_mv_constant_complex2

    
.globl jcc_short_with_code_6_mv_plain
         .type   jcc_short_with_code_6_mv_plain, @function
jcc_short_with_code_6_mv_plain:
      .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_6_mv_plain, .-jcc_short_with_code_6_mv_plain

    
.globl jcc_short_with_code_6_mv_allregs
         .type   jcc_short_with_code_6_mv_allregs, @function
jcc_short_with_code_6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_6_mv_allregs, .-jcc_short_with_code_6_mv_allregs

    
.globl jcc_short_with_code_6_mv_constant_simple_clear
         .type   jcc_short_with_code_6_mv_constant_simple_clear, @function
jcc_short_with_code_6_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_6_mv_constant_simple_clear, .-jcc_short_with_code_6_mv_constant_simple_clear

    
.globl jcc_short_with_code_6_mv_constant_simple_set
         .type   jcc_short_with_code_6_mv_constant_simple_set, @function
jcc_short_with_code_6_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_6_mv_constant_simple_set, .-jcc_short_with_code_6_mv_constant_simple_set

    
.globl jcc_short_with_code_6_mv_constant_complex1
         .type   jcc_short_with_code_6_mv_constant_complex1, @function
jcc_short_with_code_6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_6_mv_constant_complex1, .-jcc_short_with_code_6_mv_constant_complex1

    
.globl jcc_short_with_code_6_mv_constant_complex2
         .type   jcc_short_with_code_6_mv_constant_complex2, @function
jcc_short_with_code_6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_6_mv_constant_complex2, .-jcc_short_with_code_6_mv_constant_complex2

    
.globl jcc_short_with_code_7_mv_plain
         .type   jcc_short_with_code_7_mv_plain, @function
jcc_short_with_code_7_mv_plain:
      .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_7_mv_plain, .-jcc_short_with_code_7_mv_plain

    
.globl jcc_short_with_code_7_mv_allregs
         .type   jcc_short_with_code_7_mv_allregs, @function
jcc_short_with_code_7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_7_mv_allregs, .-jcc_short_with_code_7_mv_allregs

    
.globl jcc_short_with_code_7_mv_constant_simple_clear
         .type   jcc_short_with_code_7_mv_constant_simple_clear, @function
jcc_short_with_code_7_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_7_mv_constant_simple_clear, .-jcc_short_with_code_7_mv_constant_simple_clear

    
.globl jcc_short_with_code_7_mv_constant_simple_set
         .type   jcc_short_with_code_7_mv_constant_simple_set, @function
jcc_short_with_code_7_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_7_mv_constant_simple_set, .-jcc_short_with_code_7_mv_constant_simple_set

    
.globl jcc_short_with_code_7_mv_constant_complex1
         .type   jcc_short_with_code_7_mv_constant_complex1, @function
jcc_short_with_code_7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_7_mv_constant_complex1, .-jcc_short_with_code_7_mv_constant_complex1

    
.globl jcc_short_with_code_7_mv_constant_complex2
         .type   jcc_short_with_code_7_mv_constant_complex2, @function
jcc_short_with_code_7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_7_mv_constant_complex2, .-jcc_short_with_code_7_mv_constant_complex2

    
.globl jcc_short_with_code_8_mv_plain
         .type   jcc_short_with_code_8_mv_plain, @function
jcc_short_with_code_8_mv_plain:
      .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_8_mv_plain, .-jcc_short_with_code_8_mv_plain

    
.globl jcc_short_with_code_8_mv_allregs
         .type   jcc_short_with_code_8_mv_allregs, @function
jcc_short_with_code_8_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_8_mv_allregs, .-jcc_short_with_code_8_mv_allregs

    
.globl jcc_short_with_code_8_mv_constant_simple_clear
         .type   jcc_short_with_code_8_mv_constant_simple_clear, @function
jcc_short_with_code_8_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_8_mv_constant_simple_clear, .-jcc_short_with_code_8_mv_constant_simple_clear

    
.globl jcc_short_with_code_8_mv_constant_simple_set
         .type   jcc_short_with_code_8_mv_constant_simple_set, @function
jcc_short_with_code_8_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_8_mv_constant_simple_set, .-jcc_short_with_code_8_mv_constant_simple_set

    
.globl jcc_short_with_code_8_mv_constant_complex1
         .type   jcc_short_with_code_8_mv_constant_complex1, @function
jcc_short_with_code_8_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_8_mv_constant_complex1, .-jcc_short_with_code_8_mv_constant_complex1

    
.globl jcc_short_with_code_8_mv_constant_complex2
         .type   jcc_short_with_code_8_mv_constant_complex2, @function
jcc_short_with_code_8_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_8_mv_constant_complex2, .-jcc_short_with_code_8_mv_constant_complex2

    
.globl jcc_short_with_code_9_mv_plain
         .type   jcc_short_with_code_9_mv_plain, @function
jcc_short_with_code_9_mv_plain:
      .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_9_mv_plain, .-jcc_short_with_code_9_mv_plain

    
.globl jcc_short_with_code_9_mv_allregs
         .type   jcc_short_with_code_9_mv_allregs, @function
jcc_short_with_code_9_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_9_mv_allregs, .-jcc_short_with_code_9_mv_allregs

    
.globl jcc_short_with_code_9_mv_constant_simple_clear
         .type   jcc_short_with_code_9_mv_constant_simple_clear, @function
jcc_short_with_code_9_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_9_mv_constant_simple_clear, .-jcc_short_with_code_9_mv_constant_simple_clear

    
.globl jcc_short_with_code_9_mv_constant_simple_set
         .type   jcc_short_with_code_9_mv_constant_simple_set, @function
jcc_short_with_code_9_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_9_mv_constant_simple_set, .-jcc_short_with_code_9_mv_constant_simple_set

    
.globl jcc_short_with_code_9_mv_constant_complex1
         .type   jcc_short_with_code_9_mv_constant_complex1, @function
jcc_short_with_code_9_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_9_mv_constant_complex1, .-jcc_short_with_code_9_mv_constant_complex1

    
.globl jcc_short_with_code_9_mv_constant_complex2
         .type   jcc_short_with_code_9_mv_constant_complex2, @function
jcc_short_with_code_9_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_9_mv_constant_complex2, .-jcc_short_with_code_9_mv_constant_complex2

    
.globl jcc_short_with_code_a_mv_plain
         .type   jcc_short_with_code_a_mv_plain, @function
jcc_short_with_code_a_mv_plain:
      .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_a_mv_plain, .-jcc_short_with_code_a_mv_plain

    
.globl jcc_short_with_code_a_mv_allregs
         .type   jcc_short_with_code_a_mv_allregs, @function
jcc_short_with_code_a_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_a_mv_allregs, .-jcc_short_with_code_a_mv_allregs

    
.globl jcc_short_with_code_a_mv_constant_simple_clear
         .type   jcc_short_with_code_a_mv_constant_simple_clear, @function
jcc_short_with_code_a_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_a_mv_constant_simple_clear, .-jcc_short_with_code_a_mv_constant_simple_clear

    
.globl jcc_short_with_code_a_mv_constant_simple_set
         .type   jcc_short_with_code_a_mv_constant_simple_set, @function
jcc_short_with_code_a_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_a_mv_constant_simple_set, .-jcc_short_with_code_a_mv_constant_simple_set

    
.globl jcc_short_with_code_a_mv_constant_complex1
         .type   jcc_short_with_code_a_mv_constant_complex1, @function
jcc_short_with_code_a_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_a_mv_constant_complex1, .-jcc_short_with_code_a_mv_constant_complex1

    
.globl jcc_short_with_code_a_mv_constant_complex2
         .type   jcc_short_with_code_a_mv_constant_complex2, @function
jcc_short_with_code_a_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_a_mv_constant_complex2, .-jcc_short_with_code_a_mv_constant_complex2

    
.globl jcc_short_with_code_b_mv_plain
         .type   jcc_short_with_code_b_mv_plain, @function
jcc_short_with_code_b_mv_plain:
      .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_b_mv_plain, .-jcc_short_with_code_b_mv_plain

    
.globl jcc_short_with_code_b_mv_allregs
         .type   jcc_short_with_code_b_mv_allregs, @function
jcc_short_with_code_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_b_mv_allregs, .-jcc_short_with_code_b_mv_allregs

    
.globl jcc_short_with_code_b_mv_constant_simple_clear
         .type   jcc_short_with_code_b_mv_constant_simple_clear, @function
jcc_short_with_code_b_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_b_mv_constant_simple_clear, .-jcc_short_with_code_b_mv_constant_simple_clear

    
.globl jcc_short_with_code_b_mv_constant_simple_set
         .type   jcc_short_with_code_b_mv_constant_simple_set, @function
jcc_short_with_code_b_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_b_mv_constant_simple_set, .-jcc_short_with_code_b_mv_constant_simple_set

    
.globl jcc_short_with_code_b_mv_constant_complex1
         .type   jcc_short_with_code_b_mv_constant_complex1, @function
jcc_short_with_code_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_b_mv_constant_complex1, .-jcc_short_with_code_b_mv_constant_complex1

    
.globl jcc_short_with_code_b_mv_constant_complex2
         .type   jcc_short_with_code_b_mv_constant_complex2, @function
jcc_short_with_code_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_b_mv_constant_complex2, .-jcc_short_with_code_b_mv_constant_complex2

    
.globl jcc_short_with_code_c_mv_plain
         .type   jcc_short_with_code_c_mv_plain, @function
jcc_short_with_code_c_mv_plain:
      .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_c_mv_plain, .-jcc_short_with_code_c_mv_plain

    
.globl jcc_short_with_code_c_mv_allregs
         .type   jcc_short_with_code_c_mv_allregs, @function
jcc_short_with_code_c_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_c_mv_allregs, .-jcc_short_with_code_c_mv_allregs

    
.globl jcc_short_with_code_c_mv_constant_simple_clear
         .type   jcc_short_with_code_c_mv_constant_simple_clear, @function
jcc_short_with_code_c_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_c_mv_constant_simple_clear, .-jcc_short_with_code_c_mv_constant_simple_clear

    
.globl jcc_short_with_code_c_mv_constant_simple_set
         .type   jcc_short_with_code_c_mv_constant_simple_set, @function
jcc_short_with_code_c_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_c_mv_constant_simple_set, .-jcc_short_with_code_c_mv_constant_simple_set

    
.globl jcc_short_with_code_c_mv_constant_complex1
         .type   jcc_short_with_code_c_mv_constant_complex1, @function
jcc_short_with_code_c_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_c_mv_constant_complex1, .-jcc_short_with_code_c_mv_constant_complex1

    
.globl jcc_short_with_code_c_mv_constant_complex2
         .type   jcc_short_with_code_c_mv_constant_complex2, @function
jcc_short_with_code_c_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_c_mv_constant_complex2, .-jcc_short_with_code_c_mv_constant_complex2

    
.globl jcc_short_with_code_d_mv_plain
         .type   jcc_short_with_code_d_mv_plain, @function
jcc_short_with_code_d_mv_plain:
      .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_d_mv_plain, .-jcc_short_with_code_d_mv_plain

    
.globl jcc_short_with_code_d_mv_allregs
         .type   jcc_short_with_code_d_mv_allregs, @function
jcc_short_with_code_d_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_d_mv_allregs, .-jcc_short_with_code_d_mv_allregs

    
.globl jcc_short_with_code_d_mv_constant_simple_clear
         .type   jcc_short_with_code_d_mv_constant_simple_clear, @function
jcc_short_with_code_d_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_d_mv_constant_simple_clear, .-jcc_short_with_code_d_mv_constant_simple_clear

    
.globl jcc_short_with_code_d_mv_constant_simple_set
         .type   jcc_short_with_code_d_mv_constant_simple_set, @function
jcc_short_with_code_d_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_d_mv_constant_simple_set, .-jcc_short_with_code_d_mv_constant_simple_set

    
.globl jcc_short_with_code_d_mv_constant_complex1
         .type   jcc_short_with_code_d_mv_constant_complex1, @function
jcc_short_with_code_d_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_d_mv_constant_complex1, .-jcc_short_with_code_d_mv_constant_complex1

    
.globl jcc_short_with_code_d_mv_constant_complex2
         .type   jcc_short_with_code_d_mv_constant_complex2, @function
jcc_short_with_code_d_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_d_mv_constant_complex2, .-jcc_short_with_code_d_mv_constant_complex2

    
.globl jcc_short_with_code_e_mv_plain
         .type   jcc_short_with_code_e_mv_plain, @function
jcc_short_with_code_e_mv_plain:
      .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_e_mv_plain, .-jcc_short_with_code_e_mv_plain

    
.globl jcc_short_with_code_e_mv_allregs
         .type   jcc_short_with_code_e_mv_allregs, @function
jcc_short_with_code_e_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_e_mv_allregs, .-jcc_short_with_code_e_mv_allregs

    
.globl jcc_short_with_code_e_mv_constant_simple_clear
         .type   jcc_short_with_code_e_mv_constant_simple_clear, @function
jcc_short_with_code_e_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_e_mv_constant_simple_clear, .-jcc_short_with_code_e_mv_constant_simple_clear

    
.globl jcc_short_with_code_e_mv_constant_simple_set
         .type   jcc_short_with_code_e_mv_constant_simple_set, @function
jcc_short_with_code_e_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_e_mv_constant_simple_set, .-jcc_short_with_code_e_mv_constant_simple_set

    
.globl jcc_short_with_code_e_mv_constant_complex1
         .type   jcc_short_with_code_e_mv_constant_complex1, @function
jcc_short_with_code_e_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_e_mv_constant_complex1, .-jcc_short_with_code_e_mv_constant_complex1

    
.globl jcc_short_with_code_e_mv_constant_complex2
         .type   jcc_short_with_code_e_mv_constant_complex2, @function
jcc_short_with_code_e_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_e_mv_constant_complex2, .-jcc_short_with_code_e_mv_constant_complex2

    
.globl jcc_short_with_code_f_mv_plain
         .type   jcc_short_with_code_f_mv_plain, @function
jcc_short_with_code_f_mv_plain:
      .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_f_mv_plain, .-jcc_short_with_code_f_mv_plain

    
.globl jcc_short_with_code_f_mv_allregs
         .type   jcc_short_with_code_f_mv_allregs, @function
jcc_short_with_code_f_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_f_mv_allregs, .-jcc_short_with_code_f_mv_allregs

    
.globl jcc_short_with_code_f_mv_constant_simple_clear
         .type   jcc_short_with_code_f_mv_constant_simple_clear, @function
jcc_short_with_code_f_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_f_mv_constant_simple_clear, .-jcc_short_with_code_f_mv_constant_simple_clear

    
.globl jcc_short_with_code_f_mv_constant_simple_set
         .type   jcc_short_with_code_f_mv_constant_simple_set, @function
jcc_short_with_code_f_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_f_mv_constant_simple_set, .-jcc_short_with_code_f_mv_constant_simple_set

    
.globl jcc_short_with_code_f_mv_constant_complex1
         .type   jcc_short_with_code_f_mv_constant_complex1, @function
jcc_short_with_code_f_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_f_mv_constant_complex1, .-jcc_short_with_code_f_mv_constant_complex1

    
.globl jcc_short_with_code_f_mv_constant_complex2
         .type   jcc_short_with_code_f_mv_constant_complex2, @function
jcc_short_with_code_f_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_short_with_code_f_mv_constant_complex2, .-jcc_short_with_code_f_mv_constant_complex2

    
.globl jcc_long_with_code_0_plain
         .type   jcc_long_with_code_0_plain, @function
jcc_long_with_code_0_plain:
      .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_0_plain, .-jcc_long_with_code_0_plain

    
.globl jcc_long_with_code_0_allregs
         .type   jcc_long_with_code_0_allregs, @function
jcc_long_with_code_0_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_0_allregs, .-jcc_long_with_code_0_allregs

    
.globl jcc_long_with_code_0_constant_simple_clear
         .type   jcc_long_with_code_0_constant_simple_clear, @function
jcc_long_with_code_0_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_0_constant_simple_clear, .-jcc_long_with_code_0_constant_simple_clear

    
.globl jcc_long_with_code_0_constant_simple_set
         .type   jcc_long_with_code_0_constant_simple_set, @function
jcc_long_with_code_0_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_0_constant_simple_set, .-jcc_long_with_code_0_constant_simple_set

    
.globl jcc_long_with_code_0_constant_complex1
         .type   jcc_long_with_code_0_constant_complex1, @function
jcc_long_with_code_0_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_0_constant_complex1, .-jcc_long_with_code_0_constant_complex1

    
.globl jcc_long_with_code_0_constant_complex2
         .type   jcc_long_with_code_0_constant_complex2, @function
jcc_long_with_code_0_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_0_constant_complex2, .-jcc_long_with_code_0_constant_complex2

    
.globl jcc_long_with_code_1_mv_plain
         .type   jcc_long_with_code_1_mv_plain, @function
jcc_long_with_code_1_mv_plain:
      .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_1_mv_plain, .-jcc_long_with_code_1_mv_plain

    
.globl jcc_long_with_code_1_mv_allregs
         .type   jcc_long_with_code_1_mv_allregs, @function
jcc_long_with_code_1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_1_mv_allregs, .-jcc_long_with_code_1_mv_allregs

    
.globl jcc_long_with_code_1_mv_constant_simple_clear
         .type   jcc_long_with_code_1_mv_constant_simple_clear, @function
jcc_long_with_code_1_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_1_mv_constant_simple_clear, .-jcc_long_with_code_1_mv_constant_simple_clear

    
.globl jcc_long_with_code_1_mv_constant_simple_set
         .type   jcc_long_with_code_1_mv_constant_simple_set, @function
jcc_long_with_code_1_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_1_mv_constant_simple_set, .-jcc_long_with_code_1_mv_constant_simple_set

    
.globl jcc_long_with_code_1_mv_constant_complex1
         .type   jcc_long_with_code_1_mv_constant_complex1, @function
jcc_long_with_code_1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_1_mv_constant_complex1, .-jcc_long_with_code_1_mv_constant_complex1

    
.globl jcc_long_with_code_1_mv_constant_complex2
         .type   jcc_long_with_code_1_mv_constant_complex2, @function
jcc_long_with_code_1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_1_mv_constant_complex2, .-jcc_long_with_code_1_mv_constant_complex2

    
.globl jcc_long_with_code_2_mv_plain
         .type   jcc_long_with_code_2_mv_plain, @function
jcc_long_with_code_2_mv_plain:
      .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_2_mv_plain, .-jcc_long_with_code_2_mv_plain

    
.globl jcc_long_with_code_2_mv_allregs
         .type   jcc_long_with_code_2_mv_allregs, @function
jcc_long_with_code_2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_2_mv_allregs, .-jcc_long_with_code_2_mv_allregs

    
.globl jcc_long_with_code_2_mv_constant_simple_clear
         .type   jcc_long_with_code_2_mv_constant_simple_clear, @function
jcc_long_with_code_2_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_2_mv_constant_simple_clear, .-jcc_long_with_code_2_mv_constant_simple_clear

    
.globl jcc_long_with_code_2_mv_constant_simple_set
         .type   jcc_long_with_code_2_mv_constant_simple_set, @function
jcc_long_with_code_2_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_2_mv_constant_simple_set, .-jcc_long_with_code_2_mv_constant_simple_set

    
.globl jcc_long_with_code_2_mv_constant_complex1
         .type   jcc_long_with_code_2_mv_constant_complex1, @function
jcc_long_with_code_2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_2_mv_constant_complex1, .-jcc_long_with_code_2_mv_constant_complex1

    
.globl jcc_long_with_code_2_mv_constant_complex2
         .type   jcc_long_with_code_2_mv_constant_complex2, @function
jcc_long_with_code_2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_2_mv_constant_complex2, .-jcc_long_with_code_2_mv_constant_complex2

    
.globl jcc_long_with_code_3_mv_plain
         .type   jcc_long_with_code_3_mv_plain, @function
jcc_long_with_code_3_mv_plain:
      .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_3_mv_plain, .-jcc_long_with_code_3_mv_plain

    
.globl jcc_long_with_code_3_mv_allregs
         .type   jcc_long_with_code_3_mv_allregs, @function
jcc_long_with_code_3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_3_mv_allregs, .-jcc_long_with_code_3_mv_allregs

    
.globl jcc_long_with_code_3_mv_constant_simple_clear
         .type   jcc_long_with_code_3_mv_constant_simple_clear, @function
jcc_long_with_code_3_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_3_mv_constant_simple_clear, .-jcc_long_with_code_3_mv_constant_simple_clear

    
.globl jcc_long_with_code_3_mv_constant_simple_set
         .type   jcc_long_with_code_3_mv_constant_simple_set, @function
jcc_long_with_code_3_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_3_mv_constant_simple_set, .-jcc_long_with_code_3_mv_constant_simple_set

    
.globl jcc_long_with_code_3_mv_constant_complex1
         .type   jcc_long_with_code_3_mv_constant_complex1, @function
jcc_long_with_code_3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_3_mv_constant_complex1, .-jcc_long_with_code_3_mv_constant_complex1

    
.globl jcc_long_with_code_3_mv_constant_complex2
         .type   jcc_long_with_code_3_mv_constant_complex2, @function
jcc_long_with_code_3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_3_mv_constant_complex2, .-jcc_long_with_code_3_mv_constant_complex2

    
.globl jcc_long_with_code_4_mv_plain
         .type   jcc_long_with_code_4_mv_plain, @function
jcc_long_with_code_4_mv_plain:
      .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_4_mv_plain, .-jcc_long_with_code_4_mv_plain

    
.globl jcc_long_with_code_4_mv_allregs
         .type   jcc_long_with_code_4_mv_allregs, @function
jcc_long_with_code_4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_4_mv_allregs, .-jcc_long_with_code_4_mv_allregs

    
.globl jcc_long_with_code_4_mv_constant_simple_clear
         .type   jcc_long_with_code_4_mv_constant_simple_clear, @function
jcc_long_with_code_4_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_4_mv_constant_simple_clear, .-jcc_long_with_code_4_mv_constant_simple_clear

    
.globl jcc_long_with_code_4_mv_constant_simple_set
         .type   jcc_long_with_code_4_mv_constant_simple_set, @function
jcc_long_with_code_4_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_4_mv_constant_simple_set, .-jcc_long_with_code_4_mv_constant_simple_set

    
.globl jcc_long_with_code_4_mv_constant_complex1
         .type   jcc_long_with_code_4_mv_constant_complex1, @function
jcc_long_with_code_4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_4_mv_constant_complex1, .-jcc_long_with_code_4_mv_constant_complex1

    
.globl jcc_long_with_code_4_mv_constant_complex2
         .type   jcc_long_with_code_4_mv_constant_complex2, @function
jcc_long_with_code_4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_4_mv_constant_complex2, .-jcc_long_with_code_4_mv_constant_complex2

    
.globl jcc_long_with_code_5_mv_plain
         .type   jcc_long_with_code_5_mv_plain, @function
jcc_long_with_code_5_mv_plain:
      .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_5_mv_plain, .-jcc_long_with_code_5_mv_plain

    
.globl jcc_long_with_code_5_mv_allregs
         .type   jcc_long_with_code_5_mv_allregs, @function
jcc_long_with_code_5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_5_mv_allregs, .-jcc_long_with_code_5_mv_allregs

    
.globl jcc_long_with_code_5_mv_constant_simple_clear
         .type   jcc_long_with_code_5_mv_constant_simple_clear, @function
jcc_long_with_code_5_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_5_mv_constant_simple_clear, .-jcc_long_with_code_5_mv_constant_simple_clear

    
.globl jcc_long_with_code_5_mv_constant_simple_set
         .type   jcc_long_with_code_5_mv_constant_simple_set, @function
jcc_long_with_code_5_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_5_mv_constant_simple_set, .-jcc_long_with_code_5_mv_constant_simple_set

    
.globl jcc_long_with_code_5_mv_constant_complex1
         .type   jcc_long_with_code_5_mv_constant_complex1, @function
jcc_long_with_code_5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_5_mv_constant_complex1, .-jcc_long_with_code_5_mv_constant_complex1

    
.globl jcc_long_with_code_5_mv_constant_complex2
         .type   jcc_long_with_code_5_mv_constant_complex2, @function
jcc_long_with_code_5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_5_mv_constant_complex2, .-jcc_long_with_code_5_mv_constant_complex2

    
.globl jcc_long_with_code_6_mv_plain
         .type   jcc_long_with_code_6_mv_plain, @function
jcc_long_with_code_6_mv_plain:
      .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_6_mv_plain, .-jcc_long_with_code_6_mv_plain

    
.globl jcc_long_with_code_6_mv_allregs
         .type   jcc_long_with_code_6_mv_allregs, @function
jcc_long_with_code_6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_6_mv_allregs, .-jcc_long_with_code_6_mv_allregs

    
.globl jcc_long_with_code_6_mv_constant_simple_clear
         .type   jcc_long_with_code_6_mv_constant_simple_clear, @function
jcc_long_with_code_6_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_6_mv_constant_simple_clear, .-jcc_long_with_code_6_mv_constant_simple_clear

    
.globl jcc_long_with_code_6_mv_constant_simple_set
         .type   jcc_long_with_code_6_mv_constant_simple_set, @function
jcc_long_with_code_6_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_6_mv_constant_simple_set, .-jcc_long_with_code_6_mv_constant_simple_set

    
.globl jcc_long_with_code_6_mv_constant_complex1
         .type   jcc_long_with_code_6_mv_constant_complex1, @function
jcc_long_with_code_6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_6_mv_constant_complex1, .-jcc_long_with_code_6_mv_constant_complex1

    
.globl jcc_long_with_code_6_mv_constant_complex2
         .type   jcc_long_with_code_6_mv_constant_complex2, @function
jcc_long_with_code_6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_6_mv_constant_complex2, .-jcc_long_with_code_6_mv_constant_complex2

    
.globl jcc_long_with_code_7_mv_plain
         .type   jcc_long_with_code_7_mv_plain, @function
jcc_long_with_code_7_mv_plain:
      .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_7_mv_plain, .-jcc_long_with_code_7_mv_plain

    
.globl jcc_long_with_code_7_mv_allregs
         .type   jcc_long_with_code_7_mv_allregs, @function
jcc_long_with_code_7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_7_mv_allregs, .-jcc_long_with_code_7_mv_allregs

    
.globl jcc_long_with_code_7_mv_constant_simple_clear
         .type   jcc_long_with_code_7_mv_constant_simple_clear, @function
jcc_long_with_code_7_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_7_mv_constant_simple_clear, .-jcc_long_with_code_7_mv_constant_simple_clear

    
.globl jcc_long_with_code_7_mv_constant_simple_set
         .type   jcc_long_with_code_7_mv_constant_simple_set, @function
jcc_long_with_code_7_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_7_mv_constant_simple_set, .-jcc_long_with_code_7_mv_constant_simple_set

    
.globl jcc_long_with_code_7_mv_constant_complex1
         .type   jcc_long_with_code_7_mv_constant_complex1, @function
jcc_long_with_code_7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_7_mv_constant_complex1, .-jcc_long_with_code_7_mv_constant_complex1

    
.globl jcc_long_with_code_7_mv_constant_complex2
         .type   jcc_long_with_code_7_mv_constant_complex2, @function
jcc_long_with_code_7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_7_mv_constant_complex2, .-jcc_long_with_code_7_mv_constant_complex2

    
.globl jcc_long_with_code_8_mv_plain
         .type   jcc_long_with_code_8_mv_plain, @function
jcc_long_with_code_8_mv_plain:
      .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_8_mv_plain, .-jcc_long_with_code_8_mv_plain

    
.globl jcc_long_with_code_8_mv_allregs
         .type   jcc_long_with_code_8_mv_allregs, @function
jcc_long_with_code_8_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_8_mv_allregs, .-jcc_long_with_code_8_mv_allregs

    
.globl jcc_long_with_code_8_mv_constant_simple_clear
         .type   jcc_long_with_code_8_mv_constant_simple_clear, @function
jcc_long_with_code_8_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_8_mv_constant_simple_clear, .-jcc_long_with_code_8_mv_constant_simple_clear

    
.globl jcc_long_with_code_8_mv_constant_simple_set
         .type   jcc_long_with_code_8_mv_constant_simple_set, @function
jcc_long_with_code_8_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_8_mv_constant_simple_set, .-jcc_long_with_code_8_mv_constant_simple_set

    
.globl jcc_long_with_code_8_mv_constant_complex1
         .type   jcc_long_with_code_8_mv_constant_complex1, @function
jcc_long_with_code_8_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_8_mv_constant_complex1, .-jcc_long_with_code_8_mv_constant_complex1

    
.globl jcc_long_with_code_8_mv_constant_complex2
         .type   jcc_long_with_code_8_mv_constant_complex2, @function
jcc_long_with_code_8_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_8_mv_constant_complex2, .-jcc_long_with_code_8_mv_constant_complex2

    
.globl jcc_long_with_code_9_mv_plain
         .type   jcc_long_with_code_9_mv_plain, @function
jcc_long_with_code_9_mv_plain:
      .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_9_mv_plain, .-jcc_long_with_code_9_mv_plain

    
.globl jcc_long_with_code_9_mv_allregs
         .type   jcc_long_with_code_9_mv_allregs, @function
jcc_long_with_code_9_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_9_mv_allregs, .-jcc_long_with_code_9_mv_allregs

    
.globl jcc_long_with_code_9_mv_constant_simple_clear
         .type   jcc_long_with_code_9_mv_constant_simple_clear, @function
jcc_long_with_code_9_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_9_mv_constant_simple_clear, .-jcc_long_with_code_9_mv_constant_simple_clear

    
.globl jcc_long_with_code_9_mv_constant_simple_set
         .type   jcc_long_with_code_9_mv_constant_simple_set, @function
jcc_long_with_code_9_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_9_mv_constant_simple_set, .-jcc_long_with_code_9_mv_constant_simple_set

    
.globl jcc_long_with_code_9_mv_constant_complex1
         .type   jcc_long_with_code_9_mv_constant_complex1, @function
jcc_long_with_code_9_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_9_mv_constant_complex1, .-jcc_long_with_code_9_mv_constant_complex1

    
.globl jcc_long_with_code_9_mv_constant_complex2
         .type   jcc_long_with_code_9_mv_constant_complex2, @function
jcc_long_with_code_9_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_9_mv_constant_complex2, .-jcc_long_with_code_9_mv_constant_complex2

    
.globl jcc_long_with_code_a_mv_plain
         .type   jcc_long_with_code_a_mv_plain, @function
jcc_long_with_code_a_mv_plain:
      .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_a_mv_plain, .-jcc_long_with_code_a_mv_plain

    
.globl jcc_long_with_code_a_mv_allregs
         .type   jcc_long_with_code_a_mv_allregs, @function
jcc_long_with_code_a_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_a_mv_allregs, .-jcc_long_with_code_a_mv_allregs

    
.globl jcc_long_with_code_a_mv_constant_simple_clear
         .type   jcc_long_with_code_a_mv_constant_simple_clear, @function
jcc_long_with_code_a_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_a_mv_constant_simple_clear, .-jcc_long_with_code_a_mv_constant_simple_clear

    
.globl jcc_long_with_code_a_mv_constant_simple_set
         .type   jcc_long_with_code_a_mv_constant_simple_set, @function
jcc_long_with_code_a_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_a_mv_constant_simple_set, .-jcc_long_with_code_a_mv_constant_simple_set

    
.globl jcc_long_with_code_a_mv_constant_complex1
         .type   jcc_long_with_code_a_mv_constant_complex1, @function
jcc_long_with_code_a_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_a_mv_constant_complex1, .-jcc_long_with_code_a_mv_constant_complex1

    
.globl jcc_long_with_code_a_mv_constant_complex2
         .type   jcc_long_with_code_a_mv_constant_complex2, @function
jcc_long_with_code_a_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_a_mv_constant_complex2, .-jcc_long_with_code_a_mv_constant_complex2

    
.globl jcc_long_with_code_b_mv_plain
         .type   jcc_long_with_code_b_mv_plain, @function
jcc_long_with_code_b_mv_plain:
      .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_b_mv_plain, .-jcc_long_with_code_b_mv_plain

    
.globl jcc_long_with_code_b_mv_allregs
         .type   jcc_long_with_code_b_mv_allregs, @function
jcc_long_with_code_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_b_mv_allregs, .-jcc_long_with_code_b_mv_allregs

    
.globl jcc_long_with_code_b_mv_constant_simple_clear
         .type   jcc_long_with_code_b_mv_constant_simple_clear, @function
jcc_long_with_code_b_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_b_mv_constant_simple_clear, .-jcc_long_with_code_b_mv_constant_simple_clear

    
.globl jcc_long_with_code_b_mv_constant_simple_set
         .type   jcc_long_with_code_b_mv_constant_simple_set, @function
jcc_long_with_code_b_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_b_mv_constant_simple_set, .-jcc_long_with_code_b_mv_constant_simple_set

    
.globl jcc_long_with_code_b_mv_constant_complex1
         .type   jcc_long_with_code_b_mv_constant_complex1, @function
jcc_long_with_code_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_b_mv_constant_complex1, .-jcc_long_with_code_b_mv_constant_complex1

    
.globl jcc_long_with_code_b_mv_constant_complex2
         .type   jcc_long_with_code_b_mv_constant_complex2, @function
jcc_long_with_code_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_b_mv_constant_complex2, .-jcc_long_with_code_b_mv_constant_complex2

    
.globl jcc_long_with_code_c_mv_plain
         .type   jcc_long_with_code_c_mv_plain, @function
jcc_long_with_code_c_mv_plain:
      .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_c_mv_plain, .-jcc_long_with_code_c_mv_plain

    
.globl jcc_long_with_code_c_mv_allregs
         .type   jcc_long_with_code_c_mv_allregs, @function
jcc_long_with_code_c_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_c_mv_allregs, .-jcc_long_with_code_c_mv_allregs

    
.globl jcc_long_with_code_c_mv_constant_simple_clear
         .type   jcc_long_with_code_c_mv_constant_simple_clear, @function
jcc_long_with_code_c_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_c_mv_constant_simple_clear, .-jcc_long_with_code_c_mv_constant_simple_clear

    
.globl jcc_long_with_code_c_mv_constant_simple_set
         .type   jcc_long_with_code_c_mv_constant_simple_set, @function
jcc_long_with_code_c_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_c_mv_constant_simple_set, .-jcc_long_with_code_c_mv_constant_simple_set

    
.globl jcc_long_with_code_c_mv_constant_complex1
         .type   jcc_long_with_code_c_mv_constant_complex1, @function
jcc_long_with_code_c_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_c_mv_constant_complex1, .-jcc_long_with_code_c_mv_constant_complex1

    
.globl jcc_long_with_code_c_mv_constant_complex2
         .type   jcc_long_with_code_c_mv_constant_complex2, @function
jcc_long_with_code_c_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_c_mv_constant_complex2, .-jcc_long_with_code_c_mv_constant_complex2

    
.globl jcc_long_with_code_d_mv_plain
         .type   jcc_long_with_code_d_mv_plain, @function
jcc_long_with_code_d_mv_plain:
      .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_d_mv_plain, .-jcc_long_with_code_d_mv_plain

    
.globl jcc_long_with_code_d_mv_allregs
         .type   jcc_long_with_code_d_mv_allregs, @function
jcc_long_with_code_d_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_d_mv_allregs, .-jcc_long_with_code_d_mv_allregs

    
.globl jcc_long_with_code_d_mv_constant_simple_clear
         .type   jcc_long_with_code_d_mv_constant_simple_clear, @function
jcc_long_with_code_d_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_d_mv_constant_simple_clear, .-jcc_long_with_code_d_mv_constant_simple_clear

    
.globl jcc_long_with_code_d_mv_constant_simple_set
         .type   jcc_long_with_code_d_mv_constant_simple_set, @function
jcc_long_with_code_d_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_d_mv_constant_simple_set, .-jcc_long_with_code_d_mv_constant_simple_set

    
.globl jcc_long_with_code_d_mv_constant_complex1
         .type   jcc_long_with_code_d_mv_constant_complex1, @function
jcc_long_with_code_d_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_d_mv_constant_complex1, .-jcc_long_with_code_d_mv_constant_complex1

    
.globl jcc_long_with_code_d_mv_constant_complex2
         .type   jcc_long_with_code_d_mv_constant_complex2, @function
jcc_long_with_code_d_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_d_mv_constant_complex2, .-jcc_long_with_code_d_mv_constant_complex2

    
.globl jcc_long_with_code_e_mv_plain
         .type   jcc_long_with_code_e_mv_plain, @function
jcc_long_with_code_e_mv_plain:
      .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_e_mv_plain, .-jcc_long_with_code_e_mv_plain

    
.globl jcc_long_with_code_e_mv_allregs
         .type   jcc_long_with_code_e_mv_allregs, @function
jcc_long_with_code_e_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_e_mv_allregs, .-jcc_long_with_code_e_mv_allregs

    
.globl jcc_long_with_code_e_mv_constant_simple_clear
         .type   jcc_long_with_code_e_mv_constant_simple_clear, @function
jcc_long_with_code_e_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_e_mv_constant_simple_clear, .-jcc_long_with_code_e_mv_constant_simple_clear

    
.globl jcc_long_with_code_e_mv_constant_simple_set
         .type   jcc_long_with_code_e_mv_constant_simple_set, @function
jcc_long_with_code_e_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_e_mv_constant_simple_set, .-jcc_long_with_code_e_mv_constant_simple_set

    
.globl jcc_long_with_code_e_mv_constant_complex1
         .type   jcc_long_with_code_e_mv_constant_complex1, @function
jcc_long_with_code_e_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_e_mv_constant_complex1, .-jcc_long_with_code_e_mv_constant_complex1

    
.globl jcc_long_with_code_e_mv_constant_complex2
         .type   jcc_long_with_code_e_mv_constant_complex2, @function
jcc_long_with_code_e_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_e_mv_constant_complex2, .-jcc_long_with_code_e_mv_constant_complex2

    
.globl jcc_long_with_code_f_mv_plain
         .type   jcc_long_with_code_f_mv_plain, @function
jcc_long_with_code_f_mv_plain:
      .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_f_mv_plain, .-jcc_long_with_code_f_mv_plain

    
.globl jcc_long_with_code_f_mv_allregs
         .type   jcc_long_with_code_f_mv_allregs, @function
jcc_long_with_code_f_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_f_mv_allregs, .-jcc_long_with_code_f_mv_allregs

    
.globl jcc_long_with_code_f_mv_constant_simple_clear
         .type   jcc_long_with_code_f_mv_constant_simple_clear, @function
jcc_long_with_code_f_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_f_mv_constant_simple_clear, .-jcc_long_with_code_f_mv_constant_simple_clear

    
.globl jcc_long_with_code_f_mv_constant_simple_set
         .type   jcc_long_with_code_f_mv_constant_simple_set, @function
jcc_long_with_code_f_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_f_mv_constant_simple_set, .-jcc_long_with_code_f_mv_constant_simple_set

    
.globl jcc_long_with_code_f_mv_constant_complex1
         .type   jcc_long_with_code_f_mv_constant_complex1, @function
jcc_long_with_code_f_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_f_mv_constant_complex1, .-jcc_long_with_code_f_mv_constant_complex1

    
.globl jcc_long_with_code_f_mv_constant_complex2
         .type   jcc_long_with_code_f_mv_constant_complex2, @function
jcc_long_with_code_f_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcc_long_with_code_f_mv_constant_complex2, .-jcc_long_with_code_f_mv_constant_complex2

    
.globl jcxz_plain
         .type   jcxz_plain, @function
jcxz_plain:
      .byte 0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jcxz_plain, .-jcxz_plain

    
.globl jcxz_allregs
         .type   jcxz_allregs, @function
jcxz_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcxz_allregs, .-jcxz_allregs

    
.globl jcxz_constant_simple
         .type   jcxz_constant_simple, @function
jcxz_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcxz_constant_simple, .-jcxz_constant_simple

    
.globl jcxz_constant_complex1
         .type   jcxz_constant_complex1, @function
jcxz_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcxz_constant_complex1, .-jcxz_constant_complex1

    
.globl jcxz_constant_complex2
         .type   jcxz_constant_complex2, @function
jcxz_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jcxz_constant_complex2, .-jcxz_constant_complex2

    
.globl jecxz_plain
         .type   jecxz_plain, @function
jecxz_plain:
      .byte 0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jecxz_plain, .-jecxz_plain

    
.globl jecxz_allregs
         .type   jecxz_allregs, @function
jecxz_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_allregs, .-jecxz_allregs

    
.globl jecxz_constant_simple
         .type   jecxz_constant_simple, @function
jecxz_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_constant_simple, .-jecxz_constant_simple

    
.globl jecxz_constant_complex1
         .type   jecxz_constant_complex1, @function
jecxz_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_constant_complex1, .-jecxz_constant_complex1

    
.globl jecxz_constant_complex2
         .type   jecxz_constant_complex2, @function
jecxz_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_constant_complex2, .-jecxz_constant_complex2

    
.globl jecxz_test_none_mv_plain
         .type   jecxz_test_none_mv_plain, @function
jecxz_test_none_mv_plain:
      .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jecxz_test_none_mv_plain, .-jecxz_test_none_mv_plain

    
.globl jecxz_test_none_mv_allregs
         .type   jecxz_test_none_mv_allregs, @function
jecxz_test_none_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_test_none_mv_allregs, .-jecxz_test_none_mv_allregs

    
.globl jecxz_test_none_mv_constant_simple
         .type   jecxz_test_none_mv_constant_simple, @function
jecxz_test_none_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_test_none_mv_constant_simple, .-jecxz_test_none_mv_constant_simple

    
.globl jecxz_test_none_mv_constant_complex1
         .type   jecxz_test_none_mv_constant_complex1, @function
jecxz_test_none_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_test_none_mv_constant_complex1, .-jecxz_test_none_mv_constant_complex1

    
.globl jecxz_test_none_mv_constant_complex2
         .type   jecxz_test_none_mv_constant_complex2, @function
jecxz_test_none_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_test_none_mv_constant_complex2, .-jecxz_test_none_mv_constant_complex2

    
.globl jecxz_test_66_mv_plain
         .type   jecxz_test_66_mv_plain, @function
jecxz_test_66_mv_plain:
      .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0x66,0xe3,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jecxz_test_66_mv_plain, .-jecxz_test_66_mv_plain

    
.globl jecxz_test_66_mv_allregs
         .type   jecxz_test_66_mv_allregs, @function
jecxz_test_66_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0x66,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_test_66_mv_allregs, .-jecxz_test_66_mv_allregs

    
.globl jecxz_test_66_mv_constant_simple
         .type   jecxz_test_66_mv_constant_simple, @function
jecxz_test_66_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0x66,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_test_66_mv_constant_simple, .-jecxz_test_66_mv_constant_simple

    
.globl jecxz_test_66_mv_constant_complex1
         .type   jecxz_test_66_mv_constant_complex1, @function
jecxz_test_66_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0x66,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_test_66_mv_constant_complex1, .-jecxz_test_66_mv_constant_complex1

    
.globl jecxz_test_66_mv_constant_complex2
         .type   jecxz_test_66_mv_constant_complex2, @function
jecxz_test_66_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0x66,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_test_66_mv_constant_complex2, .-jecxz_test_66_mv_constant_complex2

    
.globl jecxz_test_67_mv_plain
         .type   jecxz_test_67_mv_plain, @function
jecxz_test_67_mv_plain:
      .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov $0x0,%eax

    ret
         .size   jecxz_test_67_mv_plain, .-jecxz_test_67_mv_plain

    
.globl jecxz_test_67_mv_allregs
         .type   jecxz_test_67_mv_allregs, @function
jecxz_test_67_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_test_67_mv_allregs, .-jecxz_test_67_mv_allregs

    
.globl jecxz_test_67_mv_constant_simple
         .type   jecxz_test_67_mv_constant_simple, @function
jecxz_test_67_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_test_67_mv_constant_simple, .-jecxz_test_67_mv_constant_simple

    
.globl jecxz_test_67_mv_constant_complex1
         .type   jecxz_test_67_mv_constant_complex1, @function
jecxz_test_67_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_test_67_mv_constant_complex1, .-jecxz_test_67_mv_constant_complex1

    
.globl jecxz_test_67_mv_constant_complex2
         .type   jecxz_test_67_mv_constant_complex2, @function
jecxz_test_67_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xb9,0x00,0x00,0x01,0x00,0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jecxz_test_67_mv_constant_complex2, .-jecxz_test_67_mv_constant_complex2

    
.globl jmp1_plain
         .type   jmp1_plain, @function
jmp1_plain:
      .byte 0xeb,0x01,0x40,0x40
  mov $0x0,%eax

    ret
         .size   jmp1_plain, .-jmp1_plain

    
.globl jmp1_allregs
         .type   jmp1_allregs, @function
jmp1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xeb,0x01,0x40,0x40
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jmp1_allregs, .-jmp1_allregs

    
.globl jmp1_constant_simple
         .type   jmp1_constant_simple, @function
jmp1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xeb,0x01,0x40,0x40
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jmp1_constant_simple, .-jmp1_constant_simple

    
.globl jmp1_constant_complex1
         .type   jmp1_constant_complex1, @function
jmp1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xeb,0x01,0x40,0x40
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jmp1_constant_complex1, .-jmp1_constant_complex1

    
.globl jmp1_constant_complex2
         .type   jmp1_constant_complex2, @function
jmp1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xeb,0x01,0x40,0x40
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jmp1_constant_complex2, .-jmp1_constant_complex2

    
.globl jmp2_mv_plain
         .type   jmp2_mv_plain, @function
jmp2_mv_plain:
      .byte 0xe9,0x01,0x00,0x00,0x00,0x40,0x40
  mov $0x0,%eax

    ret
         .size   jmp2_mv_plain, .-jmp2_mv_plain

    
.globl jmp2_mv_allregs
         .type   jmp2_mv_allregs, @function
jmp2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xe9,0x01,0x00,0x00,0x00,0x40,0x40
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jmp2_mv_allregs, .-jmp2_mv_allregs

    
.globl jmp2_mv_constant_simple
         .type   jmp2_mv_constant_simple, @function
jmp2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xe9,0x01,0x00,0x00,0x00,0x40,0x40
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jmp2_mv_constant_simple, .-jmp2_mv_constant_simple

    
.globl jmp2_mv_constant_complex1
         .type   jmp2_mv_constant_complex1, @function
jmp2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xe9,0x01,0x00,0x00,0x00,0x40,0x40
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jmp2_mv_constant_complex1, .-jmp2_mv_constant_complex1

    
.globl jmp2_mv_constant_complex2
         .type   jmp2_mv_constant_complex2, @function
jmp2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xe9,0x01,0x00,0x00,0x00,0x40,0x40
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jmp2_mv_constant_complex2, .-jmp2_mv_constant_complex2

    
.globl jmp3_mv_plain
         .type   jmp3_mv_plain, @function
jmp3_mv_plain:
      .byte 0xff,0x23
  mov $0x0,%eax

    ret
         .size   jmp3_mv_plain, .-jmp3_mv_plain

    
.globl jmp3_mv_allregs
         .type   jmp3_mv_allregs, @function
jmp3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xff,0x23
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jmp3_mv_allregs, .-jmp3_mv_allregs

    
.globl jmp3_mv_constant_simple
         .type   jmp3_mv_constant_simple, @function
jmp3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xff,0x23
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jmp3_mv_constant_simple, .-jmp3_mv_constant_simple

    
.globl jmp3_mv_constant_complex1
         .type   jmp3_mv_constant_complex1, @function
jmp3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xff,0x23
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jmp3_mv_constant_complex1, .-jmp3_mv_constant_complex1

    
.globl jmp3_mv_constant_complex2
         .type   jmp3_mv_constant_complex2, @function
jmp3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xff,0x23
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   jmp3_mv_constant_complex2, .-jmp3_mv_constant_complex2

    
.globl lahf_plain
         .type   lahf_plain, @function
lahf_plain:
      lahf
  mov $0x0,%eax

    ret
         .size   lahf_plain, .-lahf_plain

    
.globl lahf_allregs
         .type   lahf_allregs, @function
lahf_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lahf_allregs, .-lahf_allregs

    
.globl lahf_constant_simple_clear
         .type   lahf_constant_simple_clear, @function
lahf_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lahf_constant_simple_clear, .-lahf_constant_simple_clear

    
.globl lahf_constant_simple_set
         .type   lahf_constant_simple_set, @function
lahf_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lahf_constant_simple_set, .-lahf_constant_simple_set

    
.globl lahf_constant_complex1
         .type   lahf_constant_complex1, @function
lahf_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lahf_constant_complex1, .-lahf_constant_complex1

    
.globl lahf_constant_complex2
         .type   lahf_constant_complex2, @function
lahf_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lahf_constant_complex2, .-lahf_constant_complex2

    
.globl lar_plain
         .type   lar_plain, @function
lar_plain:
      lar %ax,%ebx
  mov $0x0,%eax

    ret
         .size   lar_plain, .-lar_plain

    
.globl lar_allregs
         .type   lar_allregs, @function
lar_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lar %ax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lar_allregs, .-lar_allregs

    
.globl lar_constant_simple
         .type   lar_constant_simple, @function
lar_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lar %ax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lar_constant_simple, .-lar_constant_simple

    
.globl lar_constant_complex1
         .type   lar_constant_complex1, @function
lar_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lar %ax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lar_constant_complex1, .-lar_constant_complex1

    
.globl lar_constant_complex2
         .type   lar_constant_complex2, @function
lar_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lar %ax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lar_constant_complex2, .-lar_constant_complex2

    
.globl lea1_plain
         .type   lea1_plain, @function
lea1_plain:
      lea 0x42(%ebx),%eax
  mov $0x0,%eax

    ret
         .size   lea1_plain, .-lea1_plain

    
.globl lea1_allregs
         .type   lea1_allregs, @function
lea1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lea 0x42(%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lea1_allregs, .-lea1_allregs

    
.globl lea1_constant_simple
         .type   lea1_constant_simple, @function
lea1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lea 0x42(%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lea1_constant_simple, .-lea1_constant_simple

    
.globl lea1_constant_complex1
         .type   lea1_constant_complex1, @function
lea1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lea 0x42(%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lea1_constant_complex1, .-lea1_constant_complex1

    
.globl lea1_constant_complex2
         .type   lea1_constant_complex2, @function
lea1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lea 0x42(%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lea1_constant_complex2, .-lea1_constant_complex2

    
.globl lea2_mv_plain
         .type   lea2_mv_plain, @function
lea2_mv_plain:
      .byte 0x66,0x8d,0x43,0x42
  mov $0x0,%eax

    ret
         .size   lea2_mv_plain, .-lea2_mv_plain

    
.globl lea2_mv_allregs
         .type   lea2_mv_allregs, @function
lea2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x8d,0x43,0x42
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lea2_mv_allregs, .-lea2_mv_allregs

    
.globl lea2_mv_constant_simple
         .type   lea2_mv_constant_simple, @function
lea2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x8d,0x43,0x42
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lea2_mv_constant_simple, .-lea2_mv_constant_simple

    
.globl lea2_mv_constant_complex1
         .type   lea2_mv_constant_complex1, @function
lea2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x8d,0x43,0x42
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lea2_mv_constant_complex1, .-lea2_mv_constant_complex1

    
.globl lea2_mv_constant_complex2
         .type   lea2_mv_constant_complex2, @function
lea2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x8d,0x43,0x42
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lea2_mv_constant_complex2, .-lea2_mv_constant_complex2

    
.globl leave1_plain
         .type   leave1_plain, @function
leave1_plain:
      .byte 0xc9
  mov $0x0,%eax

    ret
         .size   leave1_plain, .-leave1_plain

    
.globl leave1_allregs
         .type   leave1_allregs, @function
leave1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc9
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   leave1_allregs, .-leave1_allregs

    
.globl leave1_constant_simple
         .type   leave1_constant_simple, @function
leave1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc9
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   leave1_constant_simple, .-leave1_constant_simple

    
.globl leave1_constant_complex1
         .type   leave1_constant_complex1, @function
leave1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc9
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   leave1_constant_complex1, .-leave1_constant_complex1

    
.globl leave1_constant_complex2
         .type   leave1_constant_complex2, @function
leave1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc9
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   leave1_constant_complex2, .-leave1_constant_complex2

    
.globl leave2_mv_plain
         .type   leave2_mv_plain, @function
leave2_mv_plain:
      .byte 0x66,0xc9
  mov $0x0,%eax

    ret
         .size   leave2_mv_plain, .-leave2_mv_plain

    
.globl leave2_mv_allregs
         .type   leave2_mv_allregs, @function
leave2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xc9
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   leave2_mv_allregs, .-leave2_mv_allregs

    
.globl leave2_mv_constant_simple
         .type   leave2_mv_constant_simple, @function
leave2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xc9
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   leave2_mv_constant_simple, .-leave2_mv_constant_simple

    
.globl leave2_mv_constant_complex1
         .type   leave2_mv_constant_complex1, @function
leave2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xc9
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   leave2_mv_constant_complex1, .-leave2_mv_constant_complex1

    
.globl leave2_mv_constant_complex2
         .type   leave2_mv_constant_complex2, @function
leave2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xc9
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   leave2_mv_constant_complex2, .-leave2_mv_constant_complex2

    
.globl lgdtl_plain
         .type   lgdtl_plain, @function
lgdtl_plain:
      lgdtl (%eax)
  mov $0x0,%eax

    ret
         .size   lgdtl_plain, .-lgdtl_plain

    
.globl lgdtl_allregs
         .type   lgdtl_allregs, @function
lgdtl_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lgdtl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lgdtl_allregs, .-lgdtl_allregs

    
.globl lgdtl_constant_simple
         .type   lgdtl_constant_simple, @function
lgdtl_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lgdtl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lgdtl_constant_simple, .-lgdtl_constant_simple

    
.globl lgdtl_constant_complex1
         .type   lgdtl_constant_complex1, @function
lgdtl_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lgdtl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lgdtl_constant_complex1, .-lgdtl_constant_complex1

    
.globl lgdtl_constant_complex2
         .type   lgdtl_constant_complex2, @function
lgdtl_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lgdtl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lgdtl_constant_complex2, .-lgdtl_constant_complex2

    
.globl lidtl_plain
         .type   lidtl_plain, @function
lidtl_plain:
      lidtl (%eax)
  mov $0x0,%eax

    ret
         .size   lidtl_plain, .-lidtl_plain

    
.globl lidtl_allregs
         .type   lidtl_allregs, @function
lidtl_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lidtl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lidtl_allregs, .-lidtl_allregs

    
.globl lidtl_constant_simple
         .type   lidtl_constant_simple, @function
lidtl_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lidtl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lidtl_constant_simple, .-lidtl_constant_simple

    
.globl lidtl_constant_complex1
         .type   lidtl_constant_complex1, @function
lidtl_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lidtl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lidtl_constant_complex1, .-lidtl_constant_complex1

    
.globl lidtl_constant_complex2
         .type   lidtl_constant_complex2, @function
lidtl_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lidtl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lidtl_constant_complex2, .-lidtl_constant_complex2

    
.globl lds1_plain
         .type   lds1_plain, @function
lds1_plain:
      lds (%ecx),%edx
  mov $0x0,%eax

    ret
         .size   lds1_plain, .-lds1_plain

    
.globl lds1_allregs
         .type   lds1_allregs, @function
lds1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lds (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lds1_allregs, .-lds1_allregs

    
.globl lds1_constant_simple
         .type   lds1_constant_simple, @function
lds1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lds (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lds1_constant_simple, .-lds1_constant_simple

    
.globl lds1_constant_complex1
         .type   lds1_constant_complex1, @function
lds1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lds (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lds1_constant_complex1, .-lds1_constant_complex1

    
.globl lds1_constant_complex2
         .type   lds1_constant_complex2, @function
lds1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lds (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lds1_constant_complex2, .-lds1_constant_complex2

    
.globl lds2_mv_plain
         .type   lds2_mv_plain, @function
lds2_mv_plain:
      lds (%ecx),%dx
  mov $0x0,%eax

    ret
         .size   lds2_mv_plain, .-lds2_mv_plain

    
.globl lds2_mv_allregs
         .type   lds2_mv_allregs, @function
lds2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lds (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lds2_mv_allregs, .-lds2_mv_allregs

    
.globl lds2_mv_constant_simple
         .type   lds2_mv_constant_simple, @function
lds2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lds (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lds2_mv_constant_simple, .-lds2_mv_constant_simple

    
.globl lds2_mv_constant_complex1
         .type   lds2_mv_constant_complex1, @function
lds2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lds (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lds2_mv_constant_complex1, .-lds2_mv_constant_complex1

    
.globl lds2_mv_constant_complex2
         .type   lds2_mv_constant_complex2, @function
lds2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lds (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lds2_mv_constant_complex2, .-lds2_mv_constant_complex2

    
.globl les1_plain
         .type   les1_plain, @function
les1_plain:
      les (%ecx),%edx
  mov $0x0,%eax

    ret
         .size   les1_plain, .-les1_plain

    
.globl les1_allregs
         .type   les1_allregs, @function
les1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  les (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   les1_allregs, .-les1_allregs

    
.globl les1_constant_simple
         .type   les1_constant_simple, @function
les1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  les (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   les1_constant_simple, .-les1_constant_simple

    
.globl les1_constant_complex1
         .type   les1_constant_complex1, @function
les1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  les (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   les1_constant_complex1, .-les1_constant_complex1

    
.globl les1_constant_complex2
         .type   les1_constant_complex2, @function
les1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  les (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   les1_constant_complex2, .-les1_constant_complex2

    
.globl les2_mv_plain
         .type   les2_mv_plain, @function
les2_mv_plain:
      les (%ecx),%dx
  mov $0x0,%eax

    ret
         .size   les2_mv_plain, .-les2_mv_plain

    
.globl les2_mv_allregs
         .type   les2_mv_allregs, @function
les2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  les (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   les2_mv_allregs, .-les2_mv_allregs

    
.globl les2_mv_constant_simple
         .type   les2_mv_constant_simple, @function
les2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  les (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   les2_mv_constant_simple, .-les2_mv_constant_simple

    
.globl les2_mv_constant_complex1
         .type   les2_mv_constant_complex1, @function
les2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  les (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   les2_mv_constant_complex1, .-les2_mv_constant_complex1

    
.globl les2_mv_constant_complex2
         .type   les2_mv_constant_complex2, @function
les2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  les (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   les2_mv_constant_complex2, .-les2_mv_constant_complex2

    
.globl lfs1_plain
         .type   lfs1_plain, @function
lfs1_plain:
      lfs (%ecx),%edx
  mov $0x0,%eax

    ret
         .size   lfs1_plain, .-lfs1_plain

    
.globl lfs1_allregs
         .type   lfs1_allregs, @function
lfs1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lfs (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lfs1_allregs, .-lfs1_allregs

    
.globl lfs1_constant_simple
         .type   lfs1_constant_simple, @function
lfs1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lfs (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lfs1_constant_simple, .-lfs1_constant_simple

    
.globl lfs1_constant_complex1
         .type   lfs1_constant_complex1, @function
lfs1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lfs (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lfs1_constant_complex1, .-lfs1_constant_complex1

    
.globl lfs1_constant_complex2
         .type   lfs1_constant_complex2, @function
lfs1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lfs (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lfs1_constant_complex2, .-lfs1_constant_complex2

    
.globl lfs2_mv_plain
         .type   lfs2_mv_plain, @function
lfs2_mv_plain:
      lfs (%ecx),%dx
  mov $0x0,%eax

    ret
         .size   lfs2_mv_plain, .-lfs2_mv_plain

    
.globl lfs2_mv_allregs
         .type   lfs2_mv_allregs, @function
lfs2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lfs (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lfs2_mv_allregs, .-lfs2_mv_allregs

    
.globl lfs2_mv_constant_simple
         .type   lfs2_mv_constant_simple, @function
lfs2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lfs (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lfs2_mv_constant_simple, .-lfs2_mv_constant_simple

    
.globl lfs2_mv_constant_complex1
         .type   lfs2_mv_constant_complex1, @function
lfs2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lfs (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lfs2_mv_constant_complex1, .-lfs2_mv_constant_complex1

    
.globl lfs2_mv_constant_complex2
         .type   lfs2_mv_constant_complex2, @function
lfs2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lfs (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lfs2_mv_constant_complex2, .-lfs2_mv_constant_complex2

    
.globl lgs1_plain
         .type   lgs1_plain, @function
lgs1_plain:
      lgs (%ecx),%edx
  mov $0x0,%eax

    ret
         .size   lgs1_plain, .-lgs1_plain

    
.globl lgs1_allregs
         .type   lgs1_allregs, @function
lgs1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lgs (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lgs1_allregs, .-lgs1_allregs

    
.globl lgs1_constant_simple
         .type   lgs1_constant_simple, @function
lgs1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lgs (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lgs1_constant_simple, .-lgs1_constant_simple

    
.globl lgs1_constant_complex1
         .type   lgs1_constant_complex1, @function
lgs1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lgs (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lgs1_constant_complex1, .-lgs1_constant_complex1

    
.globl lgs1_constant_complex2
         .type   lgs1_constant_complex2, @function
lgs1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lgs (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lgs1_constant_complex2, .-lgs1_constant_complex2

    
.globl lgs2_mv_plain
         .type   lgs2_mv_plain, @function
lgs2_mv_plain:
      lgs (%ecx),%dx
  mov $0x0,%eax

    ret
         .size   lgs2_mv_plain, .-lgs2_mv_plain

    
.globl lgs2_mv_allregs
         .type   lgs2_mv_allregs, @function
lgs2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lgs (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lgs2_mv_allregs, .-lgs2_mv_allregs

    
.globl lgs2_mv_constant_simple
         .type   lgs2_mv_constant_simple, @function
lgs2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lgs (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lgs2_mv_constant_simple, .-lgs2_mv_constant_simple

    
.globl lgs2_mv_constant_complex1
         .type   lgs2_mv_constant_complex1, @function
lgs2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lgs (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lgs2_mv_constant_complex1, .-lgs2_mv_constant_complex1

    
.globl lgs2_mv_constant_complex2
         .type   lgs2_mv_constant_complex2, @function
lgs2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lgs (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lgs2_mv_constant_complex2, .-lgs2_mv_constant_complex2

    
.globl lss1_plain
         .type   lss1_plain, @function
lss1_plain:
      lss (%ecx),%edx
  mov $0x0,%eax

    ret
         .size   lss1_plain, .-lss1_plain

    
.globl lss1_allregs
         .type   lss1_allregs, @function
lss1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lss (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lss1_allregs, .-lss1_allregs

    
.globl lss1_constant_simple
         .type   lss1_constant_simple, @function
lss1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lss (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lss1_constant_simple, .-lss1_constant_simple

    
.globl lss1_constant_complex1
         .type   lss1_constant_complex1, @function
lss1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lss (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lss1_constant_complex1, .-lss1_constant_complex1

    
.globl lss1_constant_complex2
         .type   lss1_constant_complex2, @function
lss1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lss (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lss1_constant_complex2, .-lss1_constant_complex2

    
.globl lss2_mv_plain
         .type   lss2_mv_plain, @function
lss2_mv_plain:
      lss (%ecx),%dx
  mov $0x0,%eax

    ret
         .size   lss2_mv_plain, .-lss2_mv_plain

    
.globl lss2_mv_allregs
         .type   lss2_mv_allregs, @function
lss2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lss (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lss2_mv_allregs, .-lss2_mv_allregs

    
.globl lss2_mv_constant_simple
         .type   lss2_mv_constant_simple, @function
lss2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lss (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lss2_mv_constant_simple, .-lss2_mv_constant_simple

    
.globl lss2_mv_constant_complex1
         .type   lss2_mv_constant_complex1, @function
lss2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lss (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lss2_mv_constant_complex1, .-lss2_mv_constant_complex1

    
.globl lss2_mv_constant_complex2
         .type   lss2_mv_constant_complex2, @function
lss2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lss (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lss2_mv_constant_complex2, .-lss2_mv_constant_complex2

    
.globl lldt_plain
         .type   lldt_plain, @function
lldt_plain:
      lldt (%eax)
  mov $0x0,%eax

    ret
         .size   lldt_plain, .-lldt_plain

    
.globl lldt_allregs
         .type   lldt_allregs, @function
lldt_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lldt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lldt_allregs, .-lldt_allregs

    
.globl lldt_constant_simple
         .type   lldt_constant_simple, @function
lldt_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lldt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lldt_constant_simple, .-lldt_constant_simple

    
.globl lldt_constant_complex1
         .type   lldt_constant_complex1, @function
lldt_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lldt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lldt_constant_complex1, .-lldt_constant_complex1

    
.globl lldt_constant_complex2
         .type   lldt_constant_complex2, @function
lldt_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lldt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lldt_constant_complex2, .-lldt_constant_complex2

    
.globl lmsw_plain
         .type   lmsw_plain, @function
lmsw_plain:
      lmsw (%eax)
  mov $0x0,%eax

    ret
         .size   lmsw_plain, .-lmsw_plain

    
.globl lmsw_allregs
         .type   lmsw_allregs, @function
lmsw_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lmsw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lmsw_allregs, .-lmsw_allregs

    
.globl lmsw_constant_simple
         .type   lmsw_constant_simple, @function
lmsw_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lmsw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lmsw_constant_simple, .-lmsw_constant_simple

    
.globl lmsw_constant_complex1
         .type   lmsw_constant_complex1, @function
lmsw_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lmsw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lmsw_constant_complex1, .-lmsw_constant_complex1

    
.globl lmsw_constant_complex2
         .type   lmsw_constant_complex2, @function
lmsw_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lmsw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lmsw_constant_complex2, .-lmsw_constant_complex2

    
.globl lods1_plain
         .type   lods1_plain, @function
lods1_plain:
      .byte 0xac
  mov $0x0,%eax

    ret
         .size   lods1_plain, .-lods1_plain

    
.globl lods1_allregs
         .type   lods1_allregs, @function
lods1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods1_allregs, .-lods1_allregs

    
.globl lods1_constant_simple
         .type   lods1_constant_simple, @function
lods1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods1_constant_simple, .-lods1_constant_simple

    
.globl lods1_constant_complex1
         .type   lods1_constant_complex1, @function
lods1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods1_constant_complex1, .-lods1_constant_complex1

    
.globl lods1_constant_complex2
         .type   lods1_constant_complex2, @function
lods1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods1_constant_complex2, .-lods1_constant_complex2

    
.globl lods2_mv_plain
         .type   lods2_mv_plain, @function
lods2_mv_plain:
      .byte 0x66,0xad
  mov $0x0,%eax

    ret
         .size   lods2_mv_plain, .-lods2_mv_plain

    
.globl lods2_mv_allregs
         .type   lods2_mv_allregs, @function
lods2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods2_mv_allregs, .-lods2_mv_allregs

    
.globl lods2_mv_constant_simple
         .type   lods2_mv_constant_simple, @function
lods2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods2_mv_constant_simple, .-lods2_mv_constant_simple

    
.globl lods2_mv_constant_complex1
         .type   lods2_mv_constant_complex1, @function
lods2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods2_mv_constant_complex1, .-lods2_mv_constant_complex1

    
.globl lods2_mv_constant_complex2
         .type   lods2_mv_constant_complex2, @function
lods2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods2_mv_constant_complex2, .-lods2_mv_constant_complex2

    
.globl lods3_plain
         .type   lods3_plain, @function
lods3_plain:
      .byte 0xad
  mov $0x0,%eax

    ret
         .size   lods3_plain, .-lods3_plain

    
.globl lods3_allregs
         .type   lods3_allregs, @function
lods3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods3_allregs, .-lods3_allregs

    
.globl lods3_constant_simple
         .type   lods3_constant_simple, @function
lods3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods3_constant_simple, .-lods3_constant_simple

    
.globl lods3_constant_complex1
         .type   lods3_constant_complex1, @function
lods3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods3_constant_complex1, .-lods3_constant_complex1

    
.globl lods3_constant_complex2
         .type   lods3_constant_complex2, @function
lods3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods3_constant_complex2, .-lods3_constant_complex2

    
.globl lods_seg_mv_plain
         .type   lods_seg_mv_plain, @function
lods_seg_mv_plain:
      .byte 0x36,0xad
  mov $0x0,%eax

    ret
         .size   lods_seg_mv_plain, .-lods_seg_mv_plain

    
.globl lods_seg_mv_allregs
         .type   lods_seg_mv_allregs, @function
lods_seg_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x36,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods_seg_mv_allregs, .-lods_seg_mv_allregs

    
.globl lods_seg_mv_constant_simple
         .type   lods_seg_mv_constant_simple, @function
lods_seg_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x36,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods_seg_mv_constant_simple, .-lods_seg_mv_constant_simple

    
.globl lods_seg_mv_constant_complex1
         .type   lods_seg_mv_constant_complex1, @function
lods_seg_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x36,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods_seg_mv_constant_complex1, .-lods_seg_mv_constant_complex1

    
.globl lods_seg_mv_constant_complex2
         .type   lods_seg_mv_constant_complex2, @function
lods_seg_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x36,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lods_seg_mv_constant_complex2, .-lods_seg_mv_constant_complex2

    
.globl loop_type_0_plain
         .type   loop_type_0_plain, @function
loop_type_0_plain:
      .byte 0x40,0xe0,0xfd
  mov $0x0,%eax

    ret
         .size   loop_type_0_plain, .-loop_type_0_plain

    
.globl loop_type_0_allregs
         .type   loop_type_0_allregs, @function
loop_type_0_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x40,0xe0,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_0_allregs, .-loop_type_0_allregs

    
.globl loop_type_0_constant_simple
         .type   loop_type_0_constant_simple, @function
loop_type_0_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x40,0xe0,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_0_constant_simple, .-loop_type_0_constant_simple

    
.globl loop_type_0_constant_complex1
         .type   loop_type_0_constant_complex1, @function
loop_type_0_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x40,0xe0,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_0_constant_complex1, .-loop_type_0_constant_complex1

    
.globl loop_type_0_constant_complex2
         .type   loop_type_0_constant_complex2, @function
loop_type_0_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x40,0xe0,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_0_constant_complex2, .-loop_type_0_constant_complex2

    
.globl loop_type_0w_mv_plain
         .type   loop_type_0w_mv_plain, @function
loop_type_0w_mv_plain:
      .byte 0x40,0x67,0xe0,0xfc
  mov $0x0,%eax

    ret
         .size   loop_type_0w_mv_plain, .-loop_type_0w_mv_plain

    
.globl loop_type_0w_mv_allregs
         .type   loop_type_0w_mv_allregs, @function
loop_type_0w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x40,0x67,0xe0,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_0w_mv_allregs, .-loop_type_0w_mv_allregs

    
.globl loop_type_0w_mv_constant_simple
         .type   loop_type_0w_mv_constant_simple, @function
loop_type_0w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x40,0x67,0xe0,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_0w_mv_constant_simple, .-loop_type_0w_mv_constant_simple

    
.globl loop_type_0w_mv_constant_complex1
         .type   loop_type_0w_mv_constant_complex1, @function
loop_type_0w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x40,0x67,0xe0,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_0w_mv_constant_complex1, .-loop_type_0w_mv_constant_complex1

    
.globl loop_type_0w_mv_constant_complex2
         .type   loop_type_0w_mv_constant_complex2, @function
loop_type_0w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x40,0x67,0xe0,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_0w_mv_constant_complex2, .-loop_type_0w_mv_constant_complex2

    
.globl loop_type_1_plain
         .type   loop_type_1_plain, @function
loop_type_1_plain:
      .byte 0x40,0xe1,0xfd
  mov $0x0,%eax

    ret
         .size   loop_type_1_plain, .-loop_type_1_plain

    
.globl loop_type_1_allregs
         .type   loop_type_1_allregs, @function
loop_type_1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x40,0xe1,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_1_allregs, .-loop_type_1_allregs

    
.globl loop_type_1_constant_simple
         .type   loop_type_1_constant_simple, @function
loop_type_1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x40,0xe1,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_1_constant_simple, .-loop_type_1_constant_simple

    
.globl loop_type_1_constant_complex1
         .type   loop_type_1_constant_complex1, @function
loop_type_1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x40,0xe1,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_1_constant_complex1, .-loop_type_1_constant_complex1

    
.globl loop_type_1_constant_complex2
         .type   loop_type_1_constant_complex2, @function
loop_type_1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x40,0xe1,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_1_constant_complex2, .-loop_type_1_constant_complex2

    
.globl loop_type_1w_mv_plain
         .type   loop_type_1w_mv_plain, @function
loop_type_1w_mv_plain:
      .byte 0x40,0x67,0xe1,0xfc
  mov $0x0,%eax

    ret
         .size   loop_type_1w_mv_plain, .-loop_type_1w_mv_plain

    
.globl loop_type_1w_mv_allregs
         .type   loop_type_1w_mv_allregs, @function
loop_type_1w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x40,0x67,0xe1,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_1w_mv_allregs, .-loop_type_1w_mv_allregs

    
.globl loop_type_1w_mv_constant_simple
         .type   loop_type_1w_mv_constant_simple, @function
loop_type_1w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x40,0x67,0xe1,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_1w_mv_constant_simple, .-loop_type_1w_mv_constant_simple

    
.globl loop_type_1w_mv_constant_complex1
         .type   loop_type_1w_mv_constant_complex1, @function
loop_type_1w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x40,0x67,0xe1,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_1w_mv_constant_complex1, .-loop_type_1w_mv_constant_complex1

    
.globl loop_type_1w_mv_constant_complex2
         .type   loop_type_1w_mv_constant_complex2, @function
loop_type_1w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x40,0x67,0xe1,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_1w_mv_constant_complex2, .-loop_type_1w_mv_constant_complex2

    
.globl loop_type_2_plain
         .type   loop_type_2_plain, @function
loop_type_2_plain:
      .byte 0x40,0xe2,0xfd
  mov $0x0,%eax

    ret
         .size   loop_type_2_plain, .-loop_type_2_plain

    
.globl loop_type_2_allregs
         .type   loop_type_2_allregs, @function
loop_type_2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x40,0xe2,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_2_allregs, .-loop_type_2_allregs

    
.globl loop_type_2_constant_simple
         .type   loop_type_2_constant_simple, @function
loop_type_2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x40,0xe2,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_2_constant_simple, .-loop_type_2_constant_simple

    
.globl loop_type_2_constant_complex1
         .type   loop_type_2_constant_complex1, @function
loop_type_2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x40,0xe2,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_2_constant_complex1, .-loop_type_2_constant_complex1

    
.globl loop_type_2_constant_complex2
         .type   loop_type_2_constant_complex2, @function
loop_type_2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x40,0xe2,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_2_constant_complex2, .-loop_type_2_constant_complex2

    
.globl loop_type_2w_mv_plain
         .type   loop_type_2w_mv_plain, @function
loop_type_2w_mv_plain:
      .byte 0x40,0x67,0xe2,0xfc
  mov $0x0,%eax

    ret
         .size   loop_type_2w_mv_plain, .-loop_type_2w_mv_plain

    
.globl loop_type_2w_mv_allregs
         .type   loop_type_2w_mv_allregs, @function
loop_type_2w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x40,0x67,0xe2,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_2w_mv_allregs, .-loop_type_2w_mv_allregs

    
.globl loop_type_2w_mv_constant_simple
         .type   loop_type_2w_mv_constant_simple, @function
loop_type_2w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x40,0x67,0xe2,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_2w_mv_constant_simple, .-loop_type_2w_mv_constant_simple

    
.globl loop_type_2w_mv_constant_complex1
         .type   loop_type_2w_mv_constant_complex1, @function
loop_type_2w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x40,0x67,0xe2,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_2w_mv_constant_complex1, .-loop_type_2w_mv_constant_complex1

    
.globl loop_type_2w_mv_constant_complex2
         .type   loop_type_2w_mv_constant_complex2, @function
loop_type_2w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x40,0x67,0xe2,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   loop_type_2w_mv_constant_complex2, .-loop_type_2w_mv_constant_complex2

    
.globl lsl_plain
         .type   lsl_plain, @function
lsl_plain:
      lsl (%eax),%ebx
  mov $0x0,%eax

    ret
         .size   lsl_plain, .-lsl_plain

    
.globl lsl_allregs
         .type   lsl_allregs, @function
lsl_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lsl (%eax),%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lsl_allregs, .-lsl_allregs

    
.globl lsl_constant_simple
         .type   lsl_constant_simple, @function
lsl_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lsl (%eax),%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lsl_constant_simple, .-lsl_constant_simple

    
.globl lsl_constant_complex1
         .type   lsl_constant_complex1, @function
lsl_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lsl (%eax),%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lsl_constant_complex1, .-lsl_constant_complex1

    
.globl lsl_constant_complex2
         .type   lsl_constant_complex2, @function
lsl_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lsl (%eax),%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   lsl_constant_complex2, .-lsl_constant_complex2

    
.globl ltr_plain
         .type   ltr_plain, @function
ltr_plain:
      ltr %bx
  mov $0x0,%eax

    ret
         .size   ltr_plain, .-ltr_plain

    
.globl ltr_allregs
         .type   ltr_allregs, @function
ltr_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  ltr %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ltr_allregs, .-ltr_allregs

    
.globl ltr_constant_simple
         .type   ltr_constant_simple, @function
ltr_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  ltr %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ltr_constant_simple, .-ltr_constant_simple

    
.globl ltr_constant_complex1
         .type   ltr_constant_complex1, @function
ltr_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  ltr %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ltr_constant_complex1, .-ltr_constant_complex1

    
.globl ltr_constant_complex2
         .type   ltr_constant_complex2, @function
ltr_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  ltr %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ltr_constant_complex2, .-ltr_constant_complex2

    
.globl mov_b1_plain
         .type   mov_b1_plain, @function
mov_b1_plain:
      mov %bh,%cl
  mov $0x0,%eax

    ret
         .size   mov_b1_plain, .-mov_b1_plain

    
.globl mov_b1_allregs
         .type   mov_b1_allregs, @function
mov_b1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %bh,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b1_allregs, .-mov_b1_allregs

    
.globl mov_b1_constant_simple
         .type   mov_b1_constant_simple, @function
mov_b1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %bh,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b1_constant_simple, .-mov_b1_constant_simple

    
.globl mov_b1_constant_complex1
         .type   mov_b1_constant_complex1, @function
mov_b1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %bh,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b1_constant_complex1, .-mov_b1_constant_complex1

    
.globl mov_b1_constant_complex2
         .type   mov_b1_constant_complex2, @function
mov_b1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %bh,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b1_constant_complex2, .-mov_b1_constant_complex2

    
.globl mov_b2_mv_plain
         .type   mov_b2_mv_plain, @function
mov_b2_mv_plain:
      mov %al,%cl
  mov $0x0,%eax

    ret
         .size   mov_b2_mv_plain, .-mov_b2_mv_plain

    
.globl mov_b2_mv_allregs
         .type   mov_b2_mv_allregs, @function
mov_b2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %al,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b2_mv_allregs, .-mov_b2_mv_allregs

    
.globl mov_b2_mv_constant_simple
         .type   mov_b2_mv_constant_simple, @function
mov_b2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %al,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b2_mv_constant_simple, .-mov_b2_mv_constant_simple

    
.globl mov_b2_mv_constant_complex1
         .type   mov_b2_mv_constant_complex1, @function
mov_b2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %al,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b2_mv_constant_complex1, .-mov_b2_mv_constant_complex1

    
.globl mov_b2_mv_constant_complex2
         .type   mov_b2_mv_constant_complex2, @function
mov_b2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %al,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b2_mv_constant_complex2, .-mov_b2_mv_constant_complex2

    
.globl mov_b3_mv_plain
         .type   mov_b3_mv_plain, @function
mov_b3_mv_plain:
      mov %cl,%al
  mov $0x0,%eax

    ret
         .size   mov_b3_mv_plain, .-mov_b3_mv_plain

    
.globl mov_b3_mv_allregs
         .type   mov_b3_mv_allregs, @function
mov_b3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %cl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b3_mv_allregs, .-mov_b3_mv_allregs

    
.globl mov_b3_mv_constant_simple
         .type   mov_b3_mv_constant_simple, @function
mov_b3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %cl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b3_mv_constant_simple, .-mov_b3_mv_constant_simple

    
.globl mov_b3_mv_constant_complex1
         .type   mov_b3_mv_constant_complex1, @function
mov_b3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %cl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b3_mv_constant_complex1, .-mov_b3_mv_constant_complex1

    
.globl mov_b3_mv_constant_complex2
         .type   mov_b3_mv_constant_complex2, @function
mov_b3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %cl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b3_mv_constant_complex2, .-mov_b3_mv_constant_complex2

    
.globl mov_b4_mv_plain
         .type   mov_b4_mv_plain, @function
mov_b4_mv_plain:
      mov $0x10,%cl
  mov $0x0,%eax

    ret
         .size   mov_b4_mv_plain, .-mov_b4_mv_plain

    
.globl mov_b4_mv_allregs
         .type   mov_b4_mv_allregs, @function
mov_b4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x10,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b4_mv_allregs, .-mov_b4_mv_allregs

    
.globl mov_b4_mv_constant_simple
         .type   mov_b4_mv_constant_simple, @function
mov_b4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x10,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b4_mv_constant_simple, .-mov_b4_mv_constant_simple

    
.globl mov_b4_mv_constant_complex1
         .type   mov_b4_mv_constant_complex1, @function
mov_b4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x10,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b4_mv_constant_complex1, .-mov_b4_mv_constant_complex1

    
.globl mov_b4_mv_constant_complex2
         .type   mov_b4_mv_constant_complex2, @function
mov_b4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x10,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b4_mv_constant_complex2, .-mov_b4_mv_constant_complex2

    
.globl mov_b5_mv_plain
         .type   mov_b5_mv_plain, @function
mov_b5_mv_plain:
      mov $0x10,%al
  mov $0x0,%eax

    ret
         .size   mov_b5_mv_plain, .-mov_b5_mv_plain

    
.globl mov_b5_mv_allregs
         .type   mov_b5_mv_allregs, @function
mov_b5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b5_mv_allregs, .-mov_b5_mv_allregs

    
.globl mov_b5_mv_constant_simple
         .type   mov_b5_mv_constant_simple, @function
mov_b5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b5_mv_constant_simple, .-mov_b5_mv_constant_simple

    
.globl mov_b5_mv_constant_complex1
         .type   mov_b5_mv_constant_complex1, @function
mov_b5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b5_mv_constant_complex1, .-mov_b5_mv_constant_complex1

    
.globl mov_b5_mv_constant_complex2
         .type   mov_b5_mv_constant_complex2, @function
mov_b5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b5_mv_constant_complex2, .-mov_b5_mv_constant_complex2

    
.globl mov_b6_mv_plain
         .type   mov_b6_mv_plain, @function
mov_b6_mv_plain:
      mov %ah,(%ebx)
  mov $0x0,%eax

    ret
         .size   mov_b6_mv_plain, .-mov_b6_mv_plain

    
.globl mov_b6_mv_allregs
         .type   mov_b6_mv_allregs, @function
mov_b6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %ah,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b6_mv_allregs, .-mov_b6_mv_allregs

    
.globl mov_b6_mv_constant_simple
         .type   mov_b6_mv_constant_simple, @function
mov_b6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %ah,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b6_mv_constant_simple, .-mov_b6_mv_constant_simple

    
.globl mov_b6_mv_constant_complex1
         .type   mov_b6_mv_constant_complex1, @function
mov_b6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %ah,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b6_mv_constant_complex1, .-mov_b6_mv_constant_complex1

    
.globl mov_b6_mv_constant_complex2
         .type   mov_b6_mv_constant_complex2, @function
mov_b6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %ah,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b6_mv_constant_complex2, .-mov_b6_mv_constant_complex2

    
.globl mov_b7_mv_plain
         .type   mov_b7_mv_plain, @function
mov_b7_mv_plain:
      mov (%ebx),%ah
  mov $0x0,%eax

    ret
         .size   mov_b7_mv_plain, .-mov_b7_mv_plain

    
.globl mov_b7_mv_allregs
         .type   mov_b7_mv_allregs, @function
mov_b7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov (%ebx),%ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b7_mv_allregs, .-mov_b7_mv_allregs

    
.globl mov_b7_mv_constant_simple
         .type   mov_b7_mv_constant_simple, @function
mov_b7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov (%ebx),%ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b7_mv_constant_simple, .-mov_b7_mv_constant_simple

    
.globl mov_b7_mv_constant_complex1
         .type   mov_b7_mv_constant_complex1, @function
mov_b7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov (%ebx),%ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b7_mv_constant_complex1, .-mov_b7_mv_constant_complex1

    
.globl mov_b7_mv_constant_complex2
         .type   mov_b7_mv_constant_complex2, @function
mov_b7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov (%ebx),%ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_b7_mv_constant_complex2, .-mov_b7_mv_constant_complex2

    
.globl mov_w1_plain
         .type   mov_w1_plain, @function
mov_w1_plain:
      mov %ax,%cx
  mov $0x0,%eax

    ret
         .size   mov_w1_plain, .-mov_w1_plain

    
.globl mov_w1_allregs
         .type   mov_w1_allregs, @function
mov_w1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %ax,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w1_allregs, .-mov_w1_allregs

    
.globl mov_w1_constant_simple
         .type   mov_w1_constant_simple, @function
mov_w1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %ax,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w1_constant_simple, .-mov_w1_constant_simple

    
.globl mov_w1_constant_complex1
         .type   mov_w1_constant_complex1, @function
mov_w1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %ax,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w1_constant_complex1, .-mov_w1_constant_complex1

    
.globl mov_w1_constant_complex2
         .type   mov_w1_constant_complex2, @function
mov_w1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %ax,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w1_constant_complex2, .-mov_w1_constant_complex2

    
.globl mov_w2_mv_plain
         .type   mov_w2_mv_plain, @function
mov_w2_mv_plain:
      mov $0x10,%ax
  mov $0x0,%eax

    ret
         .size   mov_w2_mv_plain, .-mov_w2_mv_plain

    
.globl mov_w2_mv_allregs
         .type   mov_w2_mv_allregs, @function
mov_w2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w2_mv_allregs, .-mov_w2_mv_allregs

    
.globl mov_w2_mv_constant_simple
         .type   mov_w2_mv_constant_simple, @function
mov_w2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w2_mv_constant_simple, .-mov_w2_mv_constant_simple

    
.globl mov_w2_mv_constant_complex1
         .type   mov_w2_mv_constant_complex1, @function
mov_w2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w2_mv_constant_complex1, .-mov_w2_mv_constant_complex1

    
.globl mov_w2_mv_constant_complex2
         .type   mov_w2_mv_constant_complex2, @function
mov_w2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w2_mv_constant_complex2, .-mov_w2_mv_constant_complex2

    
.globl mov_w3_mv_plain
         .type   mov_w3_mv_plain, @function
mov_w3_mv_plain:
      mov %ax,(%ebx)
  mov $0x0,%eax

    ret
         .size   mov_w3_mv_plain, .-mov_w3_mv_plain

    
.globl mov_w3_mv_allregs
         .type   mov_w3_mv_allregs, @function
mov_w3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %ax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w3_mv_allregs, .-mov_w3_mv_allregs

    
.globl mov_w3_mv_constant_simple
         .type   mov_w3_mv_constant_simple, @function
mov_w3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %ax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w3_mv_constant_simple, .-mov_w3_mv_constant_simple

    
.globl mov_w3_mv_constant_complex1
         .type   mov_w3_mv_constant_complex1, @function
mov_w3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %ax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w3_mv_constant_complex1, .-mov_w3_mv_constant_complex1

    
.globl mov_w3_mv_constant_complex2
         .type   mov_w3_mv_constant_complex2, @function
mov_w3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %ax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w3_mv_constant_complex2, .-mov_w3_mv_constant_complex2

    
.globl mov_w4_mv_plain
         .type   mov_w4_mv_plain, @function
mov_w4_mv_plain:
      mov (%ebx),%ax
  mov $0x0,%eax

    ret
         .size   mov_w4_mv_plain, .-mov_w4_mv_plain

    
.globl mov_w4_mv_allregs
         .type   mov_w4_mv_allregs, @function
mov_w4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w4_mv_allregs, .-mov_w4_mv_allregs

    
.globl mov_w4_mv_constant_simple
         .type   mov_w4_mv_constant_simple, @function
mov_w4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w4_mv_constant_simple, .-mov_w4_mv_constant_simple

    
.globl mov_w4_mv_constant_complex1
         .type   mov_w4_mv_constant_complex1, @function
mov_w4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w4_mv_constant_complex1, .-mov_w4_mv_constant_complex1

    
.globl mov_w4_mv_constant_complex2
         .type   mov_w4_mv_constant_complex2, @function
mov_w4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_w4_mv_constant_complex2, .-mov_w4_mv_constant_complex2

    
.globl mov_l1_plain
         .type   mov_l1_plain, @function
mov_l1_plain:
      mov %eax,%ecx
  mov $0x0,%eax

    ret
         .size   mov_l1_plain, .-mov_l1_plain

    
.globl mov_l1_allregs
         .type   mov_l1_allregs, @function
mov_l1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %eax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l1_allregs, .-mov_l1_allregs

    
.globl mov_l1_constant_simple
         .type   mov_l1_constant_simple, @function
mov_l1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %eax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l1_constant_simple, .-mov_l1_constant_simple

    
.globl mov_l1_constant_complex1
         .type   mov_l1_constant_complex1, @function
mov_l1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %eax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l1_constant_complex1, .-mov_l1_constant_complex1

    
.globl mov_l1_constant_complex2
         .type   mov_l1_constant_complex2, @function
mov_l1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %eax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l1_constant_complex2, .-mov_l1_constant_complex2

    
.globl mov_l2_mv_plain
         .type   mov_l2_mv_plain, @function
mov_l2_mv_plain:
      mov $0x10,%eax
  mov $0x0,%eax

    ret
         .size   mov_l2_mv_plain, .-mov_l2_mv_plain

    
.globl mov_l2_mv_allregs
         .type   mov_l2_mv_allregs, @function
mov_l2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l2_mv_allregs, .-mov_l2_mv_allregs

    
.globl mov_l2_mv_constant_simple
         .type   mov_l2_mv_constant_simple, @function
mov_l2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l2_mv_constant_simple, .-mov_l2_mv_constant_simple

    
.globl mov_l2_mv_constant_complex1
         .type   mov_l2_mv_constant_complex1, @function
mov_l2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l2_mv_constant_complex1, .-mov_l2_mv_constant_complex1

    
.globl mov_l2_mv_constant_complex2
         .type   mov_l2_mv_constant_complex2, @function
mov_l2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l2_mv_constant_complex2, .-mov_l2_mv_constant_complex2

    
.globl mov_l3_mv_plain
         .type   mov_l3_mv_plain, @function
mov_l3_mv_plain:
      mov %eax,(%ebx)
  mov $0x0,%eax

    ret
         .size   mov_l3_mv_plain, .-mov_l3_mv_plain

    
.globl mov_l3_mv_allregs
         .type   mov_l3_mv_allregs, @function
mov_l3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l3_mv_allregs, .-mov_l3_mv_allregs

    
.globl mov_l3_mv_constant_simple
         .type   mov_l3_mv_constant_simple, @function
mov_l3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l3_mv_constant_simple, .-mov_l3_mv_constant_simple

    
.globl mov_l3_mv_constant_complex1
         .type   mov_l3_mv_constant_complex1, @function
mov_l3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l3_mv_constant_complex1, .-mov_l3_mv_constant_complex1

    
.globl mov_l3_mv_constant_complex2
         .type   mov_l3_mv_constant_complex2, @function
mov_l3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l3_mv_constant_complex2, .-mov_l3_mv_constant_complex2

    
.globl mov_l4_mv_plain
         .type   mov_l4_mv_plain, @function
mov_l4_mv_plain:
      mov (%ebx),%eax
  mov $0x0,%eax

    ret
         .size   mov_l4_mv_plain, .-mov_l4_mv_plain

    
.globl mov_l4_mv_allregs
         .type   mov_l4_mv_allregs, @function
mov_l4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l4_mv_allregs, .-mov_l4_mv_allregs

    
.globl mov_l4_mv_constant_simple
         .type   mov_l4_mv_constant_simple, @function
mov_l4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l4_mv_constant_simple, .-mov_l4_mv_constant_simple

    
.globl mov_l4_mv_constant_complex1
         .type   mov_l4_mv_constant_complex1, @function
mov_l4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l4_mv_constant_complex1, .-mov_l4_mv_constant_complex1

    
.globl mov_l4_mv_constant_complex2
         .type   mov_l4_mv_constant_complex2, @function
mov_l4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_l4_mv_constant_complex2, .-mov_l4_mv_constant_complex2

    
.globl mov_from_cr_mv_plain
         .type   mov_from_cr_mv_plain, @function
mov_from_cr_mv_plain:
      mov %cr4,%eax
  mov $0x0,%eax

    ret
         .size   mov_from_cr_mv_plain, .-mov_from_cr_mv_plain

    
.globl mov_from_cr_mv_allregs
         .type   mov_from_cr_mv_allregs, @function
mov_from_cr_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %cr4,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_from_cr_mv_allregs, .-mov_from_cr_mv_allregs

    
.globl mov_from_cr_mv_constant_simple
         .type   mov_from_cr_mv_constant_simple, @function
mov_from_cr_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %cr4,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_from_cr_mv_constant_simple, .-mov_from_cr_mv_constant_simple

    
.globl mov_from_cr_mv_constant_complex1
         .type   mov_from_cr_mv_constant_complex1, @function
mov_from_cr_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %cr4,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_from_cr_mv_constant_complex1, .-mov_from_cr_mv_constant_complex1

    
.globl mov_from_cr_mv_constant_complex2
         .type   mov_from_cr_mv_constant_complex2, @function
mov_from_cr_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %cr4,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_from_cr_mv_constant_complex2, .-mov_from_cr_mv_constant_complex2

    
.globl mov_to_cr_mv_plain
         .type   mov_to_cr_mv_plain, @function
mov_to_cr_mv_plain:
      mov %eax,%cr4
  mov $0x0,%eax

    ret
         .size   mov_to_cr_mv_plain, .-mov_to_cr_mv_plain

    
.globl mov_to_cr_mv_allregs
         .type   mov_to_cr_mv_allregs, @function
mov_to_cr_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %eax,%cr4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_to_cr_mv_allregs, .-mov_to_cr_mv_allregs

    
.globl mov_to_cr_mv_constant_simple
         .type   mov_to_cr_mv_constant_simple, @function
mov_to_cr_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %eax,%cr4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_to_cr_mv_constant_simple, .-mov_to_cr_mv_constant_simple

    
.globl mov_to_cr_mv_constant_complex1
         .type   mov_to_cr_mv_constant_complex1, @function
mov_to_cr_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %eax,%cr4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_to_cr_mv_constant_complex1, .-mov_to_cr_mv_constant_complex1

    
.globl mov_to_cr_mv_constant_complex2
         .type   mov_to_cr_mv_constant_complex2, @function
mov_to_cr_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %eax,%cr4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_to_cr_mv_constant_complex2, .-mov_to_cr_mv_constant_complex2

    
.globl mov_from_dr_mv_plain
         .type   mov_from_dr_mv_plain, @function
mov_from_dr_mv_plain:
      mov %dr4,%eax
  mov $0x0,%eax

    ret
         .size   mov_from_dr_mv_plain, .-mov_from_dr_mv_plain

    
.globl mov_from_dr_mv_allregs
         .type   mov_from_dr_mv_allregs, @function
mov_from_dr_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %dr4,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_from_dr_mv_allregs, .-mov_from_dr_mv_allregs

    
.globl mov_from_dr_mv_constant_simple
         .type   mov_from_dr_mv_constant_simple, @function
mov_from_dr_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %dr4,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_from_dr_mv_constant_simple, .-mov_from_dr_mv_constant_simple

    
.globl mov_from_dr_mv_constant_complex1
         .type   mov_from_dr_mv_constant_complex1, @function
mov_from_dr_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %dr4,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_from_dr_mv_constant_complex1, .-mov_from_dr_mv_constant_complex1

    
.globl mov_from_dr_mv_constant_complex2
         .type   mov_from_dr_mv_constant_complex2, @function
mov_from_dr_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %dr4,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_from_dr_mv_constant_complex2, .-mov_from_dr_mv_constant_complex2

    
.globl mov_to_dr_mv_plain
         .type   mov_to_dr_mv_plain, @function
mov_to_dr_mv_plain:
      mov %eax,%dr4
  mov $0x0,%eax

    ret
         .size   mov_to_dr_mv_plain, .-mov_to_dr_mv_plain

    
.globl mov_to_dr_mv_allregs
         .type   mov_to_dr_mv_allregs, @function
mov_to_dr_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %eax,%dr4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_to_dr_mv_allregs, .-mov_to_dr_mv_allregs

    
.globl mov_to_dr_mv_constant_simple
         .type   mov_to_dr_mv_constant_simple, @function
mov_to_dr_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %eax,%dr4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_to_dr_mv_constant_simple, .-mov_to_dr_mv_constant_simple

    
.globl mov_to_dr_mv_constant_complex1
         .type   mov_to_dr_mv_constant_complex1, @function
mov_to_dr_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %eax,%dr4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_to_dr_mv_constant_complex1, .-mov_to_dr_mv_constant_complex1

    
.globl mov_to_dr_mv_constant_complex2
         .type   mov_to_dr_mv_constant_complex2, @function
mov_to_dr_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %eax,%dr4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_to_dr_mv_constant_complex2, .-mov_to_dr_mv_constant_complex2

    
.globl mov_from_tr_mv_plain
         .type   mov_from_tr_mv_plain, @function
mov_from_tr_mv_plain:
      mov %tr6,%eax
  mov $0x0,%eax

    ret
         .size   mov_from_tr_mv_plain, .-mov_from_tr_mv_plain

    
.globl mov_from_tr_mv_allregs
         .type   mov_from_tr_mv_allregs, @function
mov_from_tr_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %tr6,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_from_tr_mv_allregs, .-mov_from_tr_mv_allregs

    
.globl mov_from_tr_mv_constant_simple
         .type   mov_from_tr_mv_constant_simple, @function
mov_from_tr_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %tr6,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_from_tr_mv_constant_simple, .-mov_from_tr_mv_constant_simple

    
.globl mov_from_tr_mv_constant_complex1
         .type   mov_from_tr_mv_constant_complex1, @function
mov_from_tr_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %tr6,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_from_tr_mv_constant_complex1, .-mov_from_tr_mv_constant_complex1

    
.globl mov_from_tr_mv_constant_complex2
         .type   mov_from_tr_mv_constant_complex2, @function
mov_from_tr_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %tr6,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_from_tr_mv_constant_complex2, .-mov_from_tr_mv_constant_complex2

    
.globl mov_to_tr_mv_plain
         .type   mov_to_tr_mv_plain, @function
mov_to_tr_mv_plain:
      mov %eax,%tr6
  mov $0x0,%eax

    ret
         .size   mov_to_tr_mv_plain, .-mov_to_tr_mv_plain

    
.globl mov_to_tr_mv_allregs
         .type   mov_to_tr_mv_allregs, @function
mov_to_tr_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %eax,%tr6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_to_tr_mv_allregs, .-mov_to_tr_mv_allregs

    
.globl mov_to_tr_mv_constant_simple
         .type   mov_to_tr_mv_constant_simple, @function
mov_to_tr_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %eax,%tr6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_to_tr_mv_constant_simple, .-mov_to_tr_mv_constant_simple

    
.globl mov_to_tr_mv_constant_complex1
         .type   mov_to_tr_mv_constant_complex1, @function
mov_to_tr_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %eax,%tr6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_to_tr_mv_constant_complex1, .-mov_to_tr_mv_constant_complex1

    
.globl mov_to_tr_mv_constant_complex2
         .type   mov_to_tr_mv_constant_complex2, @function
mov_to_tr_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %eax,%tr6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mov_to_tr_mv_constant_complex2, .-mov_to_tr_mv_constant_complex2

    
.globl movs1_plain
         .type   movs1_plain, @function
movs1_plain:
      .byte 0xa4
  mov $0x0,%eax

    ret
         .size   movs1_plain, .-movs1_plain

    
.globl movs1_allregs
         .type   movs1_allregs, @function
movs1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs1_allregs, .-movs1_allregs

    
.globl movs1_constant_simple
         .type   movs1_constant_simple, @function
movs1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs1_constant_simple, .-movs1_constant_simple

    
.globl movs1_constant_complex1
         .type   movs1_constant_complex1, @function
movs1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs1_constant_complex1, .-movs1_constant_complex1

    
.globl movs1_constant_complex2
         .type   movs1_constant_complex2, @function
movs1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs1_constant_complex2, .-movs1_constant_complex2

    
.globl movs2_mv_plain
         .type   movs2_mv_plain, @function
movs2_mv_plain:
      .byte 0x66,0xa5
  mov $0x0,%eax

    ret
         .size   movs2_mv_plain, .-movs2_mv_plain

    
.globl movs2_mv_allregs
         .type   movs2_mv_allregs, @function
movs2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs2_mv_allregs, .-movs2_mv_allregs

    
.globl movs2_mv_constant_simple
         .type   movs2_mv_constant_simple, @function
movs2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs2_mv_constant_simple, .-movs2_mv_constant_simple

    
.globl movs2_mv_constant_complex1
         .type   movs2_mv_constant_complex1, @function
movs2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs2_mv_constant_complex1, .-movs2_mv_constant_complex1

    
.globl movs2_mv_constant_complex2
         .type   movs2_mv_constant_complex2, @function
movs2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs2_mv_constant_complex2, .-movs2_mv_constant_complex2

    
.globl movs3_plain
         .type   movs3_plain, @function
movs3_plain:
      .byte 0xa5
  mov $0x0,%eax

    ret
         .size   movs3_plain, .-movs3_plain

    
.globl movs3_allregs
         .type   movs3_allregs, @function
movs3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs3_allregs, .-movs3_allregs

    
.globl movs3_constant_simple
         .type   movs3_constant_simple, @function
movs3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs3_constant_simple, .-movs3_constant_simple

    
.globl movs3_constant_complex1
         .type   movs3_constant_complex1, @function
movs3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs3_constant_complex1, .-movs3_constant_complex1

    
.globl movs3_constant_complex2
         .type   movs3_constant_complex2, @function
movs3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs3_constant_complex2, .-movs3_constant_complex2

    
.globl movs_seg_mv_plain
         .type   movs_seg_mv_plain, @function
movs_seg_mv_plain:
      .byte 0x36,0xa5
  mov $0x0,%eax

    ret
         .size   movs_seg_mv_plain, .-movs_seg_mv_plain

    
.globl movs_seg_mv_allregs
         .type   movs_seg_mv_allregs, @function
movs_seg_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x36,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs_seg_mv_allregs, .-movs_seg_mv_allregs

    
.globl movs_seg_mv_constant_simple
         .type   movs_seg_mv_constant_simple, @function
movs_seg_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x36,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs_seg_mv_constant_simple, .-movs_seg_mv_constant_simple

    
.globl movs_seg_mv_constant_complex1
         .type   movs_seg_mv_constant_complex1, @function
movs_seg_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x36,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs_seg_mv_constant_complex1, .-movs_seg_mv_constant_complex1

    
.globl movs_seg_mv_constant_complex2
         .type   movs_seg_mv_constant_complex2, @function
movs_seg_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x36,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movs_seg_mv_constant_complex2, .-movs_seg_mv_constant_complex2

    
.globl movsx1_plain
         .type   movsx1_plain, @function
movsx1_plain:
      movsx %al,%cx
  mov $0x0,%eax

    ret
         .size   movsx1_plain, .-movsx1_plain

    
.globl movsx1_allregs
         .type   movsx1_allregs, @function
movsx1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  movsx %al,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movsx1_allregs, .-movsx1_allregs

    
.globl movsx1_constant_simple
         .type   movsx1_constant_simple, @function
movsx1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  movsx %al,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movsx1_constant_simple, .-movsx1_constant_simple

    
.globl movsx1_constant_complex1
         .type   movsx1_constant_complex1, @function
movsx1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  movsx %al,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movsx1_constant_complex1, .-movsx1_constant_complex1

    
.globl movsx1_constant_complex2
         .type   movsx1_constant_complex2, @function
movsx1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  movsx %al,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movsx1_constant_complex2, .-movsx1_constant_complex2

    
.globl movsx2_plain
         .type   movsx2_plain, @function
movsx2_plain:
      movsx %ax,%ecx
  mov $0x0,%eax

    ret
         .size   movsx2_plain, .-movsx2_plain

    
.globl movsx2_allregs
         .type   movsx2_allregs, @function
movsx2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  movsx %ax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movsx2_allregs, .-movsx2_allregs

    
.globl movsx2_constant_simple
         .type   movsx2_constant_simple, @function
movsx2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  movsx %ax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movsx2_constant_simple, .-movsx2_constant_simple

    
.globl movsx2_constant_complex1
         .type   movsx2_constant_complex1, @function
movsx2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  movsx %ax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movsx2_constant_complex1, .-movsx2_constant_complex1

    
.globl movsx2_constant_complex2
         .type   movsx2_constant_complex2, @function
movsx2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  movsx %ax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movsx2_constant_complex2, .-movsx2_constant_complex2

    
.globl movsx3_plain
         .type   movsx3_plain, @function
movsx3_plain:
      movsx %al,%ecx
  mov $0x0,%eax

    ret
         .size   movsx3_plain, .-movsx3_plain

    
.globl movsx3_allregs
         .type   movsx3_allregs, @function
movsx3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  movsx %al,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movsx3_allregs, .-movsx3_allregs

    
.globl movsx3_constant_simple
         .type   movsx3_constant_simple, @function
movsx3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  movsx %al,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movsx3_constant_simple, .-movsx3_constant_simple

    
.globl movsx3_constant_complex1
         .type   movsx3_constant_complex1, @function
movsx3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  movsx %al,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movsx3_constant_complex1, .-movsx3_constant_complex1

    
.globl movsx3_constant_complex2
         .type   movsx3_constant_complex2, @function
movsx3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  movsx %al,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movsx3_constant_complex2, .-movsx3_constant_complex2

    
.globl movzx1_plain
         .type   movzx1_plain, @function
movzx1_plain:
      movzx %al,%cx
  mov $0x0,%eax

    ret
         .size   movzx1_plain, .-movzx1_plain

    
.globl movzx1_allregs
         .type   movzx1_allregs, @function
movzx1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  movzx %al,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movzx1_allregs, .-movzx1_allregs

    
.globl movzx1_constant_simple
         .type   movzx1_constant_simple, @function
movzx1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  movzx %al,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movzx1_constant_simple, .-movzx1_constant_simple

    
.globl movzx1_constant_complex1
         .type   movzx1_constant_complex1, @function
movzx1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  movzx %al,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movzx1_constant_complex1, .-movzx1_constant_complex1

    
.globl movzx1_constant_complex2
         .type   movzx1_constant_complex2, @function
movzx1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  movzx %al,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movzx1_constant_complex2, .-movzx1_constant_complex2

    
.globl movzx2_plain
         .type   movzx2_plain, @function
movzx2_plain:
      movzx %ax,%ecx
  mov $0x0,%eax

    ret
         .size   movzx2_plain, .-movzx2_plain

    
.globl movzx2_allregs
         .type   movzx2_allregs, @function
movzx2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  movzx %ax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movzx2_allregs, .-movzx2_allregs

    
.globl movzx2_constant_simple
         .type   movzx2_constant_simple, @function
movzx2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  movzx %ax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movzx2_constant_simple, .-movzx2_constant_simple

    
.globl movzx2_constant_complex1
         .type   movzx2_constant_complex1, @function
movzx2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  movzx %ax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movzx2_constant_complex1, .-movzx2_constant_complex1

    
.globl movzx2_constant_complex2
         .type   movzx2_constant_complex2, @function
movzx2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  movzx %ax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movzx2_constant_complex2, .-movzx2_constant_complex2

    
.globl movzx3_plain
         .type   movzx3_plain, @function
movzx3_plain:
      movzx %al,%ecx
  mov $0x0,%eax

    ret
         .size   movzx3_plain, .-movzx3_plain

    
.globl movzx3_allregs
         .type   movzx3_allregs, @function
movzx3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  movzx %al,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movzx3_allregs, .-movzx3_allregs

    
.globl movzx3_constant_simple
         .type   movzx3_constant_simple, @function
movzx3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  movzx %al,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movzx3_constant_simple, .-movzx3_constant_simple

    
.globl movzx3_constant_complex1
         .type   movzx3_constant_complex1, @function
movzx3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  movzx %al,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movzx3_constant_complex1, .-movzx3_constant_complex1

    
.globl movzx3_constant_complex2
         .type   movzx3_constant_complex2, @function
movzx3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  movzx %al,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   movzx3_constant_complex2, .-movzx3_constant_complex2

    
.globl mul1_plain
         .type   mul1_plain, @function
mul1_plain:
      mul %bl
  mov $0x0,%eax

    ret
         .size   mul1_plain, .-mul1_plain

    
.globl mul1_allregs
         .type   mul1_allregs, @function
mul1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mul %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mul1_allregs, .-mul1_allregs

    
.globl mul1_constant_simple
         .type   mul1_constant_simple, @function
mul1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mul %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mul1_constant_simple, .-mul1_constant_simple

    
.globl mul1_constant_complex1
         .type   mul1_constant_complex1, @function
mul1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mul %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mul1_constant_complex1, .-mul1_constant_complex1

    
.globl mul1_constant_complex2
         .type   mul1_constant_complex2, @function
mul1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mul %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mul1_constant_complex2, .-mul1_constant_complex2

    
.globl mul2_plain
         .type   mul2_plain, @function
mul2_plain:
      mul %bx
  mov $0x0,%eax

    ret
         .size   mul2_plain, .-mul2_plain

    
.globl mul2_allregs
         .type   mul2_allregs, @function
mul2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mul %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mul2_allregs, .-mul2_allregs

    
.globl mul2_constant_simple
         .type   mul2_constant_simple, @function
mul2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mul %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mul2_constant_simple, .-mul2_constant_simple

    
.globl mul2_constant_complex1
         .type   mul2_constant_complex1, @function
mul2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mul %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mul2_constant_complex1, .-mul2_constant_complex1

    
.globl mul2_constant_complex2
         .type   mul2_constant_complex2, @function
mul2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mul %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mul2_constant_complex2, .-mul2_constant_complex2

    
.globl mul3_plain
         .type   mul3_plain, @function
mul3_plain:
      mul %ebx
  mov $0x0,%eax

    ret
         .size   mul3_plain, .-mul3_plain

    
.globl mul3_allregs
         .type   mul3_allregs, @function
mul3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mul %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mul3_allregs, .-mul3_allregs

    
.globl mul3_constant_simple
         .type   mul3_constant_simple, @function
mul3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mul %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mul3_constant_simple, .-mul3_constant_simple

    
.globl mul3_constant_complex1
         .type   mul3_constant_complex1, @function
mul3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mul %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mul3_constant_complex1, .-mul3_constant_complex1

    
.globl mul3_constant_complex2
         .type   mul3_constant_complex2, @function
mul3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mul %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   mul3_constant_complex2, .-mul3_constant_complex2

    
.globl neg1_mv_plain
         .type   neg1_mv_plain, @function
neg1_mv_plain:
      neg %bl
  mov $0x0,%eax

    ret
         .size   neg1_mv_plain, .-neg1_mv_plain

    
.globl neg1_mv_allregs
         .type   neg1_mv_allregs, @function
neg1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  neg %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg1_mv_allregs, .-neg1_mv_allregs

    
.globl neg1_mv_constant_simple
         .type   neg1_mv_constant_simple, @function
neg1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  neg %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg1_mv_constant_simple, .-neg1_mv_constant_simple

    
.globl neg1_mv_constant_complex1
         .type   neg1_mv_constant_complex1, @function
neg1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  neg %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg1_mv_constant_complex1, .-neg1_mv_constant_complex1

    
.globl neg1_mv_constant_complex2
         .type   neg1_mv_constant_complex2, @function
neg1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  neg %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg1_mv_constant_complex2, .-neg1_mv_constant_complex2

    
.globl neg2_mv_plain
         .type   neg2_mv_plain, @function
neg2_mv_plain:
      neg %bx
  mov $0x0,%eax

    ret
         .size   neg2_mv_plain, .-neg2_mv_plain

    
.globl neg2_mv_allregs
         .type   neg2_mv_allregs, @function
neg2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  neg %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg2_mv_allregs, .-neg2_mv_allregs

    
.globl neg2_mv_constant_simple
         .type   neg2_mv_constant_simple, @function
neg2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  neg %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg2_mv_constant_simple, .-neg2_mv_constant_simple

    
.globl neg2_mv_constant_complex1
         .type   neg2_mv_constant_complex1, @function
neg2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  neg %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg2_mv_constant_complex1, .-neg2_mv_constant_complex1

    
.globl neg2_mv_constant_complex2
         .type   neg2_mv_constant_complex2, @function
neg2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  neg %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg2_mv_constant_complex2, .-neg2_mv_constant_complex2

    
.globl neg3_plain
         .type   neg3_plain, @function
neg3_plain:
      neg %ebx
  mov $0x0,%eax

    ret
         .size   neg3_plain, .-neg3_plain

    
.globl neg3_allregs
         .type   neg3_allregs, @function
neg3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  neg %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg3_allregs, .-neg3_allregs

    
.globl neg3_constant_simple
         .type   neg3_constant_simple, @function
neg3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  neg %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg3_constant_simple, .-neg3_constant_simple

    
.globl neg3_constant_complex1
         .type   neg3_constant_complex1, @function
neg3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  neg %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg3_constant_complex1, .-neg3_constant_complex1

    
.globl neg3_constant_complex2
         .type   neg3_constant_complex2, @function
neg3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  neg %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg3_constant_complex2, .-neg3_constant_complex2

    
.globl neg4a_zero_mv_plain
         .type   neg4a_zero_mv_plain, @function
neg4a_zero_mv_plain:
      mov $0,%al; neg %al
  mov $0x0,%eax

    ret
         .size   neg4a_zero_mv_plain, .-neg4a_zero_mv_plain

    
.globl neg4a_zero_mv_allregs
         .type   neg4a_zero_mv_allregs, @function
neg4a_zero_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4a_zero_mv_allregs, .-neg4a_zero_mv_allregs

    
.globl neg4a_zero_mv_constant_simple
         .type   neg4a_zero_mv_constant_simple, @function
neg4a_zero_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4a_zero_mv_constant_simple, .-neg4a_zero_mv_constant_simple

    
.globl neg4a_zero_mv_constant_complex1
         .type   neg4a_zero_mv_constant_complex1, @function
neg4a_zero_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4a_zero_mv_constant_complex1, .-neg4a_zero_mv_constant_complex1

    
.globl neg4a_zero_mv_constant_complex2
         .type   neg4a_zero_mv_constant_complex2, @function
neg4a_zero_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4a_zero_mv_constant_complex2, .-neg4a_zero_mv_constant_complex2

    
.globl neg4b_1_mv_plain
         .type   neg4b_1_mv_plain, @function
neg4b_1_mv_plain:
      mov $1,%al; neg %al
  mov $0x0,%eax

    ret
         .size   neg4b_1_mv_plain, .-neg4b_1_mv_plain

    
.globl neg4b_1_mv_allregs
         .type   neg4b_1_mv_allregs, @function
neg4b_1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $1,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4b_1_mv_allregs, .-neg4b_1_mv_allregs

    
.globl neg4b_1_mv_constant_simple
         .type   neg4b_1_mv_constant_simple, @function
neg4b_1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $1,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4b_1_mv_constant_simple, .-neg4b_1_mv_constant_simple

    
.globl neg4b_1_mv_constant_complex1
         .type   neg4b_1_mv_constant_complex1, @function
neg4b_1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $1,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4b_1_mv_constant_complex1, .-neg4b_1_mv_constant_complex1

    
.globl neg4b_1_mv_constant_complex2
         .type   neg4b_1_mv_constant_complex2, @function
neg4b_1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $1,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4b_1_mv_constant_complex2, .-neg4b_1_mv_constant_complex2

    
.globl neg4c_80_mv_plain
         .type   neg4c_80_mv_plain, @function
neg4c_80_mv_plain:
      mov $0x80,%al; neg %al
  mov $0x0,%eax

    ret
         .size   neg4c_80_mv_plain, .-neg4c_80_mv_plain

    
.globl neg4c_80_mv_allregs
         .type   neg4c_80_mv_allregs, @function
neg4c_80_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x80,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4c_80_mv_allregs, .-neg4c_80_mv_allregs

    
.globl neg4c_80_mv_constant_simple
         .type   neg4c_80_mv_constant_simple, @function
neg4c_80_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x80,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4c_80_mv_constant_simple, .-neg4c_80_mv_constant_simple

    
.globl neg4c_80_mv_constant_complex1
         .type   neg4c_80_mv_constant_complex1, @function
neg4c_80_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x80,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4c_80_mv_constant_complex1, .-neg4c_80_mv_constant_complex1

    
.globl neg4c_80_mv_constant_complex2
         .type   neg4c_80_mv_constant_complex2, @function
neg4c_80_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x80,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4c_80_mv_constant_complex2, .-neg4c_80_mv_constant_complex2

    
.globl neg4d_m1_mv_plain
         .type   neg4d_m1_mv_plain, @function
neg4d_m1_mv_plain:
      mov $0xff,%al; neg %al
  mov $0x0,%eax

    ret
         .size   neg4d_m1_mv_plain, .-neg4d_m1_mv_plain

    
.globl neg4d_m1_mv_allregs
         .type   neg4d_m1_mv_allregs, @function
neg4d_m1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0xff,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4d_m1_mv_allregs, .-neg4d_m1_mv_allregs

    
.globl neg4d_m1_mv_constant_simple
         .type   neg4d_m1_mv_constant_simple, @function
neg4d_m1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0xff,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4d_m1_mv_constant_simple, .-neg4d_m1_mv_constant_simple

    
.globl neg4d_m1_mv_constant_complex1
         .type   neg4d_m1_mv_constant_complex1, @function
neg4d_m1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0xff,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4d_m1_mv_constant_complex1, .-neg4d_m1_mv_constant_complex1

    
.globl neg4d_m1_mv_constant_complex2
         .type   neg4d_m1_mv_constant_complex2, @function
neg4d_m1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0xff,%al; neg %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg4d_m1_mv_constant_complex2, .-neg4d_m1_mv_constant_complex2

    
.globl neg5_mv_plain
         .type   neg5_mv_plain, @function
neg5_mv_plain:
      mov $0x80,%al; neg %al; sets %bl
  mov $0x0,%eax

    ret
         .size   neg5_mv_plain, .-neg5_mv_plain

    
.globl neg5_mv_allregs
         .type   neg5_mv_allregs, @function
neg5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x80,%al; neg %al; sets %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg5_mv_allregs, .-neg5_mv_allregs

    
.globl neg5_mv_constant_simple
         .type   neg5_mv_constant_simple, @function
neg5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x80,%al; neg %al; sets %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg5_mv_constant_simple, .-neg5_mv_constant_simple

    
.globl neg5_mv_constant_complex1
         .type   neg5_mv_constant_complex1, @function
neg5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x80,%al; neg %al; sets %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg5_mv_constant_complex1, .-neg5_mv_constant_complex1

    
.globl neg5_mv_constant_complex2
         .type   neg5_mv_constant_complex2, @function
neg5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x80,%al; neg %al; sets %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg5_mv_constant_complex2, .-neg5_mv_constant_complex2

    
.globl neg_locked_mv_plain
         .type   neg_locked_mv_plain, @function
neg_locked_mv_plain:
      lock negl (%ebx)
  mov $0x0,%eax

    ret
         .size   neg_locked_mv_plain, .-neg_locked_mv_plain

    
.globl neg_locked_mv_allregs
         .type   neg_locked_mv_allregs, @function
neg_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lock negl (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg_locked_mv_allregs, .-neg_locked_mv_allregs

    
.globl neg_locked_mv_constant_simple
         .type   neg_locked_mv_constant_simple, @function
neg_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lock negl (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg_locked_mv_constant_simple, .-neg_locked_mv_constant_simple

    
.globl neg_locked_mv_constant_complex1
         .type   neg_locked_mv_constant_complex1, @function
neg_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lock negl (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg_locked_mv_constant_complex1, .-neg_locked_mv_constant_complex1

    
.globl neg_locked_mv_constant_complex2
         .type   neg_locked_mv_constant_complex2, @function
neg_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lock negl (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   neg_locked_mv_constant_complex2, .-neg_locked_mv_constant_complex2

    
.globl nop1_plain
         .type   nop1_plain, @function
nop1_plain:
      .byte 0x90
  mov $0x0,%eax

    ret
         .size   nop1_plain, .-nop1_plain

    
.globl nop1_allregs
         .type   nop1_allregs, @function
nop1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop1_allregs, .-nop1_allregs

    
.globl nop1_constant_simple
         .type   nop1_constant_simple, @function
nop1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop1_constant_simple, .-nop1_constant_simple

    
.globl nop1_constant_complex1
         .type   nop1_constant_complex1, @function
nop1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop1_constant_complex1, .-nop1_constant_complex1

    
.globl nop1_constant_complex2
         .type   nop1_constant_complex2, @function
nop1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop1_constant_complex2, .-nop1_constant_complex2

    
.globl nop2_mv_plain
         .type   nop2_mv_plain, @function
nop2_mv_plain:
      .byte 0x66,0x90
  mov $0x0,%eax

    ret
         .size   nop2_mv_plain, .-nop2_mv_plain

    
.globl nop2_mv_allregs
         .type   nop2_mv_allregs, @function
nop2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop2_mv_allregs, .-nop2_mv_allregs

    
.globl nop2_mv_constant_simple
         .type   nop2_mv_constant_simple, @function
nop2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop2_mv_constant_simple, .-nop2_mv_constant_simple

    
.globl nop2_mv_constant_complex1
         .type   nop2_mv_constant_complex1, @function
nop2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop2_mv_constant_complex1, .-nop2_mv_constant_complex1

    
.globl nop2_mv_constant_complex2
         .type   nop2_mv_constant_complex2, @function
nop2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop2_mv_constant_complex2, .-nop2_mv_constant_complex2

    
.globl nop3_mv_plain
         .type   nop3_mv_plain, @function
nop3_mv_plain:
      .byte 0x0f,0x1f,0x00
  mov $0x0,%eax

    ret
         .size   nop3_mv_plain, .-nop3_mv_plain

    
.globl nop3_mv_allregs
         .type   nop3_mv_allregs, @function
nop3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop3_mv_allregs, .-nop3_mv_allregs

    
.globl nop3_mv_constant_simple
         .type   nop3_mv_constant_simple, @function
nop3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop3_mv_constant_simple, .-nop3_mv_constant_simple

    
.globl nop3_mv_constant_complex1
         .type   nop3_mv_constant_complex1, @function
nop3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop3_mv_constant_complex1, .-nop3_mv_constant_complex1

    
.globl nop3_mv_constant_complex2
         .type   nop3_mv_constant_complex2, @function
nop3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop3_mv_constant_complex2, .-nop3_mv_constant_complex2

    
.globl nop4_mv_plain
         .type   nop4_mv_plain, @function
nop4_mv_plain:
      .byte 0x0f,0x1f,0x40,0x00
  mov $0x0,%eax

    ret
         .size   nop4_mv_plain, .-nop4_mv_plain

    
.globl nop4_mv_allregs
         .type   nop4_mv_allregs, @function
nop4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x40,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop4_mv_allregs, .-nop4_mv_allregs

    
.globl nop4_mv_constant_simple
         .type   nop4_mv_constant_simple, @function
nop4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x40,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop4_mv_constant_simple, .-nop4_mv_constant_simple

    
.globl nop4_mv_constant_complex1
         .type   nop4_mv_constant_complex1, @function
nop4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x40,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop4_mv_constant_complex1, .-nop4_mv_constant_complex1

    
.globl nop4_mv_constant_complex2
         .type   nop4_mv_constant_complex2, @function
nop4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x40,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop4_mv_constant_complex2, .-nop4_mv_constant_complex2

    
.globl nop5_mv_plain
         .type   nop5_mv_plain, @function
nop5_mv_plain:
      .byte 0x0f,0x1f,0x44,0x00,0x00
  mov $0x0,%eax

    ret
         .size   nop5_mv_plain, .-nop5_mv_plain

    
.globl nop5_mv_allregs
         .type   nop5_mv_allregs, @function
nop5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x44,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop5_mv_allregs, .-nop5_mv_allregs

    
.globl nop5_mv_constant_simple
         .type   nop5_mv_constant_simple, @function
nop5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x44,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop5_mv_constant_simple, .-nop5_mv_constant_simple

    
.globl nop5_mv_constant_complex1
         .type   nop5_mv_constant_complex1, @function
nop5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x44,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop5_mv_constant_complex1, .-nop5_mv_constant_complex1

    
.globl nop5_mv_constant_complex2
         .type   nop5_mv_constant_complex2, @function
nop5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x44,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop5_mv_constant_complex2, .-nop5_mv_constant_complex2

    
.globl nop6_mv_plain
         .type   nop6_mv_plain, @function
nop6_mv_plain:
      .byte 0x66,0x0f,0x1f,0x44,0x00,0x00
  mov $0x0,%eax

    ret
         .size   nop6_mv_plain, .-nop6_mv_plain

    
.globl nop6_mv_allregs
         .type   nop6_mv_allregs, @function
nop6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x0f,0x1f,0x44,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop6_mv_allregs, .-nop6_mv_allregs

    
.globl nop6_mv_constant_simple
         .type   nop6_mv_constant_simple, @function
nop6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x0f,0x1f,0x44,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop6_mv_constant_simple, .-nop6_mv_constant_simple

    
.globl nop6_mv_constant_complex1
         .type   nop6_mv_constant_complex1, @function
nop6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x0f,0x1f,0x44,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop6_mv_constant_complex1, .-nop6_mv_constant_complex1

    
.globl nop6_mv_constant_complex2
         .type   nop6_mv_constant_complex2, @function
nop6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x0f,0x1f,0x44,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop6_mv_constant_complex2, .-nop6_mv_constant_complex2

    
.globl nop7_mv_plain
         .type   nop7_mv_plain, @function
nop7_mv_plain:
      .byte 0x0f,0x1f,0x80,0x00,0x00,0x00,0x00
  mov $0x0,%eax

    ret
         .size   nop7_mv_plain, .-nop7_mv_plain

    
.globl nop7_mv_allregs
         .type   nop7_mv_allregs, @function
nop7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x80,0x00,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop7_mv_allregs, .-nop7_mv_allregs

    
.globl nop7_mv_constant_simple
         .type   nop7_mv_constant_simple, @function
nop7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x80,0x00,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop7_mv_constant_simple, .-nop7_mv_constant_simple

    
.globl nop7_mv_constant_complex1
         .type   nop7_mv_constant_complex1, @function
nop7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x80,0x00,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop7_mv_constant_complex1, .-nop7_mv_constant_complex1

    
.globl nop7_mv_constant_complex2
         .type   nop7_mv_constant_complex2, @function
nop7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x1f,0x80,0x00,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   nop7_mv_constant_complex2, .-nop7_mv_constant_complex2

    
.globl not1_mv_plain
         .type   not1_mv_plain, @function
not1_mv_plain:
      not %bl
  mov $0x0,%eax

    ret
         .size   not1_mv_plain, .-not1_mv_plain

    
.globl not1_mv_allregs
         .type   not1_mv_allregs, @function
not1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  not %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not1_mv_allregs, .-not1_mv_allregs

    
.globl not1_mv_constant_simple
         .type   not1_mv_constant_simple, @function
not1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  not %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not1_mv_constant_simple, .-not1_mv_constant_simple

    
.globl not1_mv_constant_complex1
         .type   not1_mv_constant_complex1, @function
not1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  not %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not1_mv_constant_complex1, .-not1_mv_constant_complex1

    
.globl not1_mv_constant_complex2
         .type   not1_mv_constant_complex2, @function
not1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  not %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not1_mv_constant_complex2, .-not1_mv_constant_complex2

    
.globl not2_mv_plain
         .type   not2_mv_plain, @function
not2_mv_plain:
      not %bx
  mov $0x0,%eax

    ret
         .size   not2_mv_plain, .-not2_mv_plain

    
.globl not2_mv_allregs
         .type   not2_mv_allregs, @function
not2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  not %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not2_mv_allregs, .-not2_mv_allregs

    
.globl not2_mv_constant_simple
         .type   not2_mv_constant_simple, @function
not2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  not %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not2_mv_constant_simple, .-not2_mv_constant_simple

    
.globl not2_mv_constant_complex1
         .type   not2_mv_constant_complex1, @function
not2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  not %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not2_mv_constant_complex1, .-not2_mv_constant_complex1

    
.globl not2_mv_constant_complex2
         .type   not2_mv_constant_complex2, @function
not2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  not %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not2_mv_constant_complex2, .-not2_mv_constant_complex2

    
.globl not3_plain
         .type   not3_plain, @function
not3_plain:
      not %ebx
  mov $0x0,%eax

    ret
         .size   not3_plain, .-not3_plain

    
.globl not3_allregs
         .type   not3_allregs, @function
not3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  not %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not3_allregs, .-not3_allregs

    
.globl not3_constant_simple
         .type   not3_constant_simple, @function
not3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  not %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not3_constant_simple, .-not3_constant_simple

    
.globl not3_constant_complex1
         .type   not3_constant_complex1, @function
not3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  not %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not3_constant_complex1, .-not3_constant_complex1

    
.globl not3_constant_complex2
         .type   not3_constant_complex2, @function
not3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  not %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not3_constant_complex2, .-not3_constant_complex2

    
.globl not_locked_mv_plain
         .type   not_locked_mv_plain, @function
not_locked_mv_plain:
      lock notl (%ebx)
  mov $0x0,%eax

    ret
         .size   not_locked_mv_plain, .-not_locked_mv_plain

    
.globl not_locked_mv_allregs
         .type   not_locked_mv_allregs, @function
not_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lock notl (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not_locked_mv_allregs, .-not_locked_mv_allregs

    
.globl not_locked_mv_constant_simple
         .type   not_locked_mv_constant_simple, @function
not_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lock notl (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not_locked_mv_constant_simple, .-not_locked_mv_constant_simple

    
.globl not_locked_mv_constant_complex1
         .type   not_locked_mv_constant_complex1, @function
not_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lock notl (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not_locked_mv_constant_complex1, .-not_locked_mv_constant_complex1

    
.globl not_locked_mv_constant_complex2
         .type   not_locked_mv_constant_complex2, @function
not_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lock notl (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   not_locked_mv_constant_complex2, .-not_locked_mv_constant_complex2

    
.globl or1_mv_plain
         .type   or1_mv_plain, @function
or1_mv_plain:
      .byte 0x0c,0x02
  mov $0x0,%eax

    ret
         .size   or1_mv_plain, .-or1_mv_plain

    
.globl or1_mv_allregs
         .type   or1_mv_allregs, @function
or1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or1_mv_allregs, .-or1_mv_allregs

    
.globl or1_mv_constant_simple
         .type   or1_mv_constant_simple, @function
or1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or1_mv_constant_simple, .-or1_mv_constant_simple

    
.globl or1_mv_constant_complex1
         .type   or1_mv_constant_complex1, @function
or1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or1_mv_constant_complex1, .-or1_mv_constant_complex1

    
.globl or1_mv_constant_complex2
         .type   or1_mv_constant_complex2, @function
or1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or1_mv_constant_complex2, .-or1_mv_constant_complex2

    
.globl or2_mv_plain
         .type   or2_mv_plain, @function
or2_mv_plain:
      .byte 0x0c,0xfe
  mov $0x0,%eax

    ret
         .size   or2_mv_plain, .-or2_mv_plain

    
.globl or2_mv_allregs
         .type   or2_mv_allregs, @function
or2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or2_mv_allregs, .-or2_mv_allregs

    
.globl or2_mv_constant_simple
         .type   or2_mv_constant_simple, @function
or2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or2_mv_constant_simple, .-or2_mv_constant_simple

    
.globl or2_mv_constant_complex1
         .type   or2_mv_constant_complex1, @function
or2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or2_mv_constant_complex1, .-or2_mv_constant_complex1

    
.globl or2_mv_constant_complex2
         .type   or2_mv_constant_complex2, @function
or2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or2_mv_constant_complex2, .-or2_mv_constant_complex2

    
.globl or3_mv_plain
         .type   or3_mv_plain, @function
or3_mv_plain:
      .byte 0x66,0x0d,0x02,0x00
  mov $0x0,%eax

    ret
         .size   or3_mv_plain, .-or3_mv_plain

    
.globl or3_mv_allregs
         .type   or3_mv_allregs, @function
or3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x0d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or3_mv_allregs, .-or3_mv_allregs

    
.globl or3_mv_constant_simple
         .type   or3_mv_constant_simple, @function
or3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x0d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or3_mv_constant_simple, .-or3_mv_constant_simple

    
.globl or3_mv_constant_complex1
         .type   or3_mv_constant_complex1, @function
or3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x0d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or3_mv_constant_complex1, .-or3_mv_constant_complex1

    
.globl or3_mv_constant_complex2
         .type   or3_mv_constant_complex2, @function
or3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x0d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or3_mv_constant_complex2, .-or3_mv_constant_complex2

    
.globl or4_mv_plain
         .type   or4_mv_plain, @function
or4_mv_plain:
      .byte 0x66,0x0d,0xfe,0xff
  mov $0x0,%eax

    ret
         .size   or4_mv_plain, .-or4_mv_plain

    
.globl or4_mv_allregs
         .type   or4_mv_allregs, @function
or4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x0d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or4_mv_allregs, .-or4_mv_allregs

    
.globl or4_mv_constant_simple
         .type   or4_mv_constant_simple, @function
or4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x0d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or4_mv_constant_simple, .-or4_mv_constant_simple

    
.globl or4_mv_constant_complex1
         .type   or4_mv_constant_complex1, @function
or4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x0d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or4_mv_constant_complex1, .-or4_mv_constant_complex1

    
.globl or4_mv_constant_complex2
         .type   or4_mv_constant_complex2, @function
or4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x0d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or4_mv_constant_complex2, .-or4_mv_constant_complex2

    
.globl or5_plain
         .type   or5_plain, @function
or5_plain:
      .byte 0x0d,0x02,0x00,0x00,0x00
  mov $0x0,%eax

    ret
         .size   or5_plain, .-or5_plain

    
.globl or5_allregs
         .type   or5_allregs, @function
or5_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or5_allregs, .-or5_allregs

    
.globl or5_constant_simple
         .type   or5_constant_simple, @function
or5_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or5_constant_simple, .-or5_constant_simple

    
.globl or5_constant_complex1
         .type   or5_constant_complex1, @function
or5_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or5_constant_complex1, .-or5_constant_complex1

    
.globl or5_constant_complex2
         .type   or5_constant_complex2, @function
or5_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or5_constant_complex2, .-or5_constant_complex2

    
.globl or6_mv_plain
         .type   or6_mv_plain, @function
or6_mv_plain:
      .byte 0x0d,0xfe,0xff,0xff,0xff
  mov $0x0,%eax

    ret
         .size   or6_mv_plain, .-or6_mv_plain

    
.globl or6_mv_allregs
         .type   or6_mv_allregs, @function
or6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or6_mv_allregs, .-or6_mv_allregs

    
.globl or6_mv_constant_simple
         .type   or6_mv_constant_simple, @function
or6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or6_mv_constant_simple, .-or6_mv_constant_simple

    
.globl or6_mv_constant_complex1
         .type   or6_mv_constant_complex1, @function
or6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or6_mv_constant_complex1, .-or6_mv_constant_complex1

    
.globl or6_mv_constant_complex2
         .type   or6_mv_constant_complex2, @function
or6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or6_mv_constant_complex2, .-or6_mv_constant_complex2

    
.globl or7_mv_plain
         .type   or7_mv_plain, @function
or7_mv_plain:
      orl 8(%ebp), %eax
  mov $0x0,%eax

    ret
         .size   or7_mv_plain, .-or7_mv_plain

    
.globl or7_mv_allregs
         .type   or7_mv_allregs, @function
or7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  orl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or7_mv_allregs, .-or7_mv_allregs

    
.globl or7_mv_constant_simple
         .type   or7_mv_constant_simple, @function
or7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  orl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or7_mv_constant_simple, .-or7_mv_constant_simple

    
.globl or7_mv_constant_complex1
         .type   or7_mv_constant_complex1, @function
or7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  orl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or7_mv_constant_complex1, .-or7_mv_constant_complex1

    
.globl or7_mv_constant_complex2
         .type   or7_mv_constant_complex2, @function
or7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  orl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or7_mv_constant_complex2, .-or7_mv_constant_complex2

    
.globl or8_mv_plain
         .type   or8_mv_plain, @function
or8_mv_plain:
      orl $0x02,%eax
  mov $0x0,%eax

    ret
         .size   or8_mv_plain, .-or8_mv_plain

    
.globl or8_mv_allregs
         .type   or8_mv_allregs, @function
or8_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  orl $0x02,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or8_mv_allregs, .-or8_mv_allregs

    
.globl or8_mv_constant_simple
         .type   or8_mv_constant_simple, @function
or8_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  orl $0x02,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or8_mv_constant_simple, .-or8_mv_constant_simple

    
.globl or8_mv_constant_complex1
         .type   or8_mv_constant_complex1, @function
or8_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  orl $0x02,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or8_mv_constant_complex1, .-or8_mv_constant_complex1

    
.globl or8_mv_constant_complex2
         .type   or8_mv_constant_complex2, @function
or8_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  orl $0x02,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or8_mv_constant_complex2, .-or8_mv_constant_complex2

    
.globl or9_mv_plain
         .type   or9_mv_plain, @function
or9_mv_plain:
      orl $0xf2,%eax
  mov $0x0,%eax

    ret
         .size   or9_mv_plain, .-or9_mv_plain

    
.globl or9_mv_allregs
         .type   or9_mv_allregs, @function
or9_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  orl $0xf2,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or9_mv_allregs, .-or9_mv_allregs

    
.globl or9_mv_constant_simple
         .type   or9_mv_constant_simple, @function
or9_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  orl $0xf2,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or9_mv_constant_simple, .-or9_mv_constant_simple

    
.globl or9_mv_constant_complex1
         .type   or9_mv_constant_complex1, @function
or9_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  orl $0xf2,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or9_mv_constant_complex1, .-or9_mv_constant_complex1

    
.globl or9_mv_constant_complex2
         .type   or9_mv_constant_complex2, @function
or9_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  orl $0xf2,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or9_mv_constant_complex2, .-or9_mv_constant_complex2

    
.globl or_locked_mv_plain
         .type   or_locked_mv_plain, @function
or_locked_mv_plain:
      .byte 0xf0,0x0b,0x45,0x08
  mov $0x0,%eax

    ret
         .size   or_locked_mv_plain, .-or_locked_mv_plain

    
.globl or_locked_mv_allregs
         .type   or_locked_mv_allregs, @function
or_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf0,0x0b,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or_locked_mv_allregs, .-or_locked_mv_allregs

    
.globl or_locked_mv_constant_simple
         .type   or_locked_mv_constant_simple, @function
or_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf0,0x0b,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or_locked_mv_constant_simple, .-or_locked_mv_constant_simple

    
.globl or_locked_mv_constant_complex1
         .type   or_locked_mv_constant_complex1, @function
or_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf0,0x0b,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or_locked_mv_constant_complex1, .-or_locked_mv_constant_complex1

    
.globl or_locked_mv_constant_complex2
         .type   or_locked_mv_constant_complex2, @function
or_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf0,0x0b,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   or_locked_mv_constant_complex2, .-or_locked_mv_constant_complex2

    
.globl out1_plain
         .type   out1_plain, @function
out1_plain:
      .byte 0xe6,0x12
  mov $0x0,%eax

    ret
         .size   out1_plain, .-out1_plain

    
.globl out1_allregs
         .type   out1_allregs, @function
out1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xe6,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out1_allregs, .-out1_allregs

    
.globl out1_constant_simple
         .type   out1_constant_simple, @function
out1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xe6,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out1_constant_simple, .-out1_constant_simple

    
.globl out1_constant_complex1
         .type   out1_constant_complex1, @function
out1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xe6,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out1_constant_complex1, .-out1_constant_complex1

    
.globl out1_constant_complex2
         .type   out1_constant_complex2, @function
out1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xe6,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out1_constant_complex2, .-out1_constant_complex2

    
.globl out2_mv_plain
         .type   out2_mv_plain, @function
out2_mv_plain:
      .byte 0x66,0xe7,0x12
  mov $0x0,%eax

    ret
         .size   out2_mv_plain, .-out2_mv_plain

    
.globl out2_mv_allregs
         .type   out2_mv_allregs, @function
out2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xe7,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out2_mv_allregs, .-out2_mv_allregs

    
.globl out2_mv_constant_simple
         .type   out2_mv_constant_simple, @function
out2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xe7,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out2_mv_constant_simple, .-out2_mv_constant_simple

    
.globl out2_mv_constant_complex1
         .type   out2_mv_constant_complex1, @function
out2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xe7,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out2_mv_constant_complex1, .-out2_mv_constant_complex1

    
.globl out2_mv_constant_complex2
         .type   out2_mv_constant_complex2, @function
out2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xe7,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out2_mv_constant_complex2, .-out2_mv_constant_complex2

    
.globl out3_plain
         .type   out3_plain, @function
out3_plain:
      .byte 0xe7,0x12
  mov $0x0,%eax

    ret
         .size   out3_plain, .-out3_plain

    
.globl out3_allregs
         .type   out3_allregs, @function
out3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xe7,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out3_allregs, .-out3_allregs

    
.globl out3_constant_simple
         .type   out3_constant_simple, @function
out3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xe7,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out3_constant_simple, .-out3_constant_simple

    
.globl out3_constant_complex1
         .type   out3_constant_complex1, @function
out3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xe7,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out3_constant_complex1, .-out3_constant_complex1

    
.globl out3_constant_complex2
         .type   out3_constant_complex2, @function
out3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xe7,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out3_constant_complex2, .-out3_constant_complex2

    
.globl out4_plain
         .type   out4_plain, @function
out4_plain:
      .byte 0xee
  mov $0x0,%eax

    ret
         .size   out4_plain, .-out4_plain

    
.globl out4_allregs
         .type   out4_allregs, @function
out4_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xee
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out4_allregs, .-out4_allregs

    
.globl out4_constant_simple
         .type   out4_constant_simple, @function
out4_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xee
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out4_constant_simple, .-out4_constant_simple

    
.globl out4_constant_complex1
         .type   out4_constant_complex1, @function
out4_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xee
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out4_constant_complex1, .-out4_constant_complex1

    
.globl out4_constant_complex2
         .type   out4_constant_complex2, @function
out4_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xee
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out4_constant_complex2, .-out4_constant_complex2

    
.globl out5_mv_plain
         .type   out5_mv_plain, @function
out5_mv_plain:
      .byte 0x66,0xef
  mov $0x0,%eax

    ret
         .size   out5_mv_plain, .-out5_mv_plain

    
.globl out5_mv_allregs
         .type   out5_mv_allregs, @function
out5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xef
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out5_mv_allregs, .-out5_mv_allregs

    
.globl out5_mv_constant_simple
         .type   out5_mv_constant_simple, @function
out5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xef
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out5_mv_constant_simple, .-out5_mv_constant_simple

    
.globl out5_mv_constant_complex1
         .type   out5_mv_constant_complex1, @function
out5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xef
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out5_mv_constant_complex1, .-out5_mv_constant_complex1

    
.globl out5_mv_constant_complex2
         .type   out5_mv_constant_complex2, @function
out5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xef
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out5_mv_constant_complex2, .-out5_mv_constant_complex2

    
.globl out6_mv_plain
         .type   out6_mv_plain, @function
out6_mv_plain:
      .byte 0xef
  mov $0x0,%eax

    ret
         .size   out6_mv_plain, .-out6_mv_plain

    
.globl out6_mv_allregs
         .type   out6_mv_allregs, @function
out6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xef
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out6_mv_allregs, .-out6_mv_allregs

    
.globl out6_mv_constant_simple
         .type   out6_mv_constant_simple, @function
out6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xef
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out6_mv_constant_simple, .-out6_mv_constant_simple

    
.globl out6_mv_constant_complex1
         .type   out6_mv_constant_complex1, @function
out6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xef
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out6_mv_constant_complex1, .-out6_mv_constant_complex1

    
.globl out6_mv_constant_complex2
         .type   out6_mv_constant_complex2, @function
out6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xef
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   out6_mv_constant_complex2, .-out6_mv_constant_complex2

    
.globl outs1_plain
         .type   outs1_plain, @function
outs1_plain:
      .byte 0x6e
  mov $0x0,%eax

    ret
         .size   outs1_plain, .-outs1_plain

    
.globl outs1_allregs
         .type   outs1_allregs, @function
outs1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   outs1_allregs, .-outs1_allregs

    
.globl outs1_constant_simple
         .type   outs1_constant_simple, @function
outs1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   outs1_constant_simple, .-outs1_constant_simple

    
.globl outs1_constant_complex1
         .type   outs1_constant_complex1, @function
outs1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   outs1_constant_complex1, .-outs1_constant_complex1

    
.globl outs1_constant_complex2
         .type   outs1_constant_complex2, @function
outs1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   outs1_constant_complex2, .-outs1_constant_complex2

    
.globl outs2_mv_plain
         .type   outs2_mv_plain, @function
outs2_mv_plain:
      .byte 0x66,0x6f
  mov $0x0,%eax

    ret
         .size   outs2_mv_plain, .-outs2_mv_plain

    
.globl outs2_mv_allregs
         .type   outs2_mv_allregs, @function
outs2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   outs2_mv_allregs, .-outs2_mv_allregs

    
.globl outs2_mv_constant_simple
         .type   outs2_mv_constant_simple, @function
outs2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   outs2_mv_constant_simple, .-outs2_mv_constant_simple

    
.globl outs2_mv_constant_complex1
         .type   outs2_mv_constant_complex1, @function
outs2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   outs2_mv_constant_complex1, .-outs2_mv_constant_complex1

    
.globl outs2_mv_constant_complex2
         .type   outs2_mv_constant_complex2, @function
outs2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   outs2_mv_constant_complex2, .-outs2_mv_constant_complex2

    
.globl outs3_plain
         .type   outs3_plain, @function
outs3_plain:
      .byte 0x6f
  mov $0x0,%eax

    ret
         .size   outs3_plain, .-outs3_plain

    
.globl outs3_allregs
         .type   outs3_allregs, @function
outs3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   outs3_allregs, .-outs3_allregs

    
.globl outs3_constant_simple
         .type   outs3_constant_simple, @function
outs3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   outs3_constant_simple, .-outs3_constant_simple

    
.globl outs3_constant_complex1
         .type   outs3_constant_complex1, @function
outs3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   outs3_constant_complex1, .-outs3_constant_complex1

    
.globl outs3_constant_complex2
         .type   outs3_constant_complex2, @function
outs3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   outs3_constant_complex2, .-outs3_constant_complex2

    
.globl pop1_mv_plain
         .type   pop1_mv_plain, @function
pop1_mv_plain:
      popw (%eax)
  mov $0x0,%eax

    ret
         .size   pop1_mv_plain, .-pop1_mv_plain

    
.globl pop1_mv_allregs
         .type   pop1_mv_allregs, @function
pop1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  popw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop1_mv_allregs, .-pop1_mv_allregs

    
.globl pop1_mv_constant_simple
         .type   pop1_mv_constant_simple, @function
pop1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  popw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop1_mv_constant_simple, .-pop1_mv_constant_simple

    
.globl pop1_mv_constant_complex1
         .type   pop1_mv_constant_complex1, @function
pop1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  popw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop1_mv_constant_complex1, .-pop1_mv_constant_complex1

    
.globl pop1_mv_constant_complex2
         .type   pop1_mv_constant_complex2, @function
pop1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  popw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop1_mv_constant_complex2, .-pop1_mv_constant_complex2

    
.globl pop2_mv_plain
         .type   pop2_mv_plain, @function
pop2_mv_plain:
      pop (%eax)
  mov $0x0,%eax

    ret
         .size   pop2_mv_plain, .-pop2_mv_plain

    
.globl pop2_mv_allregs
         .type   pop2_mv_allregs, @function
pop2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  pop (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop2_mv_allregs, .-pop2_mv_allregs

    
.globl pop2_mv_constant_simple
         .type   pop2_mv_constant_simple, @function
pop2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  pop (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop2_mv_constant_simple, .-pop2_mv_constant_simple

    
.globl pop2_mv_constant_complex1
         .type   pop2_mv_constant_complex1, @function
pop2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  pop (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop2_mv_constant_complex1, .-pop2_mv_constant_complex1

    
.globl pop2_mv_constant_complex2
         .type   pop2_mv_constant_complex2, @function
pop2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  pop (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop2_mv_constant_complex2, .-pop2_mv_constant_complex2

    
.globl pop3_mv_plain
         .type   pop3_mv_plain, @function
pop3_mv_plain:
      push %bx;pop %ax
  mov $0x0,%eax

    ret
         .size   pop3_mv_plain, .-pop3_mv_plain

    
.globl pop3_mv_allregs
         .type   pop3_mv_allregs, @function
pop3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %bx;pop %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop3_mv_allregs, .-pop3_mv_allregs

    
.globl pop3_mv_constant_simple
         .type   pop3_mv_constant_simple, @function
pop3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %bx;pop %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop3_mv_constant_simple, .-pop3_mv_constant_simple

    
.globl pop3_mv_constant_complex1
         .type   pop3_mv_constant_complex1, @function
pop3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %bx;pop %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop3_mv_constant_complex1, .-pop3_mv_constant_complex1

    
.globl pop3_mv_constant_complex2
         .type   pop3_mv_constant_complex2, @function
pop3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %bx;pop %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop3_mv_constant_complex2, .-pop3_mv_constant_complex2

    
.globl pop4_plain
         .type   pop4_plain, @function
pop4_plain:
      push %ebx;pop %eax
  mov $0x0,%eax

    ret
         .size   pop4_plain, .-pop4_plain

    
.globl pop4_allregs
         .type   pop4_allregs, @function
pop4_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %ebx;pop %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop4_allregs, .-pop4_allregs

    
.globl pop4_constant_simple
         .type   pop4_constant_simple, @function
pop4_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %ebx;pop %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop4_constant_simple, .-pop4_constant_simple

    
.globl pop4_constant_complex1
         .type   pop4_constant_complex1, @function
pop4_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %ebx;pop %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop4_constant_complex1, .-pop4_constant_complex1

    
.globl pop4_constant_complex2
         .type   pop4_constant_complex2, @function
pop4_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %ebx;pop %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop4_constant_complex2, .-pop4_constant_complex2

    
.globl pop_seg1_mv_plain
         .type   pop_seg1_mv_plain, @function
pop_seg1_mv_plain:
      push %bx;pop %ds
  mov $0x0,%eax

    ret
         .size   pop_seg1_mv_plain, .-pop_seg1_mv_plain

    
.globl pop_seg1_mv_allregs
         .type   pop_seg1_mv_allregs, @function
pop_seg1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %bx;pop %ds
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg1_mv_allregs, .-pop_seg1_mv_allregs

    
.globl pop_seg1_mv_constant_simple
         .type   pop_seg1_mv_constant_simple, @function
pop_seg1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %bx;pop %ds
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg1_mv_constant_simple, .-pop_seg1_mv_constant_simple

    
.globl pop_seg1_mv_constant_complex1
         .type   pop_seg1_mv_constant_complex1, @function
pop_seg1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %bx;pop %ds
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg1_mv_constant_complex1, .-pop_seg1_mv_constant_complex1

    
.globl pop_seg1_mv_constant_complex2
         .type   pop_seg1_mv_constant_complex2, @function
pop_seg1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %bx;pop %ds
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg1_mv_constant_complex2, .-pop_seg1_mv_constant_complex2

    
.globl pop_seg2_mv_plain
         .type   pop_seg2_mv_plain, @function
pop_seg2_mv_plain:
      push %bx;pop %es
  mov $0x0,%eax

    ret
         .size   pop_seg2_mv_plain, .-pop_seg2_mv_plain

    
.globl pop_seg2_mv_allregs
         .type   pop_seg2_mv_allregs, @function
pop_seg2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %bx;pop %es
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg2_mv_allregs, .-pop_seg2_mv_allregs

    
.globl pop_seg2_mv_constant_simple
         .type   pop_seg2_mv_constant_simple, @function
pop_seg2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %bx;pop %es
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg2_mv_constant_simple, .-pop_seg2_mv_constant_simple

    
.globl pop_seg2_mv_constant_complex1
         .type   pop_seg2_mv_constant_complex1, @function
pop_seg2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %bx;pop %es
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg2_mv_constant_complex1, .-pop_seg2_mv_constant_complex1

    
.globl pop_seg2_mv_constant_complex2
         .type   pop_seg2_mv_constant_complex2, @function
pop_seg2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %bx;pop %es
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg2_mv_constant_complex2, .-pop_seg2_mv_constant_complex2

    
.globl pop_seg3_mv_plain
         .type   pop_seg3_mv_plain, @function
pop_seg3_mv_plain:
      push %bx;pop %fs
  mov $0x0,%eax

    ret
         .size   pop_seg3_mv_plain, .-pop_seg3_mv_plain

    
.globl pop_seg3_mv_allregs
         .type   pop_seg3_mv_allregs, @function
pop_seg3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %bx;pop %fs
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg3_mv_allregs, .-pop_seg3_mv_allregs

    
.globl pop_seg3_mv_constant_simple
         .type   pop_seg3_mv_constant_simple, @function
pop_seg3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %bx;pop %fs
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg3_mv_constant_simple, .-pop_seg3_mv_constant_simple

    
.globl pop_seg3_mv_constant_complex1
         .type   pop_seg3_mv_constant_complex1, @function
pop_seg3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %bx;pop %fs
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg3_mv_constant_complex1, .-pop_seg3_mv_constant_complex1

    
.globl pop_seg3_mv_constant_complex2
         .type   pop_seg3_mv_constant_complex2, @function
pop_seg3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %bx;pop %fs
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg3_mv_constant_complex2, .-pop_seg3_mv_constant_complex2

    
.globl pop_seg4_mv_plain
         .type   pop_seg4_mv_plain, @function
pop_seg4_mv_plain:
      push %bx;pop %gs
  mov $0x0,%eax

    ret
         .size   pop_seg4_mv_plain, .-pop_seg4_mv_plain

    
.globl pop_seg4_mv_allregs
         .type   pop_seg4_mv_allregs, @function
pop_seg4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %bx;pop %gs
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg4_mv_allregs, .-pop_seg4_mv_allregs

    
.globl pop_seg4_mv_constant_simple
         .type   pop_seg4_mv_constant_simple, @function
pop_seg4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %bx;pop %gs
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg4_mv_constant_simple, .-pop_seg4_mv_constant_simple

    
.globl pop_seg4_mv_constant_complex1
         .type   pop_seg4_mv_constant_complex1, @function
pop_seg4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %bx;pop %gs
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg4_mv_constant_complex1, .-pop_seg4_mv_constant_complex1

    
.globl pop_seg4_mv_constant_complex2
         .type   pop_seg4_mv_constant_complex2, @function
pop_seg4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %bx;pop %gs
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg4_mv_constant_complex2, .-pop_seg4_mv_constant_complex2

    
.globl pop_seg5_mv_plain
         .type   pop_seg5_mv_plain, @function
pop_seg5_mv_plain:
      push %bx;pop %ss
  mov $0x0,%eax

    ret
         .size   pop_seg5_mv_plain, .-pop_seg5_mv_plain

    
.globl pop_seg5_mv_allregs
         .type   pop_seg5_mv_allregs, @function
pop_seg5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %bx;pop %ss
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg5_mv_allregs, .-pop_seg5_mv_allregs

    
.globl pop_seg5_mv_constant_simple
         .type   pop_seg5_mv_constant_simple, @function
pop_seg5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %bx;pop %ss
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg5_mv_constant_simple, .-pop_seg5_mv_constant_simple

    
.globl pop_seg5_mv_constant_complex1
         .type   pop_seg5_mv_constant_complex1, @function
pop_seg5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %bx;pop %ss
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg5_mv_constant_complex1, .-pop_seg5_mv_constant_complex1

    
.globl pop_seg5_mv_constant_complex2
         .type   pop_seg5_mv_constant_complex2, @function
pop_seg5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %bx;pop %ss
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pop_seg5_mv_constant_complex2, .-pop_seg5_mv_constant_complex2

    
.globl popa1_plain
         .type   popa1_plain, @function
popa1_plain:
      pushl $1;pushl $2;pushl $3;pushl $4;pushl $5;pushl $6;pushl $7;pushl $8;popa
  mov $0x0,%eax

    ret
         .size   popa1_plain, .-popa1_plain

    
.globl popa1_allregs
         .type   popa1_allregs, @function
popa1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  pushl $1;pushl $2;pushl $3;pushl $4;pushl $5;pushl $6;pushl $7;pushl $8;popa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popa1_allregs, .-popa1_allregs

    
.globl popa1_constant_simple
         .type   popa1_constant_simple, @function
popa1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  pushl $1;pushl $2;pushl $3;pushl $4;pushl $5;pushl $6;pushl $7;pushl $8;popa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popa1_constant_simple, .-popa1_constant_simple

    
.globl popa1_constant_complex1
         .type   popa1_constant_complex1, @function
popa1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  pushl $1;pushl $2;pushl $3;pushl $4;pushl $5;pushl $6;pushl $7;pushl $8;popa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popa1_constant_complex1, .-popa1_constant_complex1

    
.globl popa1_constant_complex2
         .type   popa1_constant_complex2, @function
popa1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  pushl $1;pushl $2;pushl $3;pushl $4;pushl $5;pushl $6;pushl $7;pushl $8;popa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popa1_constant_complex2, .-popa1_constant_complex2

    
.globl popa2_mv_plain
         .type   popa2_mv_plain, @function
popa2_mv_plain:
      pushw $1;pushw $2;pushw $3;pushw $4;pushw $5;pushw $6;pushw $7;pushw $8;popaw
  mov $0x0,%eax

    ret
         .size   popa2_mv_plain, .-popa2_mv_plain

    
.globl popa2_mv_allregs
         .type   popa2_mv_allregs, @function
popa2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  pushw $1;pushw $2;pushw $3;pushw $4;pushw $5;pushw $6;pushw $7;pushw $8;popaw
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popa2_mv_allregs, .-popa2_mv_allregs

    
.globl popa2_mv_constant_simple
         .type   popa2_mv_constant_simple, @function
popa2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  pushw $1;pushw $2;pushw $3;pushw $4;pushw $5;pushw $6;pushw $7;pushw $8;popaw
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popa2_mv_constant_simple, .-popa2_mv_constant_simple

    
.globl popa2_mv_constant_complex1
         .type   popa2_mv_constant_complex1, @function
popa2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  pushw $1;pushw $2;pushw $3;pushw $4;pushw $5;pushw $6;pushw $7;pushw $8;popaw
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popa2_mv_constant_complex1, .-popa2_mv_constant_complex1

    
.globl popa2_mv_constant_complex2
         .type   popa2_mv_constant_complex2, @function
popa2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  pushw $1;pushw $2;pushw $3;pushw $4;pushw $5;pushw $6;pushw $7;pushw $8;popaw
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popa2_mv_constant_complex2, .-popa2_mv_constant_complex2

    
.globl popf1_plain
         .type   popf1_plain, @function
popf1_plain:
      pushl $0;popf
  mov $0x0,%eax

    ret
         .size   popf1_plain, .-popf1_plain

    
.globl popf1_allregs
         .type   popf1_allregs, @function
popf1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  pushl $0;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popf1_allregs, .-popf1_allregs

    
.globl popf1_constant_simple
         .type   popf1_constant_simple, @function
popf1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  pushl $0;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popf1_constant_simple, .-popf1_constant_simple

    
.globl popf1_constant_complex1
         .type   popf1_constant_complex1, @function
popf1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  pushl $0;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popf1_constant_complex1, .-popf1_constant_complex1

    
.globl popf1_constant_complex2
         .type   popf1_constant_complex2, @function
popf1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  pushl $0;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popf1_constant_complex2, .-popf1_constant_complex2

    
.globl popf2_plain
         .type   popf2_plain, @function
popf2_plain:
      pushw $0;popfw
  mov $0x0,%eax

    ret
         .size   popf2_plain, .-popf2_plain

    
.globl popf2_allregs
         .type   popf2_allregs, @function
popf2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  pushw $0;popfw
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popf2_allregs, .-popf2_allregs

    
.globl popf2_constant_simple
         .type   popf2_constant_simple, @function
popf2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  pushw $0;popfw
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popf2_constant_simple, .-popf2_constant_simple

    
.globl popf2_constant_complex1
         .type   popf2_constant_complex1, @function
popf2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  pushw $0;popfw
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popf2_constant_complex1, .-popf2_constant_complex1

    
.globl popf2_constant_complex2
         .type   popf2_constant_complex2, @function
popf2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  pushw $0;popfw
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   popf2_constant_complex2, .-popf2_constant_complex2

    
.globl push1_mv_plain
         .type   push1_mv_plain, @function
push1_mv_plain:
      pushw (%eax);add $2,%esp
  mov $0x0,%eax

    ret
         .size   push1_mv_plain, .-push1_mv_plain

    
.globl push1_mv_allregs
         .type   push1_mv_allregs, @function
push1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  pushw (%eax);add $2,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push1_mv_allregs, .-push1_mv_allregs

    
.globl push1_mv_constant_simple
         .type   push1_mv_constant_simple, @function
push1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  pushw (%eax);add $2,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push1_mv_constant_simple, .-push1_mv_constant_simple

    
.globl push1_mv_constant_complex1
         .type   push1_mv_constant_complex1, @function
push1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  pushw (%eax);add $2,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push1_mv_constant_complex1, .-push1_mv_constant_complex1

    
.globl push1_mv_constant_complex2
         .type   push1_mv_constant_complex2, @function
push1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  pushw (%eax);add $2,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push1_mv_constant_complex2, .-push1_mv_constant_complex2

    
.globl push2_mv_plain
         .type   push2_mv_plain, @function
push2_mv_plain:
      push (%eax);add $4,%esp
  mov $0x0,%eax

    ret
         .size   push2_mv_plain, .-push2_mv_plain

    
.globl push2_mv_allregs
         .type   push2_mv_allregs, @function
push2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push (%eax);add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push2_mv_allregs, .-push2_mv_allregs

    
.globl push2_mv_constant_simple
         .type   push2_mv_constant_simple, @function
push2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push (%eax);add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push2_mv_constant_simple, .-push2_mv_constant_simple

    
.globl push2_mv_constant_complex1
         .type   push2_mv_constant_complex1, @function
push2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push (%eax);add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push2_mv_constant_complex1, .-push2_mv_constant_complex1

    
.globl push2_mv_constant_complex2
         .type   push2_mv_constant_complex2, @function
push2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push (%eax);add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push2_mv_constant_complex2, .-push2_mv_constant_complex2

    
.globl push3_mv_plain
         .type   push3_mv_plain, @function
push3_mv_plain:
      push %ax;add $2,%esp
  mov $0x0,%eax

    ret
         .size   push3_mv_plain, .-push3_mv_plain

    
.globl push3_mv_allregs
         .type   push3_mv_allregs, @function
push3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %ax;add $2,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push3_mv_allregs, .-push3_mv_allregs

    
.globl push3_mv_constant_simple
         .type   push3_mv_constant_simple, @function
push3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %ax;add $2,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push3_mv_constant_simple, .-push3_mv_constant_simple

    
.globl push3_mv_constant_complex1
         .type   push3_mv_constant_complex1, @function
push3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %ax;add $2,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push3_mv_constant_complex1, .-push3_mv_constant_complex1

    
.globl push3_mv_constant_complex2
         .type   push3_mv_constant_complex2, @function
push3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %ax;add $2,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push3_mv_constant_complex2, .-push3_mv_constant_complex2

    
.globl push4_mv_plain
         .type   push4_mv_plain, @function
push4_mv_plain:
      push %eax;add $4,%esp
  mov $0x0,%eax

    ret
         .size   push4_mv_plain, .-push4_mv_plain

    
.globl push4_mv_allregs
         .type   push4_mv_allregs, @function
push4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %eax;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push4_mv_allregs, .-push4_mv_allregs

    
.globl push4_mv_constant_simple
         .type   push4_mv_constant_simple, @function
push4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %eax;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push4_mv_constant_simple, .-push4_mv_constant_simple

    
.globl push4_mv_constant_complex1
         .type   push4_mv_constant_complex1, @function
push4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %eax;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push4_mv_constant_complex1, .-push4_mv_constant_complex1

    
.globl push4_mv_constant_complex2
         .type   push4_mv_constant_complex2, @function
push4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %eax;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push4_mv_constant_complex2, .-push4_mv_constant_complex2

    
.globl push4_effect_plain
         .type   push4_effect_plain, @function
push4_effect_plain:
      push %eax;mov (%esp),%ebx;pop %ecx
  mov $0x0,%eax

    ret
         .size   push4_effect_plain, .-push4_effect_plain

    
.globl push4_effect_allregs
         .type   push4_effect_allregs, @function
push4_effect_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %eax;mov (%esp),%ebx;pop %ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push4_effect_allregs, .-push4_effect_allregs

    
.globl push4_effect_constant_simple
         .type   push4_effect_constant_simple, @function
push4_effect_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %eax;mov (%esp),%ebx;pop %ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push4_effect_constant_simple, .-push4_effect_constant_simple

    
.globl push4_effect_constant_complex1
         .type   push4_effect_constant_complex1, @function
push4_effect_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %eax;mov (%esp),%ebx;pop %ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push4_effect_constant_complex1, .-push4_effect_constant_complex1

    
.globl push4_effect_constant_complex2
         .type   push4_effect_constant_complex2, @function
push4_effect_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %eax;mov (%esp),%ebx;pop %ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push4_effect_constant_complex2, .-push4_effect_constant_complex2

    
.globl push5_mv_plain
         .type   push5_mv_plain, @function
push5_mv_plain:
      push $0x11;add $4,%esp
  mov $0x0,%eax

    ret
         .size   push5_mv_plain, .-push5_mv_plain

    
.globl push5_mv_allregs
         .type   push5_mv_allregs, @function
push5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push $0x11;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push5_mv_allregs, .-push5_mv_allregs

    
.globl push5_mv_constant_simple
         .type   push5_mv_constant_simple, @function
push5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push $0x11;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push5_mv_constant_simple, .-push5_mv_constant_simple

    
.globl push5_mv_constant_complex1
         .type   push5_mv_constant_complex1, @function
push5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push $0x11;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push5_mv_constant_complex1, .-push5_mv_constant_complex1

    
.globl push5_mv_constant_complex2
         .type   push5_mv_constant_complex2, @function
push5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push $0x11;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push5_mv_constant_complex2, .-push5_mv_constant_complex2

    
.globl push6_mv_plain
         .type   push6_mv_plain, @function
push6_mv_plain:
      push $0x1122;add $4,%esp
  mov $0x0,%eax

    ret
         .size   push6_mv_plain, .-push6_mv_plain

    
.globl push6_mv_allregs
         .type   push6_mv_allregs, @function
push6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push $0x1122;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push6_mv_allregs, .-push6_mv_allregs

    
.globl push6_mv_constant_simple
         .type   push6_mv_constant_simple, @function
push6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push $0x1122;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push6_mv_constant_simple, .-push6_mv_constant_simple

    
.globl push6_mv_constant_complex1
         .type   push6_mv_constant_complex1, @function
push6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push $0x1122;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push6_mv_constant_complex1, .-push6_mv_constant_complex1

    
.globl push6_mv_constant_complex2
         .type   push6_mv_constant_complex2, @function
push6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push $0x1122;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push6_mv_constant_complex2, .-push6_mv_constant_complex2

    
.globl push7_mv_plain
         .type   push7_mv_plain, @function
push7_mv_plain:
      push $0x11223344;add $4,%esp
  mov $0x0,%eax

    ret
         .size   push7_mv_plain, .-push7_mv_plain

    
.globl push7_mv_allregs
         .type   push7_mv_allregs, @function
push7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push $0x11223344;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push7_mv_allregs, .-push7_mv_allregs

    
.globl push7_mv_constant_simple
         .type   push7_mv_constant_simple, @function
push7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push $0x11223344;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push7_mv_constant_simple, .-push7_mv_constant_simple

    
.globl push7_mv_constant_complex1
         .type   push7_mv_constant_complex1, @function
push7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push $0x11223344;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push7_mv_constant_complex1, .-push7_mv_constant_complex1

    
.globl push7_mv_constant_complex2
         .type   push7_mv_constant_complex2, @function
push7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push $0x11223344;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push7_mv_constant_complex2, .-push7_mv_constant_complex2

    
.globl push_seg1_mv_plain
         .type   push_seg1_mv_plain, @function
push_seg1_mv_plain:
      push %ds;add $4,%esp
  mov $0x0,%eax

    ret
         .size   push_seg1_mv_plain, .-push_seg1_mv_plain

    
.globl push_seg1_mv_allregs
         .type   push_seg1_mv_allregs, @function
push_seg1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %ds;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg1_mv_allregs, .-push_seg1_mv_allregs

    
.globl push_seg1_mv_constant_simple
         .type   push_seg1_mv_constant_simple, @function
push_seg1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %ds;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg1_mv_constant_simple, .-push_seg1_mv_constant_simple

    
.globl push_seg1_mv_constant_complex1
         .type   push_seg1_mv_constant_complex1, @function
push_seg1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %ds;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg1_mv_constant_complex1, .-push_seg1_mv_constant_complex1

    
.globl push_seg1_mv_constant_complex2
         .type   push_seg1_mv_constant_complex2, @function
push_seg1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %ds;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg1_mv_constant_complex2, .-push_seg1_mv_constant_complex2

    
.globl push_seg2_mv_plain
         .type   push_seg2_mv_plain, @function
push_seg2_mv_plain:
      push %es;add $4,%esp
  mov $0x0,%eax

    ret
         .size   push_seg2_mv_plain, .-push_seg2_mv_plain

    
.globl push_seg2_mv_allregs
         .type   push_seg2_mv_allregs, @function
push_seg2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %es;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg2_mv_allregs, .-push_seg2_mv_allregs

    
.globl push_seg2_mv_constant_simple
         .type   push_seg2_mv_constant_simple, @function
push_seg2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %es;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg2_mv_constant_simple, .-push_seg2_mv_constant_simple

    
.globl push_seg2_mv_constant_complex1
         .type   push_seg2_mv_constant_complex1, @function
push_seg2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %es;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg2_mv_constant_complex1, .-push_seg2_mv_constant_complex1

    
.globl push_seg2_mv_constant_complex2
         .type   push_seg2_mv_constant_complex2, @function
push_seg2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %es;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg2_mv_constant_complex2, .-push_seg2_mv_constant_complex2

    
.globl push_seg3_mv_plain
         .type   push_seg3_mv_plain, @function
push_seg3_mv_plain:
      push %fs;add $4,%esp
  mov $0x0,%eax

    ret
         .size   push_seg3_mv_plain, .-push_seg3_mv_plain

    
.globl push_seg3_mv_allregs
         .type   push_seg3_mv_allregs, @function
push_seg3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %fs;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg3_mv_allregs, .-push_seg3_mv_allregs

    
.globl push_seg3_mv_constant_simple
         .type   push_seg3_mv_constant_simple, @function
push_seg3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %fs;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg3_mv_constant_simple, .-push_seg3_mv_constant_simple

    
.globl push_seg3_mv_constant_complex1
         .type   push_seg3_mv_constant_complex1, @function
push_seg3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %fs;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg3_mv_constant_complex1, .-push_seg3_mv_constant_complex1

    
.globl push_seg3_mv_constant_complex2
         .type   push_seg3_mv_constant_complex2, @function
push_seg3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %fs;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg3_mv_constant_complex2, .-push_seg3_mv_constant_complex2

    
.globl push_seg4_mv_plain
         .type   push_seg4_mv_plain, @function
push_seg4_mv_plain:
      push %gs;add $4,%esp
  mov $0x0,%eax

    ret
         .size   push_seg4_mv_plain, .-push_seg4_mv_plain

    
.globl push_seg4_mv_allregs
         .type   push_seg4_mv_allregs, @function
push_seg4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %gs;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg4_mv_allregs, .-push_seg4_mv_allregs

    
.globl push_seg4_mv_constant_simple
         .type   push_seg4_mv_constant_simple, @function
push_seg4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %gs;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg4_mv_constant_simple, .-push_seg4_mv_constant_simple

    
.globl push_seg4_mv_constant_complex1
         .type   push_seg4_mv_constant_complex1, @function
push_seg4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %gs;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg4_mv_constant_complex1, .-push_seg4_mv_constant_complex1

    
.globl push_seg4_mv_constant_complex2
         .type   push_seg4_mv_constant_complex2, @function
push_seg4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %gs;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg4_mv_constant_complex2, .-push_seg4_mv_constant_complex2

    
.globl push_seg5_mv_plain
         .type   push_seg5_mv_plain, @function
push_seg5_mv_plain:
      push %ss;add $4,%esp
  mov $0x0,%eax

    ret
         .size   push_seg5_mv_plain, .-push_seg5_mv_plain

    
.globl push_seg5_mv_allregs
         .type   push_seg5_mv_allregs, @function
push_seg5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  push %ss;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg5_mv_allregs, .-push_seg5_mv_allregs

    
.globl push_seg5_mv_constant_simple
         .type   push_seg5_mv_constant_simple, @function
push_seg5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  push %ss;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg5_mv_constant_simple, .-push_seg5_mv_constant_simple

    
.globl push_seg5_mv_constant_complex1
         .type   push_seg5_mv_constant_complex1, @function
push_seg5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  push %ss;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg5_mv_constant_complex1, .-push_seg5_mv_constant_complex1

    
.globl push_seg5_mv_constant_complex2
         .type   push_seg5_mv_constant_complex2, @function
push_seg5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  push %ss;add $4,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   push_seg5_mv_constant_complex2, .-push_seg5_mv_constant_complex2

    
.globl pusha1_plain
         .type   pusha1_plain, @function
pusha1_plain:
      mov %esp,(l_esp);pusha;mov (l_esp),%esp
  mov $0x0,%eax

    ret
         .size   pusha1_plain, .-pusha1_plain

    
.globl pusha1_allregs
         .type   pusha1_allregs, @function
pusha1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov %esp,(l_esp);pusha;mov (l_esp),%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pusha1_allregs, .-pusha1_allregs

    
.globl pusha1_constant_simple
         .type   pusha1_constant_simple, @function
pusha1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov %esp,(l_esp);pusha;mov (l_esp),%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pusha1_constant_simple, .-pusha1_constant_simple

    
.globl pusha1_constant_complex1
         .type   pusha1_constant_complex1, @function
pusha1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov %esp,(l_esp);pusha;mov (l_esp),%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pusha1_constant_complex1, .-pusha1_constant_complex1

    
.globl pusha1_constant_complex2
         .type   pusha1_constant_complex2, @function
pusha1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov %esp,(l_esp);pusha;mov (l_esp),%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pusha1_constant_complex2, .-pusha1_constant_complex2

    
.globl pusha2_mv_plain
         .type   pusha2_mv_plain, @function
pusha2_mv_plain:
      pushaw;add $16,%esp
  mov $0x0,%eax

    ret
         .size   pusha2_mv_plain, .-pusha2_mv_plain

    
.globl pusha2_mv_allregs
         .type   pusha2_mv_allregs, @function
pusha2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  pushaw;add $16,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pusha2_mv_allregs, .-pusha2_mv_allregs

    
.globl pusha2_mv_constant_simple
         .type   pusha2_mv_constant_simple, @function
pusha2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  pushaw;add $16,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pusha2_mv_constant_simple, .-pusha2_mv_constant_simple

    
.globl pusha2_mv_constant_complex1
         .type   pusha2_mv_constant_complex1, @function
pusha2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  pushaw;add $16,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pusha2_mv_constant_complex1, .-pusha2_mv_constant_complex1

    
.globl pusha2_mv_constant_complex2
         .type   pusha2_mv_constant_complex2, @function
pusha2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  pushaw;add $16,%esp
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pusha2_mv_constant_complex2, .-pusha2_mv_constant_complex2

    
.globl pushf1_plain
         .type   pushf1_plain, @function
pushf1_plain:
      pushf;mov (%esp),%ebx;pop %eax
  mov $0x0,%eax

    ret
         .size   pushf1_plain, .-pushf1_plain

    
.globl pushf1_allregs
         .type   pushf1_allregs, @function
pushf1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  pushf;mov (%esp),%ebx;pop %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pushf1_allregs, .-pushf1_allregs

    
.globl pushf1_constant_simple
         .type   pushf1_constant_simple, @function
pushf1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  pushf;mov (%esp),%ebx;pop %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pushf1_constant_simple, .-pushf1_constant_simple

    
.globl pushf1_constant_complex1
         .type   pushf1_constant_complex1, @function
pushf1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  pushf;mov (%esp),%ebx;pop %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pushf1_constant_complex1, .-pushf1_constant_complex1

    
.globl pushf1_constant_complex2
         .type   pushf1_constant_complex2, @function
pushf1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  pushf;mov (%esp),%ebx;pop %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pushf1_constant_complex2, .-pushf1_constant_complex2

    
.globl pushf2_plain
         .type   pushf2_plain, @function
pushf2_plain:
      pushfw;mov (%esp),%bx;pop %ax
  mov $0x0,%eax

    ret
         .size   pushf2_plain, .-pushf2_plain

    
.globl pushf2_allregs
         .type   pushf2_allregs, @function
pushf2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  pushfw;mov (%esp),%bx;pop %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pushf2_allregs, .-pushf2_allregs

    
.globl pushf2_constant_simple
         .type   pushf2_constant_simple, @function
pushf2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  pushfw;mov (%esp),%bx;pop %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pushf2_constant_simple, .-pushf2_constant_simple

    
.globl pushf2_constant_complex1
         .type   pushf2_constant_complex1, @function
pushf2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  pushfw;mov (%esp),%bx;pop %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pushf2_constant_complex1, .-pushf2_constant_complex1

    
.globl pushf2_constant_complex2
         .type   pushf2_constant_complex2, @function
pushf2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  pushfw;mov (%esp),%bx;pop %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   pushf2_constant_complex2, .-pushf2_constant_complex2

    
.globl rotate_once_rol_b_mv_plain
         .type   rotate_once_rol_b_mv_plain, @function
rotate_once_rol_b_mv_plain:
      .byte 0xd0,0xc0
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_b_mv_plain, .-rotate_once_rol_b_mv_plain

    
.globl rotate_once_rol_b_mv_allregs
         .type   rotate_once_rol_b_mv_allregs, @function
rotate_once_rol_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd0,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_b_mv_allregs, .-rotate_once_rol_b_mv_allregs

    
.globl rotate_once_rol_b_mv_constant_simple
         .type   rotate_once_rol_b_mv_constant_simple, @function
rotate_once_rol_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd0,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_b_mv_constant_simple, .-rotate_once_rol_b_mv_constant_simple

    
.globl rotate_once_rol_b_mv_constant_complex1
         .type   rotate_once_rol_b_mv_constant_complex1, @function
rotate_once_rol_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd0,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_b_mv_constant_complex1, .-rotate_once_rol_b_mv_constant_complex1

    
.globl rotate_once_rol_b_mv_constant_complex2
         .type   rotate_once_rol_b_mv_constant_complex2, @function
rotate_once_rol_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd0,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_b_mv_constant_complex2, .-rotate_once_rol_b_mv_constant_complex2

    
.globl rotate_once_rol_w_mv_plain
         .type   rotate_once_rol_w_mv_plain, @function
rotate_once_rol_w_mv_plain:
      .byte 0x66,0xd1,0xc0
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_w_mv_plain, .-rotate_once_rol_w_mv_plain

    
.globl rotate_once_rol_w_mv_allregs
         .type   rotate_once_rol_w_mv_allregs, @function
rotate_once_rol_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_w_mv_allregs, .-rotate_once_rol_w_mv_allregs

    
.globl rotate_once_rol_w_mv_constant_simple
         .type   rotate_once_rol_w_mv_constant_simple, @function
rotate_once_rol_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_w_mv_constant_simple, .-rotate_once_rol_w_mv_constant_simple

    
.globl rotate_once_rol_w_mv_constant_complex1
         .type   rotate_once_rol_w_mv_constant_complex1, @function
rotate_once_rol_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_w_mv_constant_complex1, .-rotate_once_rol_w_mv_constant_complex1

    
.globl rotate_once_rol_w_mv_constant_complex2
         .type   rotate_once_rol_w_mv_constant_complex2, @function
rotate_once_rol_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_w_mv_constant_complex2, .-rotate_once_rol_w_mv_constant_complex2

    
.globl rotate_once_rol_l_plain
         .type   rotate_once_rol_l_plain, @function
rotate_once_rol_l_plain:
      .byte 0xd1,0xc0
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_l_plain, .-rotate_once_rol_l_plain

    
.globl rotate_once_rol_l_allregs
         .type   rotate_once_rol_l_allregs, @function
rotate_once_rol_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd1,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_l_allregs, .-rotate_once_rol_l_allregs

    
.globl rotate_once_rol_l_constant_simple
         .type   rotate_once_rol_l_constant_simple, @function
rotate_once_rol_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd1,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_l_constant_simple, .-rotate_once_rol_l_constant_simple

    
.globl rotate_once_rol_l_constant_complex1
         .type   rotate_once_rol_l_constant_complex1, @function
rotate_once_rol_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd1,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_l_constant_complex1, .-rotate_once_rol_l_constant_complex1

    
.globl rotate_once_rol_l_constant_complex2
         .type   rotate_once_rol_l_constant_complex2, @function
rotate_once_rol_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd1,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rol_l_constant_complex2, .-rotate_once_rol_l_constant_complex2

    
.globl rotate_once_ror_b_mv_plain
         .type   rotate_once_ror_b_mv_plain, @function
rotate_once_ror_b_mv_plain:
      .byte 0xd0,0xc8
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_b_mv_plain, .-rotate_once_ror_b_mv_plain

    
.globl rotate_once_ror_b_mv_allregs
         .type   rotate_once_ror_b_mv_allregs, @function
rotate_once_ror_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd0,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_b_mv_allregs, .-rotate_once_ror_b_mv_allregs

    
.globl rotate_once_ror_b_mv_constant_simple
         .type   rotate_once_ror_b_mv_constant_simple, @function
rotate_once_ror_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd0,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_b_mv_constant_simple, .-rotate_once_ror_b_mv_constant_simple

    
.globl rotate_once_ror_b_mv_constant_complex1
         .type   rotate_once_ror_b_mv_constant_complex1, @function
rotate_once_ror_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd0,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_b_mv_constant_complex1, .-rotate_once_ror_b_mv_constant_complex1

    
.globl rotate_once_ror_b_mv_constant_complex2
         .type   rotate_once_ror_b_mv_constant_complex2, @function
rotate_once_ror_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd0,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_b_mv_constant_complex2, .-rotate_once_ror_b_mv_constant_complex2

    
.globl rotate_once_ror_w_mv_plain
         .type   rotate_once_ror_w_mv_plain, @function
rotate_once_ror_w_mv_plain:
      .byte 0x66,0xd1,0xc8
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_w_mv_plain, .-rotate_once_ror_w_mv_plain

    
.globl rotate_once_ror_w_mv_allregs
         .type   rotate_once_ror_w_mv_allregs, @function
rotate_once_ror_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_w_mv_allregs, .-rotate_once_ror_w_mv_allregs

    
.globl rotate_once_ror_w_mv_constant_simple
         .type   rotate_once_ror_w_mv_constant_simple, @function
rotate_once_ror_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_w_mv_constant_simple, .-rotate_once_ror_w_mv_constant_simple

    
.globl rotate_once_ror_w_mv_constant_complex1
         .type   rotate_once_ror_w_mv_constant_complex1, @function
rotate_once_ror_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_w_mv_constant_complex1, .-rotate_once_ror_w_mv_constant_complex1

    
.globl rotate_once_ror_w_mv_constant_complex2
         .type   rotate_once_ror_w_mv_constant_complex2, @function
rotate_once_ror_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_w_mv_constant_complex2, .-rotate_once_ror_w_mv_constant_complex2

    
.globl rotate_once_ror_l_plain
         .type   rotate_once_ror_l_plain, @function
rotate_once_ror_l_plain:
      .byte 0xd1,0xc8
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_l_plain, .-rotate_once_ror_l_plain

    
.globl rotate_once_ror_l_allregs
         .type   rotate_once_ror_l_allregs, @function
rotate_once_ror_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd1,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_l_allregs, .-rotate_once_ror_l_allregs

    
.globl rotate_once_ror_l_constant_simple
         .type   rotate_once_ror_l_constant_simple, @function
rotate_once_ror_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd1,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_l_constant_simple, .-rotate_once_ror_l_constant_simple

    
.globl rotate_once_ror_l_constant_complex1
         .type   rotate_once_ror_l_constant_complex1, @function
rotate_once_ror_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd1,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_l_constant_complex1, .-rotate_once_ror_l_constant_complex1

    
.globl rotate_once_ror_l_constant_complex2
         .type   rotate_once_ror_l_constant_complex2, @function
rotate_once_ror_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd1,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_ror_l_constant_complex2, .-rotate_once_ror_l_constant_complex2

    
.globl rotate_once_rcl_b_mv_plain
         .type   rotate_once_rcl_b_mv_plain, @function
rotate_once_rcl_b_mv_plain:
      .byte 0xd0,0xd0
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_b_mv_plain, .-rotate_once_rcl_b_mv_plain

    
.globl rotate_once_rcl_b_mv_allregs
         .type   rotate_once_rcl_b_mv_allregs, @function
rotate_once_rcl_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd0,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_b_mv_allregs, .-rotate_once_rcl_b_mv_allregs

    
.globl rotate_once_rcl_b_mv_constant_simple
         .type   rotate_once_rcl_b_mv_constant_simple, @function
rotate_once_rcl_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd0,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_b_mv_constant_simple, .-rotate_once_rcl_b_mv_constant_simple

    
.globl rotate_once_rcl_b_mv_constant_complex1
         .type   rotate_once_rcl_b_mv_constant_complex1, @function
rotate_once_rcl_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd0,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_b_mv_constant_complex1, .-rotate_once_rcl_b_mv_constant_complex1

    
.globl rotate_once_rcl_b_mv_constant_complex2
         .type   rotate_once_rcl_b_mv_constant_complex2, @function
rotate_once_rcl_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd0,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_b_mv_constant_complex2, .-rotate_once_rcl_b_mv_constant_complex2

    
.globl rotate_once_rcl_w_mv_plain
         .type   rotate_once_rcl_w_mv_plain, @function
rotate_once_rcl_w_mv_plain:
      .byte 0x66,0xd1,0xd0
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_w_mv_plain, .-rotate_once_rcl_w_mv_plain

    
.globl rotate_once_rcl_w_mv_allregs
         .type   rotate_once_rcl_w_mv_allregs, @function
rotate_once_rcl_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_w_mv_allregs, .-rotate_once_rcl_w_mv_allregs

    
.globl rotate_once_rcl_w_mv_constant_simple
         .type   rotate_once_rcl_w_mv_constant_simple, @function
rotate_once_rcl_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_w_mv_constant_simple, .-rotate_once_rcl_w_mv_constant_simple

    
.globl rotate_once_rcl_w_mv_constant_complex1
         .type   rotate_once_rcl_w_mv_constant_complex1, @function
rotate_once_rcl_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_w_mv_constant_complex1, .-rotate_once_rcl_w_mv_constant_complex1

    
.globl rotate_once_rcl_w_mv_constant_complex2
         .type   rotate_once_rcl_w_mv_constant_complex2, @function
rotate_once_rcl_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_w_mv_constant_complex2, .-rotate_once_rcl_w_mv_constant_complex2

    
.globl rotate_once_rcl_l_plain
         .type   rotate_once_rcl_l_plain, @function
rotate_once_rcl_l_plain:
      .byte 0xd1,0xd0
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_l_plain, .-rotate_once_rcl_l_plain

    
.globl rotate_once_rcl_l_allregs
         .type   rotate_once_rcl_l_allregs, @function
rotate_once_rcl_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd1,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_l_allregs, .-rotate_once_rcl_l_allregs

    
.globl rotate_once_rcl_l_constant_simple
         .type   rotate_once_rcl_l_constant_simple, @function
rotate_once_rcl_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd1,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_l_constant_simple, .-rotate_once_rcl_l_constant_simple

    
.globl rotate_once_rcl_l_constant_complex1
         .type   rotate_once_rcl_l_constant_complex1, @function
rotate_once_rcl_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd1,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_l_constant_complex1, .-rotate_once_rcl_l_constant_complex1

    
.globl rotate_once_rcl_l_constant_complex2
         .type   rotate_once_rcl_l_constant_complex2, @function
rotate_once_rcl_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd1,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcl_l_constant_complex2, .-rotate_once_rcl_l_constant_complex2

    
.globl rotate_once_rcr_b_mv_plain
         .type   rotate_once_rcr_b_mv_plain, @function
rotate_once_rcr_b_mv_plain:
      .byte 0xd0,0xd8
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_b_mv_plain, .-rotate_once_rcr_b_mv_plain

    
.globl rotate_once_rcr_b_mv_allregs
         .type   rotate_once_rcr_b_mv_allregs, @function
rotate_once_rcr_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd0,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_b_mv_allregs, .-rotate_once_rcr_b_mv_allregs

    
.globl rotate_once_rcr_b_mv_constant_simple
         .type   rotate_once_rcr_b_mv_constant_simple, @function
rotate_once_rcr_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd0,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_b_mv_constant_simple, .-rotate_once_rcr_b_mv_constant_simple

    
.globl rotate_once_rcr_b_mv_constant_complex1
         .type   rotate_once_rcr_b_mv_constant_complex1, @function
rotate_once_rcr_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd0,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_b_mv_constant_complex1, .-rotate_once_rcr_b_mv_constant_complex1

    
.globl rotate_once_rcr_b_mv_constant_complex2
         .type   rotate_once_rcr_b_mv_constant_complex2, @function
rotate_once_rcr_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd0,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_b_mv_constant_complex2, .-rotate_once_rcr_b_mv_constant_complex2

    
.globl rotate_once_rcr_w_mv_plain
         .type   rotate_once_rcr_w_mv_plain, @function
rotate_once_rcr_w_mv_plain:
      .byte 0x66,0xd1,0xd8
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_w_mv_plain, .-rotate_once_rcr_w_mv_plain

    
.globl rotate_once_rcr_w_mv_allregs
         .type   rotate_once_rcr_w_mv_allregs, @function
rotate_once_rcr_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_w_mv_allregs, .-rotate_once_rcr_w_mv_allregs

    
.globl rotate_once_rcr_w_mv_constant_simple
         .type   rotate_once_rcr_w_mv_constant_simple, @function
rotate_once_rcr_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_w_mv_constant_simple, .-rotate_once_rcr_w_mv_constant_simple

    
.globl rotate_once_rcr_w_mv_constant_complex1
         .type   rotate_once_rcr_w_mv_constant_complex1, @function
rotate_once_rcr_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_w_mv_constant_complex1, .-rotate_once_rcr_w_mv_constant_complex1

    
.globl rotate_once_rcr_w_mv_constant_complex2
         .type   rotate_once_rcr_w_mv_constant_complex2, @function
rotate_once_rcr_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_w_mv_constant_complex2, .-rotate_once_rcr_w_mv_constant_complex2

    
.globl rotate_once_rcr_l_plain
         .type   rotate_once_rcr_l_plain, @function
rotate_once_rcr_l_plain:
      .byte 0xd1,0xd8
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_l_plain, .-rotate_once_rcr_l_plain

    
.globl rotate_once_rcr_l_allregs
         .type   rotate_once_rcr_l_allregs, @function
rotate_once_rcr_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd1,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_l_allregs, .-rotate_once_rcr_l_allregs

    
.globl rotate_once_rcr_l_constant_simple
         .type   rotate_once_rcr_l_constant_simple, @function
rotate_once_rcr_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd1,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_l_constant_simple, .-rotate_once_rcr_l_constant_simple

    
.globl rotate_once_rcr_l_constant_complex1
         .type   rotate_once_rcr_l_constant_complex1, @function
rotate_once_rcr_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd1,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_l_constant_complex1, .-rotate_once_rcr_l_constant_complex1

    
.globl rotate_once_rcr_l_constant_complex2
         .type   rotate_once_rcr_l_constant_complex2, @function
rotate_once_rcr_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd1,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_rcr_l_constant_complex2, .-rotate_once_rcr_l_constant_complex2

    
.globl rotate_once_shl_b_mv_plain
         .type   rotate_once_shl_b_mv_plain, @function
rotate_once_shl_b_mv_plain:
      .byte 0xd0,0xe0
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_b_mv_plain, .-rotate_once_shl_b_mv_plain

    
.globl rotate_once_shl_b_mv_allregs
         .type   rotate_once_shl_b_mv_allregs, @function
rotate_once_shl_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd0,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_b_mv_allregs, .-rotate_once_shl_b_mv_allregs

    
.globl rotate_once_shl_b_mv_constant_simple
         .type   rotate_once_shl_b_mv_constant_simple, @function
rotate_once_shl_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd0,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_b_mv_constant_simple, .-rotate_once_shl_b_mv_constant_simple

    
.globl rotate_once_shl_b_mv_constant_complex1
         .type   rotate_once_shl_b_mv_constant_complex1, @function
rotate_once_shl_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd0,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_b_mv_constant_complex1, .-rotate_once_shl_b_mv_constant_complex1

    
.globl rotate_once_shl_b_mv_constant_complex2
         .type   rotate_once_shl_b_mv_constant_complex2, @function
rotate_once_shl_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd0,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_b_mv_constant_complex2, .-rotate_once_shl_b_mv_constant_complex2

    
.globl rotate_once_shl_w_mv_plain
         .type   rotate_once_shl_w_mv_plain, @function
rotate_once_shl_w_mv_plain:
      .byte 0x66,0xd1,0xe0
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_w_mv_plain, .-rotate_once_shl_w_mv_plain

    
.globl rotate_once_shl_w_mv_allregs
         .type   rotate_once_shl_w_mv_allregs, @function
rotate_once_shl_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_w_mv_allregs, .-rotate_once_shl_w_mv_allregs

    
.globl rotate_once_shl_w_mv_constant_simple
         .type   rotate_once_shl_w_mv_constant_simple, @function
rotate_once_shl_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_w_mv_constant_simple, .-rotate_once_shl_w_mv_constant_simple

    
.globl rotate_once_shl_w_mv_constant_complex1
         .type   rotate_once_shl_w_mv_constant_complex1, @function
rotate_once_shl_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_w_mv_constant_complex1, .-rotate_once_shl_w_mv_constant_complex1

    
.globl rotate_once_shl_w_mv_constant_complex2
         .type   rotate_once_shl_w_mv_constant_complex2, @function
rotate_once_shl_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_w_mv_constant_complex2, .-rotate_once_shl_w_mv_constant_complex2

    
.globl rotate_once_shl_l_plain
         .type   rotate_once_shl_l_plain, @function
rotate_once_shl_l_plain:
      .byte 0xd1,0xe0
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_l_plain, .-rotate_once_shl_l_plain

    
.globl rotate_once_shl_l_allregs
         .type   rotate_once_shl_l_allregs, @function
rotate_once_shl_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd1,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_l_allregs, .-rotate_once_shl_l_allregs

    
.globl rotate_once_shl_l_constant_simple
         .type   rotate_once_shl_l_constant_simple, @function
rotate_once_shl_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd1,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_l_constant_simple, .-rotate_once_shl_l_constant_simple

    
.globl rotate_once_shl_l_constant_complex1
         .type   rotate_once_shl_l_constant_complex1, @function
rotate_once_shl_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd1,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_l_constant_complex1, .-rotate_once_shl_l_constant_complex1

    
.globl rotate_once_shl_l_constant_complex2
         .type   rotate_once_shl_l_constant_complex2, @function
rotate_once_shl_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd1,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shl_l_constant_complex2, .-rotate_once_shl_l_constant_complex2

    
.globl rotate_once_shr_b_mv_plain
         .type   rotate_once_shr_b_mv_plain, @function
rotate_once_shr_b_mv_plain:
      .byte 0xd0,0xe8
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_b_mv_plain, .-rotate_once_shr_b_mv_plain

    
.globl rotate_once_shr_b_mv_allregs
         .type   rotate_once_shr_b_mv_allregs, @function
rotate_once_shr_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd0,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_b_mv_allregs, .-rotate_once_shr_b_mv_allregs

    
.globl rotate_once_shr_b_mv_constant_simple
         .type   rotate_once_shr_b_mv_constant_simple, @function
rotate_once_shr_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd0,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_b_mv_constant_simple, .-rotate_once_shr_b_mv_constant_simple

    
.globl rotate_once_shr_b_mv_constant_complex1
         .type   rotate_once_shr_b_mv_constant_complex1, @function
rotate_once_shr_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd0,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_b_mv_constant_complex1, .-rotate_once_shr_b_mv_constant_complex1

    
.globl rotate_once_shr_b_mv_constant_complex2
         .type   rotate_once_shr_b_mv_constant_complex2, @function
rotate_once_shr_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd0,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_b_mv_constant_complex2, .-rotate_once_shr_b_mv_constant_complex2

    
.globl rotate_once_shr_w_mv_plain
         .type   rotate_once_shr_w_mv_plain, @function
rotate_once_shr_w_mv_plain:
      .byte 0x66,0xd1,0xe8
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_w_mv_plain, .-rotate_once_shr_w_mv_plain

    
.globl rotate_once_shr_w_mv_allregs
         .type   rotate_once_shr_w_mv_allregs, @function
rotate_once_shr_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_w_mv_allregs, .-rotate_once_shr_w_mv_allregs

    
.globl rotate_once_shr_w_mv_constant_simple
         .type   rotate_once_shr_w_mv_constant_simple, @function
rotate_once_shr_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_w_mv_constant_simple, .-rotate_once_shr_w_mv_constant_simple

    
.globl rotate_once_shr_w_mv_constant_complex1
         .type   rotate_once_shr_w_mv_constant_complex1, @function
rotate_once_shr_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_w_mv_constant_complex1, .-rotate_once_shr_w_mv_constant_complex1

    
.globl rotate_once_shr_w_mv_constant_complex2
         .type   rotate_once_shr_w_mv_constant_complex2, @function
rotate_once_shr_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_w_mv_constant_complex2, .-rotate_once_shr_w_mv_constant_complex2

    
.globl rotate_once_shr_l_plain
         .type   rotate_once_shr_l_plain, @function
rotate_once_shr_l_plain:
      .byte 0xd1,0xe8
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_l_plain, .-rotate_once_shr_l_plain

    
.globl rotate_once_shr_l_allregs
         .type   rotate_once_shr_l_allregs, @function
rotate_once_shr_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd1,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_l_allregs, .-rotate_once_shr_l_allregs

    
.globl rotate_once_shr_l_constant_simple
         .type   rotate_once_shr_l_constant_simple, @function
rotate_once_shr_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd1,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_l_constant_simple, .-rotate_once_shr_l_constant_simple

    
.globl rotate_once_shr_l_constant_complex1
         .type   rotate_once_shr_l_constant_complex1, @function
rotate_once_shr_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd1,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_l_constant_complex1, .-rotate_once_shr_l_constant_complex1

    
.globl rotate_once_shr_l_constant_complex2
         .type   rotate_once_shr_l_constant_complex2, @function
rotate_once_shr_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd1,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_shr_l_constant_complex2, .-rotate_once_shr_l_constant_complex2

    
.globl rotate_once_sar_b_mv_plain
         .type   rotate_once_sar_b_mv_plain, @function
rotate_once_sar_b_mv_plain:
      .byte 0xd0,0xf8
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_b_mv_plain, .-rotate_once_sar_b_mv_plain

    
.globl rotate_once_sar_b_mv_allregs
         .type   rotate_once_sar_b_mv_allregs, @function
rotate_once_sar_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd0,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_b_mv_allregs, .-rotate_once_sar_b_mv_allregs

    
.globl rotate_once_sar_b_mv_constant_simple
         .type   rotate_once_sar_b_mv_constant_simple, @function
rotate_once_sar_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd0,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_b_mv_constant_simple, .-rotate_once_sar_b_mv_constant_simple

    
.globl rotate_once_sar_b_mv_constant_complex1
         .type   rotate_once_sar_b_mv_constant_complex1, @function
rotate_once_sar_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd0,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_b_mv_constant_complex1, .-rotate_once_sar_b_mv_constant_complex1

    
.globl rotate_once_sar_b_mv_constant_complex2
         .type   rotate_once_sar_b_mv_constant_complex2, @function
rotate_once_sar_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd0,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_b_mv_constant_complex2, .-rotate_once_sar_b_mv_constant_complex2

    
.globl rotate_once_sar_w_mv_plain
         .type   rotate_once_sar_w_mv_plain, @function
rotate_once_sar_w_mv_plain:
      .byte 0x66,0xd1,0xf8
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_w_mv_plain, .-rotate_once_sar_w_mv_plain

    
.globl rotate_once_sar_w_mv_allregs
         .type   rotate_once_sar_w_mv_allregs, @function
rotate_once_sar_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_w_mv_allregs, .-rotate_once_sar_w_mv_allregs

    
.globl rotate_once_sar_w_mv_constant_simple
         .type   rotate_once_sar_w_mv_constant_simple, @function
rotate_once_sar_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_w_mv_constant_simple, .-rotate_once_sar_w_mv_constant_simple

    
.globl rotate_once_sar_w_mv_constant_complex1
         .type   rotate_once_sar_w_mv_constant_complex1, @function
rotate_once_sar_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_w_mv_constant_complex1, .-rotate_once_sar_w_mv_constant_complex1

    
.globl rotate_once_sar_w_mv_constant_complex2
         .type   rotate_once_sar_w_mv_constant_complex2, @function
rotate_once_sar_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd1,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_w_mv_constant_complex2, .-rotate_once_sar_w_mv_constant_complex2

    
.globl rotate_once_sar_l_plain
         .type   rotate_once_sar_l_plain, @function
rotate_once_sar_l_plain:
      .byte 0xd1,0xf8
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_l_plain, .-rotate_once_sar_l_plain

    
.globl rotate_once_sar_l_allregs
         .type   rotate_once_sar_l_allregs, @function
rotate_once_sar_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd1,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_l_allregs, .-rotate_once_sar_l_allregs

    
.globl rotate_once_sar_l_constant_simple
         .type   rotate_once_sar_l_constant_simple, @function
rotate_once_sar_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd1,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_l_constant_simple, .-rotate_once_sar_l_constant_simple

    
.globl rotate_once_sar_l_constant_complex1
         .type   rotate_once_sar_l_constant_complex1, @function
rotate_once_sar_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd1,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_l_constant_complex1, .-rotate_once_sar_l_constant_complex1

    
.globl rotate_once_sar_l_constant_complex2
         .type   rotate_once_sar_l_constant_complex2, @function
rotate_once_sar_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd1,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_once_sar_l_constant_complex2, .-rotate_once_sar_l_constant_complex2

    
.globl rotate_cl_controlled_rol_b_mv_plain
         .type   rotate_cl_controlled_rol_b_mv_plain, @function
rotate_cl_controlled_rol_b_mv_plain:
      .byte 0xd2,0xc0
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_b_mv_plain, .-rotate_cl_controlled_rol_b_mv_plain

    
.globl rotate_cl_controlled_rol_b_mv_allregs
         .type   rotate_cl_controlled_rol_b_mv_allregs, @function
rotate_cl_controlled_rol_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd2,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_b_mv_allregs, .-rotate_cl_controlled_rol_b_mv_allregs

    
.globl rotate_cl_controlled_rol_b_mv_constant_simple
         .type   rotate_cl_controlled_rol_b_mv_constant_simple, @function
rotate_cl_controlled_rol_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd2,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_b_mv_constant_simple, .-rotate_cl_controlled_rol_b_mv_constant_simple

    
.globl rotate_cl_controlled_rol_b_mv_constant_complex1
         .type   rotate_cl_controlled_rol_b_mv_constant_complex1, @function
rotate_cl_controlled_rol_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd2,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_b_mv_constant_complex1, .-rotate_cl_controlled_rol_b_mv_constant_complex1

    
.globl rotate_cl_controlled_rol_b_mv_constant_complex2
         .type   rotate_cl_controlled_rol_b_mv_constant_complex2, @function
rotate_cl_controlled_rol_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd2,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_b_mv_constant_complex2, .-rotate_cl_controlled_rol_b_mv_constant_complex2

    
.globl rotate_cl_controlled_rol_w_mv_plain
         .type   rotate_cl_controlled_rol_w_mv_plain, @function
rotate_cl_controlled_rol_w_mv_plain:
      .byte 0x66,0xd3,0xc0
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_w_mv_plain, .-rotate_cl_controlled_rol_w_mv_plain

    
.globl rotate_cl_controlled_rol_w_mv_allregs
         .type   rotate_cl_controlled_rol_w_mv_allregs, @function
rotate_cl_controlled_rol_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_w_mv_allregs, .-rotate_cl_controlled_rol_w_mv_allregs

    
.globl rotate_cl_controlled_rol_w_mv_constant_simple
         .type   rotate_cl_controlled_rol_w_mv_constant_simple, @function
rotate_cl_controlled_rol_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_w_mv_constant_simple, .-rotate_cl_controlled_rol_w_mv_constant_simple

    
.globl rotate_cl_controlled_rol_w_mv_constant_complex1
         .type   rotate_cl_controlled_rol_w_mv_constant_complex1, @function
rotate_cl_controlled_rol_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_w_mv_constant_complex1, .-rotate_cl_controlled_rol_w_mv_constant_complex1

    
.globl rotate_cl_controlled_rol_w_mv_constant_complex2
         .type   rotate_cl_controlled_rol_w_mv_constant_complex2, @function
rotate_cl_controlled_rol_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_w_mv_constant_complex2, .-rotate_cl_controlled_rol_w_mv_constant_complex2

    
.globl rotate_cl_controlled_rol_l_plain
         .type   rotate_cl_controlled_rol_l_plain, @function
rotate_cl_controlled_rol_l_plain:
      .byte 0xd3,0xc0
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_l_plain, .-rotate_cl_controlled_rol_l_plain

    
.globl rotate_cl_controlled_rol_l_allregs
         .type   rotate_cl_controlled_rol_l_allregs, @function
rotate_cl_controlled_rol_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd3,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_l_allregs, .-rotate_cl_controlled_rol_l_allregs

    
.globl rotate_cl_controlled_rol_l_constant_simple
         .type   rotate_cl_controlled_rol_l_constant_simple, @function
rotate_cl_controlled_rol_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd3,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_l_constant_simple, .-rotate_cl_controlled_rol_l_constant_simple

    
.globl rotate_cl_controlled_rol_l_constant_complex1
         .type   rotate_cl_controlled_rol_l_constant_complex1, @function
rotate_cl_controlled_rol_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd3,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_l_constant_complex1, .-rotate_cl_controlled_rol_l_constant_complex1

    
.globl rotate_cl_controlled_rol_l_constant_complex2
         .type   rotate_cl_controlled_rol_l_constant_complex2, @function
rotate_cl_controlled_rol_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd3,0xc0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rol_l_constant_complex2, .-rotate_cl_controlled_rol_l_constant_complex2

    
.globl rotate_cl_controlled_ror_b_mv_plain
         .type   rotate_cl_controlled_ror_b_mv_plain, @function
rotate_cl_controlled_ror_b_mv_plain:
      .byte 0xd2,0xc8
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_b_mv_plain, .-rotate_cl_controlled_ror_b_mv_plain

    
.globl rotate_cl_controlled_ror_b_mv_allregs
         .type   rotate_cl_controlled_ror_b_mv_allregs, @function
rotate_cl_controlled_ror_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd2,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_b_mv_allregs, .-rotate_cl_controlled_ror_b_mv_allregs

    
.globl rotate_cl_controlled_ror_b_mv_constant_simple
         .type   rotate_cl_controlled_ror_b_mv_constant_simple, @function
rotate_cl_controlled_ror_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd2,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_b_mv_constant_simple, .-rotate_cl_controlled_ror_b_mv_constant_simple

    
.globl rotate_cl_controlled_ror_b_mv_constant_complex1
         .type   rotate_cl_controlled_ror_b_mv_constant_complex1, @function
rotate_cl_controlled_ror_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd2,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_b_mv_constant_complex1, .-rotate_cl_controlled_ror_b_mv_constant_complex1

    
.globl rotate_cl_controlled_ror_b_mv_constant_complex2
         .type   rotate_cl_controlled_ror_b_mv_constant_complex2, @function
rotate_cl_controlled_ror_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd2,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_b_mv_constant_complex2, .-rotate_cl_controlled_ror_b_mv_constant_complex2

    
.globl rotate_cl_controlled_ror_w_mv_plain
         .type   rotate_cl_controlled_ror_w_mv_plain, @function
rotate_cl_controlled_ror_w_mv_plain:
      .byte 0x66,0xd3,0xc8
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_w_mv_plain, .-rotate_cl_controlled_ror_w_mv_plain

    
.globl rotate_cl_controlled_ror_w_mv_allregs
         .type   rotate_cl_controlled_ror_w_mv_allregs, @function
rotate_cl_controlled_ror_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_w_mv_allregs, .-rotate_cl_controlled_ror_w_mv_allregs

    
.globl rotate_cl_controlled_ror_w_mv_constant_simple
         .type   rotate_cl_controlled_ror_w_mv_constant_simple, @function
rotate_cl_controlled_ror_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_w_mv_constant_simple, .-rotate_cl_controlled_ror_w_mv_constant_simple

    
.globl rotate_cl_controlled_ror_w_mv_constant_complex1
         .type   rotate_cl_controlled_ror_w_mv_constant_complex1, @function
rotate_cl_controlled_ror_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_w_mv_constant_complex1, .-rotate_cl_controlled_ror_w_mv_constant_complex1

    
.globl rotate_cl_controlled_ror_w_mv_constant_complex2
         .type   rotate_cl_controlled_ror_w_mv_constant_complex2, @function
rotate_cl_controlled_ror_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_w_mv_constant_complex2, .-rotate_cl_controlled_ror_w_mv_constant_complex2

    
.globl rotate_cl_controlled_ror_l_plain
         .type   rotate_cl_controlled_ror_l_plain, @function
rotate_cl_controlled_ror_l_plain:
      .byte 0xd3,0xc8
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_l_plain, .-rotate_cl_controlled_ror_l_plain

    
.globl rotate_cl_controlled_ror_l_allregs
         .type   rotate_cl_controlled_ror_l_allregs, @function
rotate_cl_controlled_ror_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd3,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_l_allregs, .-rotate_cl_controlled_ror_l_allregs

    
.globl rotate_cl_controlled_ror_l_constant_simple
         .type   rotate_cl_controlled_ror_l_constant_simple, @function
rotate_cl_controlled_ror_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd3,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_l_constant_simple, .-rotate_cl_controlled_ror_l_constant_simple

    
.globl rotate_cl_controlled_ror_l_constant_complex1
         .type   rotate_cl_controlled_ror_l_constant_complex1, @function
rotate_cl_controlled_ror_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd3,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_l_constant_complex1, .-rotate_cl_controlled_ror_l_constant_complex1

    
.globl rotate_cl_controlled_ror_l_constant_complex2
         .type   rotate_cl_controlled_ror_l_constant_complex2, @function
rotate_cl_controlled_ror_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd3,0xc8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_ror_l_constant_complex2, .-rotate_cl_controlled_ror_l_constant_complex2

    
.globl rotate_cl_controlled_rcl_b_mv_plain
         .type   rotate_cl_controlled_rcl_b_mv_plain, @function
rotate_cl_controlled_rcl_b_mv_plain:
      .byte 0xd2,0xd0
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_b_mv_plain, .-rotate_cl_controlled_rcl_b_mv_plain

    
.globl rotate_cl_controlled_rcl_b_mv_allregs
         .type   rotate_cl_controlled_rcl_b_mv_allregs, @function
rotate_cl_controlled_rcl_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd2,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_b_mv_allregs, .-rotate_cl_controlled_rcl_b_mv_allregs

    
.globl rotate_cl_controlled_rcl_b_mv_constant_simple
         .type   rotate_cl_controlled_rcl_b_mv_constant_simple, @function
rotate_cl_controlled_rcl_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd2,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_b_mv_constant_simple, .-rotate_cl_controlled_rcl_b_mv_constant_simple

    
.globl rotate_cl_controlled_rcl_b_mv_constant_complex1
         .type   rotate_cl_controlled_rcl_b_mv_constant_complex1, @function
rotate_cl_controlled_rcl_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd2,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_b_mv_constant_complex1, .-rotate_cl_controlled_rcl_b_mv_constant_complex1

    
.globl rotate_cl_controlled_rcl_b_mv_constant_complex2
         .type   rotate_cl_controlled_rcl_b_mv_constant_complex2, @function
rotate_cl_controlled_rcl_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd2,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_b_mv_constant_complex2, .-rotate_cl_controlled_rcl_b_mv_constant_complex2

    
.globl rotate_cl_controlled_rcl_w_mv_plain
         .type   rotate_cl_controlled_rcl_w_mv_plain, @function
rotate_cl_controlled_rcl_w_mv_plain:
      .byte 0x66,0xd3,0xd0
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_w_mv_plain, .-rotate_cl_controlled_rcl_w_mv_plain

    
.globl rotate_cl_controlled_rcl_w_mv_allregs
         .type   rotate_cl_controlled_rcl_w_mv_allregs, @function
rotate_cl_controlled_rcl_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_w_mv_allregs, .-rotate_cl_controlled_rcl_w_mv_allregs

    
.globl rotate_cl_controlled_rcl_w_mv_constant_simple
         .type   rotate_cl_controlled_rcl_w_mv_constant_simple, @function
rotate_cl_controlled_rcl_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_w_mv_constant_simple, .-rotate_cl_controlled_rcl_w_mv_constant_simple

    
.globl rotate_cl_controlled_rcl_w_mv_constant_complex1
         .type   rotate_cl_controlled_rcl_w_mv_constant_complex1, @function
rotate_cl_controlled_rcl_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_w_mv_constant_complex1, .-rotate_cl_controlled_rcl_w_mv_constant_complex1

    
.globl rotate_cl_controlled_rcl_w_mv_constant_complex2
         .type   rotate_cl_controlled_rcl_w_mv_constant_complex2, @function
rotate_cl_controlled_rcl_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_w_mv_constant_complex2, .-rotate_cl_controlled_rcl_w_mv_constant_complex2

    
.globl rotate_cl_controlled_rcl_l_plain
         .type   rotate_cl_controlled_rcl_l_plain, @function
rotate_cl_controlled_rcl_l_plain:
      .byte 0xd3,0xd0
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_l_plain, .-rotate_cl_controlled_rcl_l_plain

    
.globl rotate_cl_controlled_rcl_l_allregs
         .type   rotate_cl_controlled_rcl_l_allregs, @function
rotate_cl_controlled_rcl_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd3,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_l_allregs, .-rotate_cl_controlled_rcl_l_allregs

    
.globl rotate_cl_controlled_rcl_l_constant_simple
         .type   rotate_cl_controlled_rcl_l_constant_simple, @function
rotate_cl_controlled_rcl_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd3,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_l_constant_simple, .-rotate_cl_controlled_rcl_l_constant_simple

    
.globl rotate_cl_controlled_rcl_l_constant_complex1
         .type   rotate_cl_controlled_rcl_l_constant_complex1, @function
rotate_cl_controlled_rcl_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd3,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_l_constant_complex1, .-rotate_cl_controlled_rcl_l_constant_complex1

    
.globl rotate_cl_controlled_rcl_l_constant_complex2
         .type   rotate_cl_controlled_rcl_l_constant_complex2, @function
rotate_cl_controlled_rcl_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd3,0xd0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcl_l_constant_complex2, .-rotate_cl_controlled_rcl_l_constant_complex2

    
.globl rotate_cl_controlled_rcr_b_mv_plain
         .type   rotate_cl_controlled_rcr_b_mv_plain, @function
rotate_cl_controlled_rcr_b_mv_plain:
      .byte 0xd2,0xd8
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_b_mv_plain, .-rotate_cl_controlled_rcr_b_mv_plain

    
.globl rotate_cl_controlled_rcr_b_mv_allregs
         .type   rotate_cl_controlled_rcr_b_mv_allregs, @function
rotate_cl_controlled_rcr_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd2,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_b_mv_allregs, .-rotate_cl_controlled_rcr_b_mv_allregs

    
.globl rotate_cl_controlled_rcr_b_mv_constant_simple
         .type   rotate_cl_controlled_rcr_b_mv_constant_simple, @function
rotate_cl_controlled_rcr_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd2,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_b_mv_constant_simple, .-rotate_cl_controlled_rcr_b_mv_constant_simple

    
.globl rotate_cl_controlled_rcr_b_mv_constant_complex1
         .type   rotate_cl_controlled_rcr_b_mv_constant_complex1, @function
rotate_cl_controlled_rcr_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd2,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_b_mv_constant_complex1, .-rotate_cl_controlled_rcr_b_mv_constant_complex1

    
.globl rotate_cl_controlled_rcr_b_mv_constant_complex2
         .type   rotate_cl_controlled_rcr_b_mv_constant_complex2, @function
rotate_cl_controlled_rcr_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd2,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_b_mv_constant_complex2, .-rotate_cl_controlled_rcr_b_mv_constant_complex2

    
.globl rotate_cl_controlled_rcr_w_mv_plain
         .type   rotate_cl_controlled_rcr_w_mv_plain, @function
rotate_cl_controlled_rcr_w_mv_plain:
      .byte 0x66,0xd3,0xd8
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_w_mv_plain, .-rotate_cl_controlled_rcr_w_mv_plain

    
.globl rotate_cl_controlled_rcr_w_mv_allregs
         .type   rotate_cl_controlled_rcr_w_mv_allregs, @function
rotate_cl_controlled_rcr_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_w_mv_allregs, .-rotate_cl_controlled_rcr_w_mv_allregs

    
.globl rotate_cl_controlled_rcr_w_mv_constant_simple
         .type   rotate_cl_controlled_rcr_w_mv_constant_simple, @function
rotate_cl_controlled_rcr_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_w_mv_constant_simple, .-rotate_cl_controlled_rcr_w_mv_constant_simple

    
.globl rotate_cl_controlled_rcr_w_mv_constant_complex1
         .type   rotate_cl_controlled_rcr_w_mv_constant_complex1, @function
rotate_cl_controlled_rcr_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_w_mv_constant_complex1, .-rotate_cl_controlled_rcr_w_mv_constant_complex1

    
.globl rotate_cl_controlled_rcr_w_mv_constant_complex2
         .type   rotate_cl_controlled_rcr_w_mv_constant_complex2, @function
rotate_cl_controlled_rcr_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_w_mv_constant_complex2, .-rotate_cl_controlled_rcr_w_mv_constant_complex2

    
.globl rotate_cl_controlled_rcr_l_plain
         .type   rotate_cl_controlled_rcr_l_plain, @function
rotate_cl_controlled_rcr_l_plain:
      .byte 0xd3,0xd8
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_l_plain, .-rotate_cl_controlled_rcr_l_plain

    
.globl rotate_cl_controlled_rcr_l_allregs
         .type   rotate_cl_controlled_rcr_l_allregs, @function
rotate_cl_controlled_rcr_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd3,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_l_allregs, .-rotate_cl_controlled_rcr_l_allregs

    
.globl rotate_cl_controlled_rcr_l_constant_simple
         .type   rotate_cl_controlled_rcr_l_constant_simple, @function
rotate_cl_controlled_rcr_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd3,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_l_constant_simple, .-rotate_cl_controlled_rcr_l_constant_simple

    
.globl rotate_cl_controlled_rcr_l_constant_complex1
         .type   rotate_cl_controlled_rcr_l_constant_complex1, @function
rotate_cl_controlled_rcr_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd3,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_l_constant_complex1, .-rotate_cl_controlled_rcr_l_constant_complex1

    
.globl rotate_cl_controlled_rcr_l_constant_complex2
         .type   rotate_cl_controlled_rcr_l_constant_complex2, @function
rotate_cl_controlled_rcr_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd3,0xd8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_rcr_l_constant_complex2, .-rotate_cl_controlled_rcr_l_constant_complex2

    
.globl rotate_cl_controlled_shl_b_mv_plain
         .type   rotate_cl_controlled_shl_b_mv_plain, @function
rotate_cl_controlled_shl_b_mv_plain:
      .byte 0xd2,0xe0
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_b_mv_plain, .-rotate_cl_controlled_shl_b_mv_plain

    
.globl rotate_cl_controlled_shl_b_mv_allregs
         .type   rotate_cl_controlled_shl_b_mv_allregs, @function
rotate_cl_controlled_shl_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd2,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_b_mv_allregs, .-rotate_cl_controlled_shl_b_mv_allregs

    
.globl rotate_cl_controlled_shl_b_mv_constant_simple
         .type   rotate_cl_controlled_shl_b_mv_constant_simple, @function
rotate_cl_controlled_shl_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd2,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_b_mv_constant_simple, .-rotate_cl_controlled_shl_b_mv_constant_simple

    
.globl rotate_cl_controlled_shl_b_mv_constant_complex1
         .type   rotate_cl_controlled_shl_b_mv_constant_complex1, @function
rotate_cl_controlled_shl_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd2,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_b_mv_constant_complex1, .-rotate_cl_controlled_shl_b_mv_constant_complex1

    
.globl rotate_cl_controlled_shl_b_mv_constant_complex2
         .type   rotate_cl_controlled_shl_b_mv_constant_complex2, @function
rotate_cl_controlled_shl_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd2,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_b_mv_constant_complex2, .-rotate_cl_controlled_shl_b_mv_constant_complex2

    
.globl rotate_cl_controlled_shl_w_mv_plain
         .type   rotate_cl_controlled_shl_w_mv_plain, @function
rotate_cl_controlled_shl_w_mv_plain:
      .byte 0x66,0xd3,0xe0
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_w_mv_plain, .-rotate_cl_controlled_shl_w_mv_plain

    
.globl rotate_cl_controlled_shl_w_mv_allregs
         .type   rotate_cl_controlled_shl_w_mv_allregs, @function
rotate_cl_controlled_shl_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_w_mv_allregs, .-rotate_cl_controlled_shl_w_mv_allregs

    
.globl rotate_cl_controlled_shl_w_mv_constant_simple
         .type   rotate_cl_controlled_shl_w_mv_constant_simple, @function
rotate_cl_controlled_shl_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_w_mv_constant_simple, .-rotate_cl_controlled_shl_w_mv_constant_simple

    
.globl rotate_cl_controlled_shl_w_mv_constant_complex1
         .type   rotate_cl_controlled_shl_w_mv_constant_complex1, @function
rotate_cl_controlled_shl_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_w_mv_constant_complex1, .-rotate_cl_controlled_shl_w_mv_constant_complex1

    
.globl rotate_cl_controlled_shl_w_mv_constant_complex2
         .type   rotate_cl_controlled_shl_w_mv_constant_complex2, @function
rotate_cl_controlled_shl_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_w_mv_constant_complex2, .-rotate_cl_controlled_shl_w_mv_constant_complex2

    
.globl rotate_cl_controlled_shl_l_plain
         .type   rotate_cl_controlled_shl_l_plain, @function
rotate_cl_controlled_shl_l_plain:
      .byte 0xd3,0xe0
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_l_plain, .-rotate_cl_controlled_shl_l_plain

    
.globl rotate_cl_controlled_shl_l_allregs
         .type   rotate_cl_controlled_shl_l_allregs, @function
rotate_cl_controlled_shl_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd3,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_l_allregs, .-rotate_cl_controlled_shl_l_allregs

    
.globl rotate_cl_controlled_shl_l_constant_simple
         .type   rotate_cl_controlled_shl_l_constant_simple, @function
rotate_cl_controlled_shl_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd3,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_l_constant_simple, .-rotate_cl_controlled_shl_l_constant_simple

    
.globl rotate_cl_controlled_shl_l_constant_complex1
         .type   rotate_cl_controlled_shl_l_constant_complex1, @function
rotate_cl_controlled_shl_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd3,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_l_constant_complex1, .-rotate_cl_controlled_shl_l_constant_complex1

    
.globl rotate_cl_controlled_shl_l_constant_complex2
         .type   rotate_cl_controlled_shl_l_constant_complex2, @function
rotate_cl_controlled_shl_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd3,0xe0
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shl_l_constant_complex2, .-rotate_cl_controlled_shl_l_constant_complex2

    
.globl rotate_cl_controlled_shr_b_mv_plain
         .type   rotate_cl_controlled_shr_b_mv_plain, @function
rotate_cl_controlled_shr_b_mv_plain:
      .byte 0xd2,0xe8
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_b_mv_plain, .-rotate_cl_controlled_shr_b_mv_plain

    
.globl rotate_cl_controlled_shr_b_mv_allregs
         .type   rotate_cl_controlled_shr_b_mv_allregs, @function
rotate_cl_controlled_shr_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd2,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_b_mv_allregs, .-rotate_cl_controlled_shr_b_mv_allregs

    
.globl rotate_cl_controlled_shr_b_mv_constant_simple
         .type   rotate_cl_controlled_shr_b_mv_constant_simple, @function
rotate_cl_controlled_shr_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd2,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_b_mv_constant_simple, .-rotate_cl_controlled_shr_b_mv_constant_simple

    
.globl rotate_cl_controlled_shr_b_mv_constant_complex1
         .type   rotate_cl_controlled_shr_b_mv_constant_complex1, @function
rotate_cl_controlled_shr_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd2,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_b_mv_constant_complex1, .-rotate_cl_controlled_shr_b_mv_constant_complex1

    
.globl rotate_cl_controlled_shr_b_mv_constant_complex2
         .type   rotate_cl_controlled_shr_b_mv_constant_complex2, @function
rotate_cl_controlled_shr_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd2,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_b_mv_constant_complex2, .-rotate_cl_controlled_shr_b_mv_constant_complex2

    
.globl rotate_cl_controlled_shr_w_mv_plain
         .type   rotate_cl_controlled_shr_w_mv_plain, @function
rotate_cl_controlled_shr_w_mv_plain:
      .byte 0x66,0xd3,0xe8
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_w_mv_plain, .-rotate_cl_controlled_shr_w_mv_plain

    
.globl rotate_cl_controlled_shr_w_mv_allregs
         .type   rotate_cl_controlled_shr_w_mv_allregs, @function
rotate_cl_controlled_shr_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_w_mv_allregs, .-rotate_cl_controlled_shr_w_mv_allregs

    
.globl rotate_cl_controlled_shr_w_mv_constant_simple
         .type   rotate_cl_controlled_shr_w_mv_constant_simple, @function
rotate_cl_controlled_shr_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_w_mv_constant_simple, .-rotate_cl_controlled_shr_w_mv_constant_simple

    
.globl rotate_cl_controlled_shr_w_mv_constant_complex1
         .type   rotate_cl_controlled_shr_w_mv_constant_complex1, @function
rotate_cl_controlled_shr_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_w_mv_constant_complex1, .-rotate_cl_controlled_shr_w_mv_constant_complex1

    
.globl rotate_cl_controlled_shr_w_mv_constant_complex2
         .type   rotate_cl_controlled_shr_w_mv_constant_complex2, @function
rotate_cl_controlled_shr_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_w_mv_constant_complex2, .-rotate_cl_controlled_shr_w_mv_constant_complex2

    
.globl rotate_cl_controlled_shr_l_plain
         .type   rotate_cl_controlled_shr_l_plain, @function
rotate_cl_controlled_shr_l_plain:
      .byte 0xd3,0xe8
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_l_plain, .-rotate_cl_controlled_shr_l_plain

    
.globl rotate_cl_controlled_shr_l_allregs
         .type   rotate_cl_controlled_shr_l_allregs, @function
rotate_cl_controlled_shr_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd3,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_l_allregs, .-rotate_cl_controlled_shr_l_allregs

    
.globl rotate_cl_controlled_shr_l_constant_simple
         .type   rotate_cl_controlled_shr_l_constant_simple, @function
rotate_cl_controlled_shr_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd3,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_l_constant_simple, .-rotate_cl_controlled_shr_l_constant_simple

    
.globl rotate_cl_controlled_shr_l_constant_complex1
         .type   rotate_cl_controlled_shr_l_constant_complex1, @function
rotate_cl_controlled_shr_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd3,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_l_constant_complex1, .-rotate_cl_controlled_shr_l_constant_complex1

    
.globl rotate_cl_controlled_shr_l_constant_complex2
         .type   rotate_cl_controlled_shr_l_constant_complex2, @function
rotate_cl_controlled_shr_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd3,0xe8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_shr_l_constant_complex2, .-rotate_cl_controlled_shr_l_constant_complex2

    
.globl rotate_cl_controlled_sar_b_mv_plain
         .type   rotate_cl_controlled_sar_b_mv_plain, @function
rotate_cl_controlled_sar_b_mv_plain:
      .byte 0xd2,0xf8
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_b_mv_plain, .-rotate_cl_controlled_sar_b_mv_plain

    
.globl rotate_cl_controlled_sar_b_mv_allregs
         .type   rotate_cl_controlled_sar_b_mv_allregs, @function
rotate_cl_controlled_sar_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd2,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_b_mv_allregs, .-rotate_cl_controlled_sar_b_mv_allregs

    
.globl rotate_cl_controlled_sar_b_mv_constant_simple
         .type   rotate_cl_controlled_sar_b_mv_constant_simple, @function
rotate_cl_controlled_sar_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd2,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_b_mv_constant_simple, .-rotate_cl_controlled_sar_b_mv_constant_simple

    
.globl rotate_cl_controlled_sar_b_mv_constant_complex1
         .type   rotate_cl_controlled_sar_b_mv_constant_complex1, @function
rotate_cl_controlled_sar_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd2,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_b_mv_constant_complex1, .-rotate_cl_controlled_sar_b_mv_constant_complex1

    
.globl rotate_cl_controlled_sar_b_mv_constant_complex2
         .type   rotate_cl_controlled_sar_b_mv_constant_complex2, @function
rotate_cl_controlled_sar_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd2,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_b_mv_constant_complex2, .-rotate_cl_controlled_sar_b_mv_constant_complex2

    
.globl rotate_cl_controlled_sar_w_mv_plain
         .type   rotate_cl_controlled_sar_w_mv_plain, @function
rotate_cl_controlled_sar_w_mv_plain:
      .byte 0x66,0xd3,0xf8
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_w_mv_plain, .-rotate_cl_controlled_sar_w_mv_plain

    
.globl rotate_cl_controlled_sar_w_mv_allregs
         .type   rotate_cl_controlled_sar_w_mv_allregs, @function
rotate_cl_controlled_sar_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_w_mv_allregs, .-rotate_cl_controlled_sar_w_mv_allregs

    
.globl rotate_cl_controlled_sar_w_mv_constant_simple
         .type   rotate_cl_controlled_sar_w_mv_constant_simple, @function
rotate_cl_controlled_sar_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_w_mv_constant_simple, .-rotate_cl_controlled_sar_w_mv_constant_simple

    
.globl rotate_cl_controlled_sar_w_mv_constant_complex1
         .type   rotate_cl_controlled_sar_w_mv_constant_complex1, @function
rotate_cl_controlled_sar_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_w_mv_constant_complex1, .-rotate_cl_controlled_sar_w_mv_constant_complex1

    
.globl rotate_cl_controlled_sar_w_mv_constant_complex2
         .type   rotate_cl_controlled_sar_w_mv_constant_complex2, @function
rotate_cl_controlled_sar_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xd3,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_w_mv_constant_complex2, .-rotate_cl_controlled_sar_w_mv_constant_complex2

    
.globl rotate_cl_controlled_sar_l_plain
         .type   rotate_cl_controlled_sar_l_plain, @function
rotate_cl_controlled_sar_l_plain:
      .byte 0xd3,0xf8
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_l_plain, .-rotate_cl_controlled_sar_l_plain

    
.globl rotate_cl_controlled_sar_l_allregs
         .type   rotate_cl_controlled_sar_l_allregs, @function
rotate_cl_controlled_sar_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd3,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_l_allregs, .-rotate_cl_controlled_sar_l_allregs

    
.globl rotate_cl_controlled_sar_l_constant_simple
         .type   rotate_cl_controlled_sar_l_constant_simple, @function
rotate_cl_controlled_sar_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd3,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_l_constant_simple, .-rotate_cl_controlled_sar_l_constant_simple

    
.globl rotate_cl_controlled_sar_l_constant_complex1
         .type   rotate_cl_controlled_sar_l_constant_complex1, @function
rotate_cl_controlled_sar_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd3,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_l_constant_complex1, .-rotate_cl_controlled_sar_l_constant_complex1

    
.globl rotate_cl_controlled_sar_l_constant_complex2
         .type   rotate_cl_controlled_sar_l_constant_complex2, @function
rotate_cl_controlled_sar_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd3,0xf8
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_cl_controlled_sar_l_constant_complex2, .-rotate_cl_controlled_sar_l_constant_complex2

    
.globl rotate_imm8_rol_b_mv_plain
         .type   rotate_imm8_rol_b_mv_plain, @function
rotate_imm8_rol_b_mv_plain:
      .byte 0xc0,0xc0,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_b_mv_plain, .-rotate_imm8_rol_b_mv_plain

    
.globl rotate_imm8_rol_b_mv_allregs
         .type   rotate_imm8_rol_b_mv_allregs, @function
rotate_imm8_rol_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc0,0xc0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_b_mv_allregs, .-rotate_imm8_rol_b_mv_allregs

    
.globl rotate_imm8_rol_b_mv_constant_simple
         .type   rotate_imm8_rol_b_mv_constant_simple, @function
rotate_imm8_rol_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc0,0xc0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_b_mv_constant_simple, .-rotate_imm8_rol_b_mv_constant_simple

    
.globl rotate_imm8_rol_b_mv_constant_complex1
         .type   rotate_imm8_rol_b_mv_constant_complex1, @function
rotate_imm8_rol_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc0,0xc0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_b_mv_constant_complex1, .-rotate_imm8_rol_b_mv_constant_complex1

    
.globl rotate_imm8_rol_b_mv_constant_complex2
         .type   rotate_imm8_rol_b_mv_constant_complex2, @function
rotate_imm8_rol_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc0,0xc0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_b_mv_constant_complex2, .-rotate_imm8_rol_b_mv_constant_complex2

    
.globl rotate_imm8_rol_w_mv_plain
         .type   rotate_imm8_rol_w_mv_plain, @function
rotate_imm8_rol_w_mv_plain:
      .byte 0x66,0xc1,0xc0,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_w_mv_plain, .-rotate_imm8_rol_w_mv_plain

    
.globl rotate_imm8_rol_w_mv_allregs
         .type   rotate_imm8_rol_w_mv_allregs, @function
rotate_imm8_rol_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xc0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_w_mv_allregs, .-rotate_imm8_rol_w_mv_allregs

    
.globl rotate_imm8_rol_w_mv_constant_simple
         .type   rotate_imm8_rol_w_mv_constant_simple, @function
rotate_imm8_rol_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xc0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_w_mv_constant_simple, .-rotate_imm8_rol_w_mv_constant_simple

    
.globl rotate_imm8_rol_w_mv_constant_complex1
         .type   rotate_imm8_rol_w_mv_constant_complex1, @function
rotate_imm8_rol_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xc0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_w_mv_constant_complex1, .-rotate_imm8_rol_w_mv_constant_complex1

    
.globl rotate_imm8_rol_w_mv_constant_complex2
         .type   rotate_imm8_rol_w_mv_constant_complex2, @function
rotate_imm8_rol_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xc0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_w_mv_constant_complex2, .-rotate_imm8_rol_w_mv_constant_complex2

    
.globl rotate_imm8_rol_l_plain
         .type   rotate_imm8_rol_l_plain, @function
rotate_imm8_rol_l_plain:
      .byte 0xc1,0xc0,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_l_plain, .-rotate_imm8_rol_l_plain

    
.globl rotate_imm8_rol_l_allregs
         .type   rotate_imm8_rol_l_allregs, @function
rotate_imm8_rol_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc1,0xc0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_l_allregs, .-rotate_imm8_rol_l_allregs

    
.globl rotate_imm8_rol_l_constant_simple
         .type   rotate_imm8_rol_l_constant_simple, @function
rotate_imm8_rol_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc1,0xc0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_l_constant_simple, .-rotate_imm8_rol_l_constant_simple

    
.globl rotate_imm8_rol_l_constant_complex1
         .type   rotate_imm8_rol_l_constant_complex1, @function
rotate_imm8_rol_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc1,0xc0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_l_constant_complex1, .-rotate_imm8_rol_l_constant_complex1

    
.globl rotate_imm8_rol_l_constant_complex2
         .type   rotate_imm8_rol_l_constant_complex2, @function
rotate_imm8_rol_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc1,0xc0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rol_l_constant_complex2, .-rotate_imm8_rol_l_constant_complex2

    
.globl rotate_imm8_ror_b_mv_plain
         .type   rotate_imm8_ror_b_mv_plain, @function
rotate_imm8_ror_b_mv_plain:
      .byte 0xc0,0xc8,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_b_mv_plain, .-rotate_imm8_ror_b_mv_plain

    
.globl rotate_imm8_ror_b_mv_allregs
         .type   rotate_imm8_ror_b_mv_allregs, @function
rotate_imm8_ror_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc0,0xc8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_b_mv_allregs, .-rotate_imm8_ror_b_mv_allregs

    
.globl rotate_imm8_ror_b_mv_constant_simple
         .type   rotate_imm8_ror_b_mv_constant_simple, @function
rotate_imm8_ror_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc0,0xc8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_b_mv_constant_simple, .-rotate_imm8_ror_b_mv_constant_simple

    
.globl rotate_imm8_ror_b_mv_constant_complex1
         .type   rotate_imm8_ror_b_mv_constant_complex1, @function
rotate_imm8_ror_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc0,0xc8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_b_mv_constant_complex1, .-rotate_imm8_ror_b_mv_constant_complex1

    
.globl rotate_imm8_ror_b_mv_constant_complex2
         .type   rotate_imm8_ror_b_mv_constant_complex2, @function
rotate_imm8_ror_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc0,0xc8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_b_mv_constant_complex2, .-rotate_imm8_ror_b_mv_constant_complex2

    
.globl rotate_imm8_ror_w_mv_plain
         .type   rotate_imm8_ror_w_mv_plain, @function
rotate_imm8_ror_w_mv_plain:
      .byte 0x66,0xc1,0xc8,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_w_mv_plain, .-rotate_imm8_ror_w_mv_plain

    
.globl rotate_imm8_ror_w_mv_allregs
         .type   rotate_imm8_ror_w_mv_allregs, @function
rotate_imm8_ror_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xc8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_w_mv_allregs, .-rotate_imm8_ror_w_mv_allregs

    
.globl rotate_imm8_ror_w_mv_constant_simple
         .type   rotate_imm8_ror_w_mv_constant_simple, @function
rotate_imm8_ror_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xc8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_w_mv_constant_simple, .-rotate_imm8_ror_w_mv_constant_simple

    
.globl rotate_imm8_ror_w_mv_constant_complex1
         .type   rotate_imm8_ror_w_mv_constant_complex1, @function
rotate_imm8_ror_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xc8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_w_mv_constant_complex1, .-rotate_imm8_ror_w_mv_constant_complex1

    
.globl rotate_imm8_ror_w_mv_constant_complex2
         .type   rotate_imm8_ror_w_mv_constant_complex2, @function
rotate_imm8_ror_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xc8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_w_mv_constant_complex2, .-rotate_imm8_ror_w_mv_constant_complex2

    
.globl rotate_imm8_ror_l_plain
         .type   rotate_imm8_ror_l_plain, @function
rotate_imm8_ror_l_plain:
      .byte 0xc1,0xc8,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_l_plain, .-rotate_imm8_ror_l_plain

    
.globl rotate_imm8_ror_l_allregs
         .type   rotate_imm8_ror_l_allregs, @function
rotate_imm8_ror_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc1,0xc8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_l_allregs, .-rotate_imm8_ror_l_allregs

    
.globl rotate_imm8_ror_l_constant_simple
         .type   rotate_imm8_ror_l_constant_simple, @function
rotate_imm8_ror_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc1,0xc8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_l_constant_simple, .-rotate_imm8_ror_l_constant_simple

    
.globl rotate_imm8_ror_l_constant_complex1
         .type   rotate_imm8_ror_l_constant_complex1, @function
rotate_imm8_ror_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc1,0xc8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_l_constant_complex1, .-rotate_imm8_ror_l_constant_complex1

    
.globl rotate_imm8_ror_l_constant_complex2
         .type   rotate_imm8_ror_l_constant_complex2, @function
rotate_imm8_ror_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc1,0xc8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_ror_l_constant_complex2, .-rotate_imm8_ror_l_constant_complex2

    
.globl rotate_imm8_rcl_b_mv_plain
         .type   rotate_imm8_rcl_b_mv_plain, @function
rotate_imm8_rcl_b_mv_plain:
      .byte 0xc0,0xd0,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_b_mv_plain, .-rotate_imm8_rcl_b_mv_plain

    
.globl rotate_imm8_rcl_b_mv_allregs
         .type   rotate_imm8_rcl_b_mv_allregs, @function
rotate_imm8_rcl_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc0,0xd0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_b_mv_allregs, .-rotate_imm8_rcl_b_mv_allregs

    
.globl rotate_imm8_rcl_b_mv_constant_simple
         .type   rotate_imm8_rcl_b_mv_constant_simple, @function
rotate_imm8_rcl_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc0,0xd0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_b_mv_constant_simple, .-rotate_imm8_rcl_b_mv_constant_simple

    
.globl rotate_imm8_rcl_b_mv_constant_complex1
         .type   rotate_imm8_rcl_b_mv_constant_complex1, @function
rotate_imm8_rcl_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc0,0xd0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_b_mv_constant_complex1, .-rotate_imm8_rcl_b_mv_constant_complex1

    
.globl rotate_imm8_rcl_b_mv_constant_complex2
         .type   rotate_imm8_rcl_b_mv_constant_complex2, @function
rotate_imm8_rcl_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc0,0xd0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_b_mv_constant_complex2, .-rotate_imm8_rcl_b_mv_constant_complex2

    
.globl rotate_imm8_rcl_w_mv_plain
         .type   rotate_imm8_rcl_w_mv_plain, @function
rotate_imm8_rcl_w_mv_plain:
      .byte 0x66,0xc1,0xd0,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_w_mv_plain, .-rotate_imm8_rcl_w_mv_plain

    
.globl rotate_imm8_rcl_w_mv_allregs
         .type   rotate_imm8_rcl_w_mv_allregs, @function
rotate_imm8_rcl_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xd0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_w_mv_allregs, .-rotate_imm8_rcl_w_mv_allregs

    
.globl rotate_imm8_rcl_w_mv_constant_simple
         .type   rotate_imm8_rcl_w_mv_constant_simple, @function
rotate_imm8_rcl_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xd0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_w_mv_constant_simple, .-rotate_imm8_rcl_w_mv_constant_simple

    
.globl rotate_imm8_rcl_w_mv_constant_complex1
         .type   rotate_imm8_rcl_w_mv_constant_complex1, @function
rotate_imm8_rcl_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xd0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_w_mv_constant_complex1, .-rotate_imm8_rcl_w_mv_constant_complex1

    
.globl rotate_imm8_rcl_w_mv_constant_complex2
         .type   rotate_imm8_rcl_w_mv_constant_complex2, @function
rotate_imm8_rcl_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xd0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_w_mv_constant_complex2, .-rotate_imm8_rcl_w_mv_constant_complex2

    
.globl rotate_imm8_rcl_l_plain
         .type   rotate_imm8_rcl_l_plain, @function
rotate_imm8_rcl_l_plain:
      .byte 0xc1,0xd0,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_l_plain, .-rotate_imm8_rcl_l_plain

    
.globl rotate_imm8_rcl_l_allregs
         .type   rotate_imm8_rcl_l_allregs, @function
rotate_imm8_rcl_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc1,0xd0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_l_allregs, .-rotate_imm8_rcl_l_allregs

    
.globl rotate_imm8_rcl_l_constant_simple
         .type   rotate_imm8_rcl_l_constant_simple, @function
rotate_imm8_rcl_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc1,0xd0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_l_constant_simple, .-rotate_imm8_rcl_l_constant_simple

    
.globl rotate_imm8_rcl_l_constant_complex1
         .type   rotate_imm8_rcl_l_constant_complex1, @function
rotate_imm8_rcl_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc1,0xd0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_l_constant_complex1, .-rotate_imm8_rcl_l_constant_complex1

    
.globl rotate_imm8_rcl_l_constant_complex2
         .type   rotate_imm8_rcl_l_constant_complex2, @function
rotate_imm8_rcl_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc1,0xd0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcl_l_constant_complex2, .-rotate_imm8_rcl_l_constant_complex2

    
.globl rotate_imm8_rcr_b_mv_plain
         .type   rotate_imm8_rcr_b_mv_plain, @function
rotate_imm8_rcr_b_mv_plain:
      .byte 0xc0,0xd8,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_b_mv_plain, .-rotate_imm8_rcr_b_mv_plain

    
.globl rotate_imm8_rcr_b_mv_allregs
         .type   rotate_imm8_rcr_b_mv_allregs, @function
rotate_imm8_rcr_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc0,0xd8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_b_mv_allregs, .-rotate_imm8_rcr_b_mv_allregs

    
.globl rotate_imm8_rcr_b_mv_constant_simple
         .type   rotate_imm8_rcr_b_mv_constant_simple, @function
rotate_imm8_rcr_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc0,0xd8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_b_mv_constant_simple, .-rotate_imm8_rcr_b_mv_constant_simple

    
.globl rotate_imm8_rcr_b_mv_constant_complex1
         .type   rotate_imm8_rcr_b_mv_constant_complex1, @function
rotate_imm8_rcr_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc0,0xd8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_b_mv_constant_complex1, .-rotate_imm8_rcr_b_mv_constant_complex1

    
.globl rotate_imm8_rcr_b_mv_constant_complex2
         .type   rotate_imm8_rcr_b_mv_constant_complex2, @function
rotate_imm8_rcr_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc0,0xd8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_b_mv_constant_complex2, .-rotate_imm8_rcr_b_mv_constant_complex2

    
.globl rotate_imm8_rcr_w_mv_plain
         .type   rotate_imm8_rcr_w_mv_plain, @function
rotate_imm8_rcr_w_mv_plain:
      .byte 0x66,0xc1,0xd8,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_w_mv_plain, .-rotate_imm8_rcr_w_mv_plain

    
.globl rotate_imm8_rcr_w_mv_allregs
         .type   rotate_imm8_rcr_w_mv_allregs, @function
rotate_imm8_rcr_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xd8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_w_mv_allregs, .-rotate_imm8_rcr_w_mv_allregs

    
.globl rotate_imm8_rcr_w_mv_constant_simple
         .type   rotate_imm8_rcr_w_mv_constant_simple, @function
rotate_imm8_rcr_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xd8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_w_mv_constant_simple, .-rotate_imm8_rcr_w_mv_constant_simple

    
.globl rotate_imm8_rcr_w_mv_constant_complex1
         .type   rotate_imm8_rcr_w_mv_constant_complex1, @function
rotate_imm8_rcr_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xd8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_w_mv_constant_complex1, .-rotate_imm8_rcr_w_mv_constant_complex1

    
.globl rotate_imm8_rcr_w_mv_constant_complex2
         .type   rotate_imm8_rcr_w_mv_constant_complex2, @function
rotate_imm8_rcr_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xd8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_w_mv_constant_complex2, .-rotate_imm8_rcr_w_mv_constant_complex2

    
.globl rotate_imm8_rcr_l_plain
         .type   rotate_imm8_rcr_l_plain, @function
rotate_imm8_rcr_l_plain:
      .byte 0xc1,0xd8,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_l_plain, .-rotate_imm8_rcr_l_plain

    
.globl rotate_imm8_rcr_l_allregs
         .type   rotate_imm8_rcr_l_allregs, @function
rotate_imm8_rcr_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc1,0xd8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_l_allregs, .-rotate_imm8_rcr_l_allregs

    
.globl rotate_imm8_rcr_l_constant_simple
         .type   rotate_imm8_rcr_l_constant_simple, @function
rotate_imm8_rcr_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc1,0xd8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_l_constant_simple, .-rotate_imm8_rcr_l_constant_simple

    
.globl rotate_imm8_rcr_l_constant_complex1
         .type   rotate_imm8_rcr_l_constant_complex1, @function
rotate_imm8_rcr_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc1,0xd8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_l_constant_complex1, .-rotate_imm8_rcr_l_constant_complex1

    
.globl rotate_imm8_rcr_l_constant_complex2
         .type   rotate_imm8_rcr_l_constant_complex2, @function
rotate_imm8_rcr_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc1,0xd8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_rcr_l_constant_complex2, .-rotate_imm8_rcr_l_constant_complex2

    
.globl rotate_imm8_shl_b_mv_plain
         .type   rotate_imm8_shl_b_mv_plain, @function
rotate_imm8_shl_b_mv_plain:
      .byte 0xc0,0xe0,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_b_mv_plain, .-rotate_imm8_shl_b_mv_plain

    
.globl rotate_imm8_shl_b_mv_allregs
         .type   rotate_imm8_shl_b_mv_allregs, @function
rotate_imm8_shl_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc0,0xe0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_b_mv_allregs, .-rotate_imm8_shl_b_mv_allregs

    
.globl rotate_imm8_shl_b_mv_constant_simple
         .type   rotate_imm8_shl_b_mv_constant_simple, @function
rotate_imm8_shl_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc0,0xe0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_b_mv_constant_simple, .-rotate_imm8_shl_b_mv_constant_simple

    
.globl rotate_imm8_shl_b_mv_constant_complex1
         .type   rotate_imm8_shl_b_mv_constant_complex1, @function
rotate_imm8_shl_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc0,0xe0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_b_mv_constant_complex1, .-rotate_imm8_shl_b_mv_constant_complex1

    
.globl rotate_imm8_shl_b_mv_constant_complex2
         .type   rotate_imm8_shl_b_mv_constant_complex2, @function
rotate_imm8_shl_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc0,0xe0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_b_mv_constant_complex2, .-rotate_imm8_shl_b_mv_constant_complex2

    
.globl rotate_imm8_shl_w_mv_plain
         .type   rotate_imm8_shl_w_mv_plain, @function
rotate_imm8_shl_w_mv_plain:
      .byte 0x66,0xc1,0xe0,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_w_mv_plain, .-rotate_imm8_shl_w_mv_plain

    
.globl rotate_imm8_shl_w_mv_allregs
         .type   rotate_imm8_shl_w_mv_allregs, @function
rotate_imm8_shl_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xe0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_w_mv_allregs, .-rotate_imm8_shl_w_mv_allregs

    
.globl rotate_imm8_shl_w_mv_constant_simple
         .type   rotate_imm8_shl_w_mv_constant_simple, @function
rotate_imm8_shl_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xe0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_w_mv_constant_simple, .-rotate_imm8_shl_w_mv_constant_simple

    
.globl rotate_imm8_shl_w_mv_constant_complex1
         .type   rotate_imm8_shl_w_mv_constant_complex1, @function
rotate_imm8_shl_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xe0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_w_mv_constant_complex1, .-rotate_imm8_shl_w_mv_constant_complex1

    
.globl rotate_imm8_shl_w_mv_constant_complex2
         .type   rotate_imm8_shl_w_mv_constant_complex2, @function
rotate_imm8_shl_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xe0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_w_mv_constant_complex2, .-rotate_imm8_shl_w_mv_constant_complex2

    
.globl rotate_imm8_shl_l_plain
         .type   rotate_imm8_shl_l_plain, @function
rotate_imm8_shl_l_plain:
      .byte 0xc1,0xe0,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_l_plain, .-rotate_imm8_shl_l_plain

    
.globl rotate_imm8_shl_l_allregs
         .type   rotate_imm8_shl_l_allregs, @function
rotate_imm8_shl_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc1,0xe0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_l_allregs, .-rotate_imm8_shl_l_allregs

    
.globl rotate_imm8_shl_l_constant_simple
         .type   rotate_imm8_shl_l_constant_simple, @function
rotate_imm8_shl_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc1,0xe0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_l_constant_simple, .-rotate_imm8_shl_l_constant_simple

    
.globl rotate_imm8_shl_l_constant_complex1
         .type   rotate_imm8_shl_l_constant_complex1, @function
rotate_imm8_shl_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc1,0xe0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_l_constant_complex1, .-rotate_imm8_shl_l_constant_complex1

    
.globl rotate_imm8_shl_l_constant_complex2
         .type   rotate_imm8_shl_l_constant_complex2, @function
rotate_imm8_shl_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc1,0xe0,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shl_l_constant_complex2, .-rotate_imm8_shl_l_constant_complex2

    
.globl rotate_imm8_shr_b_mv_plain
         .type   rotate_imm8_shr_b_mv_plain, @function
rotate_imm8_shr_b_mv_plain:
      .byte 0xc0,0xe8,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_b_mv_plain, .-rotate_imm8_shr_b_mv_plain

    
.globl rotate_imm8_shr_b_mv_allregs
         .type   rotate_imm8_shr_b_mv_allregs, @function
rotate_imm8_shr_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc0,0xe8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_b_mv_allregs, .-rotate_imm8_shr_b_mv_allregs

    
.globl rotate_imm8_shr_b_mv_constant_simple
         .type   rotate_imm8_shr_b_mv_constant_simple, @function
rotate_imm8_shr_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc0,0xe8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_b_mv_constant_simple, .-rotate_imm8_shr_b_mv_constant_simple

    
.globl rotate_imm8_shr_b_mv_constant_complex1
         .type   rotate_imm8_shr_b_mv_constant_complex1, @function
rotate_imm8_shr_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc0,0xe8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_b_mv_constant_complex1, .-rotate_imm8_shr_b_mv_constant_complex1

    
.globl rotate_imm8_shr_b_mv_constant_complex2
         .type   rotate_imm8_shr_b_mv_constant_complex2, @function
rotate_imm8_shr_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc0,0xe8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_b_mv_constant_complex2, .-rotate_imm8_shr_b_mv_constant_complex2

    
.globl rotate_imm8_shr_w_mv_plain
         .type   rotate_imm8_shr_w_mv_plain, @function
rotate_imm8_shr_w_mv_plain:
      .byte 0x66,0xc1,0xe8,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_w_mv_plain, .-rotate_imm8_shr_w_mv_plain

    
.globl rotate_imm8_shr_w_mv_allregs
         .type   rotate_imm8_shr_w_mv_allregs, @function
rotate_imm8_shr_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xe8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_w_mv_allregs, .-rotate_imm8_shr_w_mv_allregs

    
.globl rotate_imm8_shr_w_mv_constant_simple
         .type   rotate_imm8_shr_w_mv_constant_simple, @function
rotate_imm8_shr_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xe8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_w_mv_constant_simple, .-rotate_imm8_shr_w_mv_constant_simple

    
.globl rotate_imm8_shr_w_mv_constant_complex1
         .type   rotate_imm8_shr_w_mv_constant_complex1, @function
rotate_imm8_shr_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xe8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_w_mv_constant_complex1, .-rotate_imm8_shr_w_mv_constant_complex1

    
.globl rotate_imm8_shr_w_mv_constant_complex2
         .type   rotate_imm8_shr_w_mv_constant_complex2, @function
rotate_imm8_shr_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xe8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_w_mv_constant_complex2, .-rotate_imm8_shr_w_mv_constant_complex2

    
.globl rotate_imm8_shr_l_plain
         .type   rotate_imm8_shr_l_plain, @function
rotate_imm8_shr_l_plain:
      .byte 0xc1,0xe8,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_l_plain, .-rotate_imm8_shr_l_plain

    
.globl rotate_imm8_shr_l_allregs
         .type   rotate_imm8_shr_l_allregs, @function
rotate_imm8_shr_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc1,0xe8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_l_allregs, .-rotate_imm8_shr_l_allregs

    
.globl rotate_imm8_shr_l_constant_simple
         .type   rotate_imm8_shr_l_constant_simple, @function
rotate_imm8_shr_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc1,0xe8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_l_constant_simple, .-rotate_imm8_shr_l_constant_simple

    
.globl rotate_imm8_shr_l_constant_complex1
         .type   rotate_imm8_shr_l_constant_complex1, @function
rotate_imm8_shr_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc1,0xe8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_l_constant_complex1, .-rotate_imm8_shr_l_constant_complex1

    
.globl rotate_imm8_shr_l_constant_complex2
         .type   rotate_imm8_shr_l_constant_complex2, @function
rotate_imm8_shr_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc1,0xe8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_shr_l_constant_complex2, .-rotate_imm8_shr_l_constant_complex2

    
.globl rotate_imm8_sar_b_mv_plain
         .type   rotate_imm8_sar_b_mv_plain, @function
rotate_imm8_sar_b_mv_plain:
      .byte 0xc0,0xf8,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_b_mv_plain, .-rotate_imm8_sar_b_mv_plain

    
.globl rotate_imm8_sar_b_mv_allregs
         .type   rotate_imm8_sar_b_mv_allregs, @function
rotate_imm8_sar_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc0,0xf8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_b_mv_allregs, .-rotate_imm8_sar_b_mv_allregs

    
.globl rotate_imm8_sar_b_mv_constant_simple
         .type   rotate_imm8_sar_b_mv_constant_simple, @function
rotate_imm8_sar_b_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc0,0xf8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_b_mv_constant_simple, .-rotate_imm8_sar_b_mv_constant_simple

    
.globl rotate_imm8_sar_b_mv_constant_complex1
         .type   rotate_imm8_sar_b_mv_constant_complex1, @function
rotate_imm8_sar_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc0,0xf8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_b_mv_constant_complex1, .-rotate_imm8_sar_b_mv_constant_complex1

    
.globl rotate_imm8_sar_b_mv_constant_complex2
         .type   rotate_imm8_sar_b_mv_constant_complex2, @function
rotate_imm8_sar_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc0,0xf8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_b_mv_constant_complex2, .-rotate_imm8_sar_b_mv_constant_complex2

    
.globl rotate_imm8_sar_w_mv_plain
         .type   rotate_imm8_sar_w_mv_plain, @function
rotate_imm8_sar_w_mv_plain:
      .byte 0x66,0xc1,0xf8,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_w_mv_plain, .-rotate_imm8_sar_w_mv_plain

    
.globl rotate_imm8_sar_w_mv_allregs
         .type   rotate_imm8_sar_w_mv_allregs, @function
rotate_imm8_sar_w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xf8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_w_mv_allregs, .-rotate_imm8_sar_w_mv_allregs

    
.globl rotate_imm8_sar_w_mv_constant_simple
         .type   rotate_imm8_sar_w_mv_constant_simple, @function
rotate_imm8_sar_w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xf8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_w_mv_constant_simple, .-rotate_imm8_sar_w_mv_constant_simple

    
.globl rotate_imm8_sar_w_mv_constant_complex1
         .type   rotate_imm8_sar_w_mv_constant_complex1, @function
rotate_imm8_sar_w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xf8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_w_mv_constant_complex1, .-rotate_imm8_sar_w_mv_constant_complex1

    
.globl rotate_imm8_sar_w_mv_constant_complex2
         .type   rotate_imm8_sar_w_mv_constant_complex2, @function
rotate_imm8_sar_w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xc1,0xf8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_w_mv_constant_complex2, .-rotate_imm8_sar_w_mv_constant_complex2

    
.globl rotate_imm8_sar_l_plain
         .type   rotate_imm8_sar_l_plain, @function
rotate_imm8_sar_l_plain:
      .byte 0xc1,0xf8,0x04
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_l_plain, .-rotate_imm8_sar_l_plain

    
.globl rotate_imm8_sar_l_allregs
         .type   rotate_imm8_sar_l_allregs, @function
rotate_imm8_sar_l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc1,0xf8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_l_allregs, .-rotate_imm8_sar_l_allregs

    
.globl rotate_imm8_sar_l_constant_simple
         .type   rotate_imm8_sar_l_constant_simple, @function
rotate_imm8_sar_l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc1,0xf8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_l_constant_simple, .-rotate_imm8_sar_l_constant_simple

    
.globl rotate_imm8_sar_l_constant_complex1
         .type   rotate_imm8_sar_l_constant_complex1, @function
rotate_imm8_sar_l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc1,0xf8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_l_constant_complex1, .-rotate_imm8_sar_l_constant_complex1

    
.globl rotate_imm8_sar_l_constant_complex2
         .type   rotate_imm8_sar_l_constant_complex2, @function
rotate_imm8_sar_l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc1,0xf8,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rotate_imm8_sar_l_constant_complex2, .-rotate_imm8_sar_l_constant_complex2

    
.globl rep_ins1b_plain
         .type   rep_ins1b_plain, @function
rep_ins1b_plain:
      .byte 0xf2,0x6c
  mov $0x0,%eax

    ret
         .size   rep_ins1b_plain, .-rep_ins1b_plain

    
.globl rep_ins1b_allregs
         .type   rep_ins1b_allregs, @function
rep_ins1b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins1b_allregs, .-rep_ins1b_allregs

    
.globl rep_ins1b_constant_simple
         .type   rep_ins1b_constant_simple, @function
rep_ins1b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins1b_constant_simple, .-rep_ins1b_constant_simple

    
.globl rep_ins1b_constant_complex1
         .type   rep_ins1b_constant_complex1, @function
rep_ins1b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins1b_constant_complex1, .-rep_ins1b_constant_complex1

    
.globl rep_ins1b_constant_complex2
         .type   rep_ins1b_constant_complex2, @function
rep_ins1b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins1b_constant_complex2, .-rep_ins1b_constant_complex2

    
.globl rep_ins1w_mv_plain
         .type   rep_ins1w_mv_plain, @function
rep_ins1w_mv_plain:
      .byte 0xf2,0x66,0x6d
  mov $0x0,%eax

    ret
         .size   rep_ins1w_mv_plain, .-rep_ins1w_mv_plain

    
.globl rep_ins1w_mv_allregs
         .type   rep_ins1w_mv_allregs, @function
rep_ins1w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins1w_mv_allregs, .-rep_ins1w_mv_allregs

    
.globl rep_ins1w_mv_constant_simple
         .type   rep_ins1w_mv_constant_simple, @function
rep_ins1w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins1w_mv_constant_simple, .-rep_ins1w_mv_constant_simple

    
.globl rep_ins1w_mv_constant_complex1
         .type   rep_ins1w_mv_constant_complex1, @function
rep_ins1w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins1w_mv_constant_complex1, .-rep_ins1w_mv_constant_complex1

    
.globl rep_ins1w_mv_constant_complex2
         .type   rep_ins1w_mv_constant_complex2, @function
rep_ins1w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins1w_mv_constant_complex2, .-rep_ins1w_mv_constant_complex2

    
.globl rep_ins1l_mv_plain
         .type   rep_ins1l_mv_plain, @function
rep_ins1l_mv_plain:
      .byte 0xf2,0x6d
  mov $0x0,%eax

    ret
         .size   rep_ins1l_mv_plain, .-rep_ins1l_mv_plain

    
.globl rep_ins1l_mv_allregs
         .type   rep_ins1l_mv_allregs, @function
rep_ins1l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins1l_mv_allregs, .-rep_ins1l_mv_allregs

    
.globl rep_ins1l_mv_constant_simple
         .type   rep_ins1l_mv_constant_simple, @function
rep_ins1l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins1l_mv_constant_simple, .-rep_ins1l_mv_constant_simple

    
.globl rep_ins1l_mv_constant_complex1
         .type   rep_ins1l_mv_constant_complex1, @function
rep_ins1l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins1l_mv_constant_complex1, .-rep_ins1l_mv_constant_complex1

    
.globl rep_ins1l_mv_constant_complex2
         .type   rep_ins1l_mv_constant_complex2, @function
rep_ins1l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins1l_mv_constant_complex2, .-rep_ins1l_mv_constant_complex2

    
.globl rep_ins2b_plain
         .type   rep_ins2b_plain, @function
rep_ins2b_plain:
      .byte 0xf3,0x6c
  mov $0x0,%eax

    ret
         .size   rep_ins2b_plain, .-rep_ins2b_plain

    
.globl rep_ins2b_allregs
         .type   rep_ins2b_allregs, @function
rep_ins2b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins2b_allregs, .-rep_ins2b_allregs

    
.globl rep_ins2b_constant_simple
         .type   rep_ins2b_constant_simple, @function
rep_ins2b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins2b_constant_simple, .-rep_ins2b_constant_simple

    
.globl rep_ins2b_constant_complex1
         .type   rep_ins2b_constant_complex1, @function
rep_ins2b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins2b_constant_complex1, .-rep_ins2b_constant_complex1

    
.globl rep_ins2b_constant_complex2
         .type   rep_ins2b_constant_complex2, @function
rep_ins2b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins2b_constant_complex2, .-rep_ins2b_constant_complex2

    
.globl rep_ins2w_mv_plain
         .type   rep_ins2w_mv_plain, @function
rep_ins2w_mv_plain:
      .byte 0xf3,0x66,0x6d
  mov $0x0,%eax

    ret
         .size   rep_ins2w_mv_plain, .-rep_ins2w_mv_plain

    
.globl rep_ins2w_mv_allregs
         .type   rep_ins2w_mv_allregs, @function
rep_ins2w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins2w_mv_allregs, .-rep_ins2w_mv_allregs

    
.globl rep_ins2w_mv_constant_simple
         .type   rep_ins2w_mv_constant_simple, @function
rep_ins2w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins2w_mv_constant_simple, .-rep_ins2w_mv_constant_simple

    
.globl rep_ins2w_mv_constant_complex1
         .type   rep_ins2w_mv_constant_complex1, @function
rep_ins2w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins2w_mv_constant_complex1, .-rep_ins2w_mv_constant_complex1

    
.globl rep_ins2w_mv_constant_complex2
         .type   rep_ins2w_mv_constant_complex2, @function
rep_ins2w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins2w_mv_constant_complex2, .-rep_ins2w_mv_constant_complex2

    
.globl rep_ins2l_mv_plain
         .type   rep_ins2l_mv_plain, @function
rep_ins2l_mv_plain:
      .byte 0xf3,0x6d
  mov $0x0,%eax

    ret
         .size   rep_ins2l_mv_plain, .-rep_ins2l_mv_plain

    
.globl rep_ins2l_mv_allregs
         .type   rep_ins2l_mv_allregs, @function
rep_ins2l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins2l_mv_allregs, .-rep_ins2l_mv_allregs

    
.globl rep_ins2l_mv_constant_simple
         .type   rep_ins2l_mv_constant_simple, @function
rep_ins2l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins2l_mv_constant_simple, .-rep_ins2l_mv_constant_simple

    
.globl rep_ins2l_mv_constant_complex1
         .type   rep_ins2l_mv_constant_complex1, @function
rep_ins2l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins2l_mv_constant_complex1, .-rep_ins2l_mv_constant_complex1

    
.globl rep_ins2l_mv_constant_complex2
         .type   rep_ins2l_mv_constant_complex2, @function
rep_ins2l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_ins2l_mv_constant_complex2, .-rep_ins2l_mv_constant_complex2

    
.globl rep_lods1b_plain
         .type   rep_lods1b_plain, @function
rep_lods1b_plain:
      .byte 0xf2,0xac
  mov $0x0,%eax

    ret
         .size   rep_lods1b_plain, .-rep_lods1b_plain

    
.globl rep_lods1b_allregs
         .type   rep_lods1b_allregs, @function
rep_lods1b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods1b_allregs, .-rep_lods1b_allregs

    
.globl rep_lods1b_constant_simple
         .type   rep_lods1b_constant_simple, @function
rep_lods1b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods1b_constant_simple, .-rep_lods1b_constant_simple

    
.globl rep_lods1b_constant_complex1
         .type   rep_lods1b_constant_complex1, @function
rep_lods1b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods1b_constant_complex1, .-rep_lods1b_constant_complex1

    
.globl rep_lods1b_constant_complex2
         .type   rep_lods1b_constant_complex2, @function
rep_lods1b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods1b_constant_complex2, .-rep_lods1b_constant_complex2

    
.globl rep_lods1w_mv_plain
         .type   rep_lods1w_mv_plain, @function
rep_lods1w_mv_plain:
      .byte 0xf2,0x66,0xad
  mov $0x0,%eax

    ret
         .size   rep_lods1w_mv_plain, .-rep_lods1w_mv_plain

    
.globl rep_lods1w_mv_allregs
         .type   rep_lods1w_mv_allregs, @function
rep_lods1w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods1w_mv_allregs, .-rep_lods1w_mv_allregs

    
.globl rep_lods1w_mv_constant_simple
         .type   rep_lods1w_mv_constant_simple, @function
rep_lods1w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods1w_mv_constant_simple, .-rep_lods1w_mv_constant_simple

    
.globl rep_lods1w_mv_constant_complex1
         .type   rep_lods1w_mv_constant_complex1, @function
rep_lods1w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods1w_mv_constant_complex1, .-rep_lods1w_mv_constant_complex1

    
.globl rep_lods1w_mv_constant_complex2
         .type   rep_lods1w_mv_constant_complex2, @function
rep_lods1w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods1w_mv_constant_complex2, .-rep_lods1w_mv_constant_complex2

    
.globl rep_lods1l_mv_plain
         .type   rep_lods1l_mv_plain, @function
rep_lods1l_mv_plain:
      .byte 0xf2,0xad
  mov $0x0,%eax

    ret
         .size   rep_lods1l_mv_plain, .-rep_lods1l_mv_plain

    
.globl rep_lods1l_mv_allregs
         .type   rep_lods1l_mv_allregs, @function
rep_lods1l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods1l_mv_allregs, .-rep_lods1l_mv_allregs

    
.globl rep_lods1l_mv_constant_simple
         .type   rep_lods1l_mv_constant_simple, @function
rep_lods1l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods1l_mv_constant_simple, .-rep_lods1l_mv_constant_simple

    
.globl rep_lods1l_mv_constant_complex1
         .type   rep_lods1l_mv_constant_complex1, @function
rep_lods1l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods1l_mv_constant_complex1, .-rep_lods1l_mv_constant_complex1

    
.globl rep_lods1l_mv_constant_complex2
         .type   rep_lods1l_mv_constant_complex2, @function
rep_lods1l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods1l_mv_constant_complex2, .-rep_lods1l_mv_constant_complex2

    
.globl rep_lods2b_plain
         .type   rep_lods2b_plain, @function
rep_lods2b_plain:
      .byte 0xf3,0xac
  mov $0x0,%eax

    ret
         .size   rep_lods2b_plain, .-rep_lods2b_plain

    
.globl rep_lods2b_allregs
         .type   rep_lods2b_allregs, @function
rep_lods2b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods2b_allregs, .-rep_lods2b_allregs

    
.globl rep_lods2b_constant_simple
         .type   rep_lods2b_constant_simple, @function
rep_lods2b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods2b_constant_simple, .-rep_lods2b_constant_simple

    
.globl rep_lods2b_constant_complex1
         .type   rep_lods2b_constant_complex1, @function
rep_lods2b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods2b_constant_complex1, .-rep_lods2b_constant_complex1

    
.globl rep_lods2b_constant_complex2
         .type   rep_lods2b_constant_complex2, @function
rep_lods2b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods2b_constant_complex2, .-rep_lods2b_constant_complex2

    
.globl rep_lods2w_mv_plain
         .type   rep_lods2w_mv_plain, @function
rep_lods2w_mv_plain:
      .byte 0xf3,0x66,0xad
  mov $0x0,%eax

    ret
         .size   rep_lods2w_mv_plain, .-rep_lods2w_mv_plain

    
.globl rep_lods2w_mv_allregs
         .type   rep_lods2w_mv_allregs, @function
rep_lods2w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods2w_mv_allregs, .-rep_lods2w_mv_allregs

    
.globl rep_lods2w_mv_constant_simple
         .type   rep_lods2w_mv_constant_simple, @function
rep_lods2w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods2w_mv_constant_simple, .-rep_lods2w_mv_constant_simple

    
.globl rep_lods2w_mv_constant_complex1
         .type   rep_lods2w_mv_constant_complex1, @function
rep_lods2w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods2w_mv_constant_complex1, .-rep_lods2w_mv_constant_complex1

    
.globl rep_lods2w_mv_constant_complex2
         .type   rep_lods2w_mv_constant_complex2, @function
rep_lods2w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods2w_mv_constant_complex2, .-rep_lods2w_mv_constant_complex2

    
.globl rep_lods2l_mv_plain
         .type   rep_lods2l_mv_plain, @function
rep_lods2l_mv_plain:
      .byte 0xf3,0xad
  mov $0x0,%eax

    ret
         .size   rep_lods2l_mv_plain, .-rep_lods2l_mv_plain

    
.globl rep_lods2l_mv_allregs
         .type   rep_lods2l_mv_allregs, @function
rep_lods2l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods2l_mv_allregs, .-rep_lods2l_mv_allregs

    
.globl rep_lods2l_mv_constant_simple
         .type   rep_lods2l_mv_constant_simple, @function
rep_lods2l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods2l_mv_constant_simple, .-rep_lods2l_mv_constant_simple

    
.globl rep_lods2l_mv_constant_complex1
         .type   rep_lods2l_mv_constant_complex1, @function
rep_lods2l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods2l_mv_constant_complex1, .-rep_lods2l_mv_constant_complex1

    
.globl rep_lods2l_mv_constant_complex2
         .type   rep_lods2l_mv_constant_complex2, @function
rep_lods2l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods2l_mv_constant_complex2, .-rep_lods2l_mv_constant_complex2

    
.globl rep_movs1b_plain
         .type   rep_movs1b_plain, @function
rep_movs1b_plain:
      .byte 0xf2,0xa4
  mov $0x0,%eax

    ret
         .size   rep_movs1b_plain, .-rep_movs1b_plain

    
.globl rep_movs1b_allregs
         .type   rep_movs1b_allregs, @function
rep_movs1b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs1b_allregs, .-rep_movs1b_allregs

    
.globl rep_movs1b_constant_simple
         .type   rep_movs1b_constant_simple, @function
rep_movs1b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs1b_constant_simple, .-rep_movs1b_constant_simple

    
.globl rep_movs1b_constant_complex1
         .type   rep_movs1b_constant_complex1, @function
rep_movs1b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs1b_constant_complex1, .-rep_movs1b_constant_complex1

    
.globl rep_movs1b_constant_complex2
         .type   rep_movs1b_constant_complex2, @function
rep_movs1b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs1b_constant_complex2, .-rep_movs1b_constant_complex2

    
.globl rep_movs1w_mv_plain
         .type   rep_movs1w_mv_plain, @function
rep_movs1w_mv_plain:
      .byte 0xf2,0x66,0xa5
  mov $0x0,%eax

    ret
         .size   rep_movs1w_mv_plain, .-rep_movs1w_mv_plain

    
.globl rep_movs1w_mv_allregs
         .type   rep_movs1w_mv_allregs, @function
rep_movs1w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs1w_mv_allregs, .-rep_movs1w_mv_allregs

    
.globl rep_movs1w_mv_constant_simple
         .type   rep_movs1w_mv_constant_simple, @function
rep_movs1w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs1w_mv_constant_simple, .-rep_movs1w_mv_constant_simple

    
.globl rep_movs1w_mv_constant_complex1
         .type   rep_movs1w_mv_constant_complex1, @function
rep_movs1w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs1w_mv_constant_complex1, .-rep_movs1w_mv_constant_complex1

    
.globl rep_movs1w_mv_constant_complex2
         .type   rep_movs1w_mv_constant_complex2, @function
rep_movs1w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs1w_mv_constant_complex2, .-rep_movs1w_mv_constant_complex2

    
.globl rep_movs1l_mv_plain
         .type   rep_movs1l_mv_plain, @function
rep_movs1l_mv_plain:
      .byte 0xf2,0xa5
  mov $0x0,%eax

    ret
         .size   rep_movs1l_mv_plain, .-rep_movs1l_mv_plain

    
.globl rep_movs1l_mv_allregs
         .type   rep_movs1l_mv_allregs, @function
rep_movs1l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs1l_mv_allregs, .-rep_movs1l_mv_allregs

    
.globl rep_movs1l_mv_constant_simple
         .type   rep_movs1l_mv_constant_simple, @function
rep_movs1l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs1l_mv_constant_simple, .-rep_movs1l_mv_constant_simple

    
.globl rep_movs1l_mv_constant_complex1
         .type   rep_movs1l_mv_constant_complex1, @function
rep_movs1l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs1l_mv_constant_complex1, .-rep_movs1l_mv_constant_complex1

    
.globl rep_movs1l_mv_constant_complex2
         .type   rep_movs1l_mv_constant_complex2, @function
rep_movs1l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs1l_mv_constant_complex2, .-rep_movs1l_mv_constant_complex2

    
.globl rep_movs2b_plain
         .type   rep_movs2b_plain, @function
rep_movs2b_plain:
      .byte 0xf3,0xa4
  mov $0x0,%eax

    ret
         .size   rep_movs2b_plain, .-rep_movs2b_plain

    
.globl rep_movs2b_allregs
         .type   rep_movs2b_allregs, @function
rep_movs2b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs2b_allregs, .-rep_movs2b_allregs

    
.globl rep_movs2b_constant_simple
         .type   rep_movs2b_constant_simple, @function
rep_movs2b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs2b_constant_simple, .-rep_movs2b_constant_simple

    
.globl rep_movs2b_constant_complex1
         .type   rep_movs2b_constant_complex1, @function
rep_movs2b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs2b_constant_complex1, .-rep_movs2b_constant_complex1

    
.globl rep_movs2b_constant_complex2
         .type   rep_movs2b_constant_complex2, @function
rep_movs2b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs2b_constant_complex2, .-rep_movs2b_constant_complex2

    
.globl rep_movs2w_mv_plain
         .type   rep_movs2w_mv_plain, @function
rep_movs2w_mv_plain:
      .byte 0xf3,0x66,0xa5
  mov $0x0,%eax

    ret
         .size   rep_movs2w_mv_plain, .-rep_movs2w_mv_plain

    
.globl rep_movs2w_mv_allregs
         .type   rep_movs2w_mv_allregs, @function
rep_movs2w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs2w_mv_allregs, .-rep_movs2w_mv_allregs

    
.globl rep_movs2w_mv_constant_simple
         .type   rep_movs2w_mv_constant_simple, @function
rep_movs2w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs2w_mv_constant_simple, .-rep_movs2w_mv_constant_simple

    
.globl rep_movs2w_mv_constant_complex1
         .type   rep_movs2w_mv_constant_complex1, @function
rep_movs2w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs2w_mv_constant_complex1, .-rep_movs2w_mv_constant_complex1

    
.globl rep_movs2w_mv_constant_complex2
         .type   rep_movs2w_mv_constant_complex2, @function
rep_movs2w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs2w_mv_constant_complex2, .-rep_movs2w_mv_constant_complex2

    
.globl rep_movs2l_mv_plain
         .type   rep_movs2l_mv_plain, @function
rep_movs2l_mv_plain:
      .byte 0xf3,0xa5
  mov $0x0,%eax

    ret
         .size   rep_movs2l_mv_plain, .-rep_movs2l_mv_plain

    
.globl rep_movs2l_mv_allregs
         .type   rep_movs2l_mv_allregs, @function
rep_movs2l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs2l_mv_allregs, .-rep_movs2l_mv_allregs

    
.globl rep_movs2l_mv_constant_simple
         .type   rep_movs2l_mv_constant_simple, @function
rep_movs2l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs2l_mv_constant_simple, .-rep_movs2l_mv_constant_simple

    
.globl rep_movs2l_mv_constant_complex1
         .type   rep_movs2l_mv_constant_complex1, @function
rep_movs2l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs2l_mv_constant_complex1, .-rep_movs2l_mv_constant_complex1

    
.globl rep_movs2l_mv_constant_complex2
         .type   rep_movs2l_mv_constant_complex2, @function
rep_movs2l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_movs2l_mv_constant_complex2, .-rep_movs2l_mv_constant_complex2

    
.globl rep_outs1b_plain
         .type   rep_outs1b_plain, @function
rep_outs1b_plain:
      .byte 0xf2,0x6e
  mov $0x0,%eax

    ret
         .size   rep_outs1b_plain, .-rep_outs1b_plain

    
.globl rep_outs1b_allregs
         .type   rep_outs1b_allregs, @function
rep_outs1b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs1b_allregs, .-rep_outs1b_allregs

    
.globl rep_outs1b_constant_simple
         .type   rep_outs1b_constant_simple, @function
rep_outs1b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs1b_constant_simple, .-rep_outs1b_constant_simple

    
.globl rep_outs1b_constant_complex1
         .type   rep_outs1b_constant_complex1, @function
rep_outs1b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs1b_constant_complex1, .-rep_outs1b_constant_complex1

    
.globl rep_outs1b_constant_complex2
         .type   rep_outs1b_constant_complex2, @function
rep_outs1b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs1b_constant_complex2, .-rep_outs1b_constant_complex2

    
.globl rep_outs1w_mv_plain
         .type   rep_outs1w_mv_plain, @function
rep_outs1w_mv_plain:
      .byte 0xf2,0x66,0x6f
  mov $0x0,%eax

    ret
         .size   rep_outs1w_mv_plain, .-rep_outs1w_mv_plain

    
.globl rep_outs1w_mv_allregs
         .type   rep_outs1w_mv_allregs, @function
rep_outs1w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs1w_mv_allregs, .-rep_outs1w_mv_allregs

    
.globl rep_outs1w_mv_constant_simple
         .type   rep_outs1w_mv_constant_simple, @function
rep_outs1w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs1w_mv_constant_simple, .-rep_outs1w_mv_constant_simple

    
.globl rep_outs1w_mv_constant_complex1
         .type   rep_outs1w_mv_constant_complex1, @function
rep_outs1w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs1w_mv_constant_complex1, .-rep_outs1w_mv_constant_complex1

    
.globl rep_outs1w_mv_constant_complex2
         .type   rep_outs1w_mv_constant_complex2, @function
rep_outs1w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs1w_mv_constant_complex2, .-rep_outs1w_mv_constant_complex2

    
.globl rep_outs1l_mv_plain
         .type   rep_outs1l_mv_plain, @function
rep_outs1l_mv_plain:
      .byte 0xf2,0x6f
  mov $0x0,%eax

    ret
         .size   rep_outs1l_mv_plain, .-rep_outs1l_mv_plain

    
.globl rep_outs1l_mv_allregs
         .type   rep_outs1l_mv_allregs, @function
rep_outs1l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs1l_mv_allregs, .-rep_outs1l_mv_allregs

    
.globl rep_outs1l_mv_constant_simple
         .type   rep_outs1l_mv_constant_simple, @function
rep_outs1l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs1l_mv_constant_simple, .-rep_outs1l_mv_constant_simple

    
.globl rep_outs1l_mv_constant_complex1
         .type   rep_outs1l_mv_constant_complex1, @function
rep_outs1l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs1l_mv_constant_complex1, .-rep_outs1l_mv_constant_complex1

    
.globl rep_outs1l_mv_constant_complex2
         .type   rep_outs1l_mv_constant_complex2, @function
rep_outs1l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs1l_mv_constant_complex2, .-rep_outs1l_mv_constant_complex2

    
.globl rep_outs2b_plain
         .type   rep_outs2b_plain, @function
rep_outs2b_plain:
      .byte 0xf3,0x6e
  mov $0x0,%eax

    ret
         .size   rep_outs2b_plain, .-rep_outs2b_plain

    
.globl rep_outs2b_allregs
         .type   rep_outs2b_allregs, @function
rep_outs2b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs2b_allregs, .-rep_outs2b_allregs

    
.globl rep_outs2b_constant_simple
         .type   rep_outs2b_constant_simple, @function
rep_outs2b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs2b_constant_simple, .-rep_outs2b_constant_simple

    
.globl rep_outs2b_constant_complex1
         .type   rep_outs2b_constant_complex1, @function
rep_outs2b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs2b_constant_complex1, .-rep_outs2b_constant_complex1

    
.globl rep_outs2b_constant_complex2
         .type   rep_outs2b_constant_complex2, @function
rep_outs2b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs2b_constant_complex2, .-rep_outs2b_constant_complex2

    
.globl rep_outs2w_mv_plain
         .type   rep_outs2w_mv_plain, @function
rep_outs2w_mv_plain:
      .byte 0xf3,0x66,0x6f
  mov $0x0,%eax

    ret
         .size   rep_outs2w_mv_plain, .-rep_outs2w_mv_plain

    
.globl rep_outs2w_mv_allregs
         .type   rep_outs2w_mv_allregs, @function
rep_outs2w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs2w_mv_allregs, .-rep_outs2w_mv_allregs

    
.globl rep_outs2w_mv_constant_simple
         .type   rep_outs2w_mv_constant_simple, @function
rep_outs2w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs2w_mv_constant_simple, .-rep_outs2w_mv_constant_simple

    
.globl rep_outs2w_mv_constant_complex1
         .type   rep_outs2w_mv_constant_complex1, @function
rep_outs2w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs2w_mv_constant_complex1, .-rep_outs2w_mv_constant_complex1

    
.globl rep_outs2w_mv_constant_complex2
         .type   rep_outs2w_mv_constant_complex2, @function
rep_outs2w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs2w_mv_constant_complex2, .-rep_outs2w_mv_constant_complex2

    
.globl rep_outs2l_mv_plain
         .type   rep_outs2l_mv_plain, @function
rep_outs2l_mv_plain:
      .byte 0xf3,0x6f
  mov $0x0,%eax

    ret
         .size   rep_outs2l_mv_plain, .-rep_outs2l_mv_plain

    
.globl rep_outs2l_mv_allregs
         .type   rep_outs2l_mv_allregs, @function
rep_outs2l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs2l_mv_allregs, .-rep_outs2l_mv_allregs

    
.globl rep_outs2l_mv_constant_simple
         .type   rep_outs2l_mv_constant_simple, @function
rep_outs2l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs2l_mv_constant_simple, .-rep_outs2l_mv_constant_simple

    
.globl rep_outs2l_mv_constant_complex1
         .type   rep_outs2l_mv_constant_complex1, @function
rep_outs2l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs2l_mv_constant_complex1, .-rep_outs2l_mv_constant_complex1

    
.globl rep_outs2l_mv_constant_complex2
         .type   rep_outs2l_mv_constant_complex2, @function
rep_outs2l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_outs2l_mv_constant_complex2, .-rep_outs2l_mv_constant_complex2

    
.globl rep_stos1b_plain
         .type   rep_stos1b_plain, @function
rep_stos1b_plain:
      .byte 0xf2,0xaa
  mov $0x0,%eax

    ret
         .size   rep_stos1b_plain, .-rep_stos1b_plain

    
.globl rep_stos1b_allregs
         .type   rep_stos1b_allregs, @function
rep_stos1b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos1b_allregs, .-rep_stos1b_allregs

    
.globl rep_stos1b_constant_simple
         .type   rep_stos1b_constant_simple, @function
rep_stos1b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos1b_constant_simple, .-rep_stos1b_constant_simple

    
.globl rep_stos1b_constant_complex1
         .type   rep_stos1b_constant_complex1, @function
rep_stos1b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos1b_constant_complex1, .-rep_stos1b_constant_complex1

    
.globl rep_stos1b_constant_complex2
         .type   rep_stos1b_constant_complex2, @function
rep_stos1b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos1b_constant_complex2, .-rep_stos1b_constant_complex2

    
.globl rep_stos1w_mv_plain
         .type   rep_stos1w_mv_plain, @function
rep_stos1w_mv_plain:
      .byte 0xf2,0x66,0xab
  mov $0x0,%eax

    ret
         .size   rep_stos1w_mv_plain, .-rep_stos1w_mv_plain

    
.globl rep_stos1w_mv_allregs
         .type   rep_stos1w_mv_allregs, @function
rep_stos1w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos1w_mv_allregs, .-rep_stos1w_mv_allregs

    
.globl rep_stos1w_mv_constant_simple
         .type   rep_stos1w_mv_constant_simple, @function
rep_stos1w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos1w_mv_constant_simple, .-rep_stos1w_mv_constant_simple

    
.globl rep_stos1w_mv_constant_complex1
         .type   rep_stos1w_mv_constant_complex1, @function
rep_stos1w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos1w_mv_constant_complex1, .-rep_stos1w_mv_constant_complex1

    
.globl rep_stos1w_mv_constant_complex2
         .type   rep_stos1w_mv_constant_complex2, @function
rep_stos1w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos1w_mv_constant_complex2, .-rep_stos1w_mv_constant_complex2

    
.globl rep_stos1l_mv_plain
         .type   rep_stos1l_mv_plain, @function
rep_stos1l_mv_plain:
      .byte 0xf2,0xab
  mov $0x0,%eax

    ret
         .size   rep_stos1l_mv_plain, .-rep_stos1l_mv_plain

    
.globl rep_stos1l_mv_allregs
         .type   rep_stos1l_mv_allregs, @function
rep_stos1l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos1l_mv_allregs, .-rep_stos1l_mv_allregs

    
.globl rep_stos1l_mv_constant_simple
         .type   rep_stos1l_mv_constant_simple, @function
rep_stos1l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos1l_mv_constant_simple, .-rep_stos1l_mv_constant_simple

    
.globl rep_stos1l_mv_constant_complex1
         .type   rep_stos1l_mv_constant_complex1, @function
rep_stos1l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos1l_mv_constant_complex1, .-rep_stos1l_mv_constant_complex1

    
.globl rep_stos1l_mv_constant_complex2
         .type   rep_stos1l_mv_constant_complex2, @function
rep_stos1l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos1l_mv_constant_complex2, .-rep_stos1l_mv_constant_complex2

    
.globl rep_stos2b_plain
         .type   rep_stos2b_plain, @function
rep_stos2b_plain:
      .byte 0xf3,0xaa
  mov $0x0,%eax

    ret
         .size   rep_stos2b_plain, .-rep_stos2b_plain

    
.globl rep_stos2b_allregs
         .type   rep_stos2b_allregs, @function
rep_stos2b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos2b_allregs, .-rep_stos2b_allregs

    
.globl rep_stos2b_constant_simple
         .type   rep_stos2b_constant_simple, @function
rep_stos2b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos2b_constant_simple, .-rep_stos2b_constant_simple

    
.globl rep_stos2b_constant_complex1
         .type   rep_stos2b_constant_complex1, @function
rep_stos2b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos2b_constant_complex1, .-rep_stos2b_constant_complex1

    
.globl rep_stos2b_constant_complex2
         .type   rep_stos2b_constant_complex2, @function
rep_stos2b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos2b_constant_complex2, .-rep_stos2b_constant_complex2

    
.globl rep_stos2w_mv_plain
         .type   rep_stos2w_mv_plain, @function
rep_stos2w_mv_plain:
      .byte 0xf3,0x66,0xab
  mov $0x0,%eax

    ret
         .size   rep_stos2w_mv_plain, .-rep_stos2w_mv_plain

    
.globl rep_stos2w_mv_allregs
         .type   rep_stos2w_mv_allregs, @function
rep_stos2w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos2w_mv_allregs, .-rep_stos2w_mv_allregs

    
.globl rep_stos2w_mv_constant_simple
         .type   rep_stos2w_mv_constant_simple, @function
rep_stos2w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos2w_mv_constant_simple, .-rep_stos2w_mv_constant_simple

    
.globl rep_stos2w_mv_constant_complex1
         .type   rep_stos2w_mv_constant_complex1, @function
rep_stos2w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos2w_mv_constant_complex1, .-rep_stos2w_mv_constant_complex1

    
.globl rep_stos2w_mv_constant_complex2
         .type   rep_stos2w_mv_constant_complex2, @function
rep_stos2w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos2w_mv_constant_complex2, .-rep_stos2w_mv_constant_complex2

    
.globl rep_stos2l_mv_plain
         .type   rep_stos2l_mv_plain, @function
rep_stos2l_mv_plain:
      .byte 0xf3,0xab
  mov $0x0,%eax

    ret
         .size   rep_stos2l_mv_plain, .-rep_stos2l_mv_plain

    
.globl rep_stos2l_mv_allregs
         .type   rep_stos2l_mv_allregs, @function
rep_stos2l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos2l_mv_allregs, .-rep_stos2l_mv_allregs

    
.globl rep_stos2l_mv_constant_simple
         .type   rep_stos2l_mv_constant_simple, @function
rep_stos2l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos2l_mv_constant_simple, .-rep_stos2l_mv_constant_simple

    
.globl rep_stos2l_mv_constant_complex1
         .type   rep_stos2l_mv_constant_complex1, @function
rep_stos2l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos2l_mv_constant_complex1, .-rep_stos2l_mv_constant_complex1

    
.globl rep_stos2l_mv_constant_complex2
         .type   rep_stos2l_mv_constant_complex2, @function
rep_stos2l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_stos2l_mv_constant_complex2, .-rep_stos2l_mv_constant_complex2

    
.globl rep_cmps1b_plain
         .type   rep_cmps1b_plain, @function
rep_cmps1b_plain:
      .byte 0xf2,0xa6
  mov $0x0,%eax

    ret
         .size   rep_cmps1b_plain, .-rep_cmps1b_plain

    
.globl rep_cmps1b_allregs
         .type   rep_cmps1b_allregs, @function
rep_cmps1b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1b_allregs, .-rep_cmps1b_allregs

    
.globl rep_cmps1b_constant_simple
         .type   rep_cmps1b_constant_simple, @function
rep_cmps1b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1b_constant_simple, .-rep_cmps1b_constant_simple

    
.globl rep_cmps1b_constant_complex1
         .type   rep_cmps1b_constant_complex1, @function
rep_cmps1b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1b_constant_complex1, .-rep_cmps1b_constant_complex1

    
.globl rep_cmps1b_constant_complex2
         .type   rep_cmps1b_constant_complex2, @function
rep_cmps1b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1b_constant_complex2, .-rep_cmps1b_constant_complex2

    
.globl rep_cmps1w_mv_plain
         .type   rep_cmps1w_mv_plain, @function
rep_cmps1w_mv_plain:
      .byte 0xf2,0x66,0xa7
  mov $0x0,%eax

    ret
         .size   rep_cmps1w_mv_plain, .-rep_cmps1w_mv_plain

    
.globl rep_cmps1w_mv_allregs
         .type   rep_cmps1w_mv_allregs, @function
rep_cmps1w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1w_mv_allregs, .-rep_cmps1w_mv_allregs

    
.globl rep_cmps1w_mv_constant_simple
         .type   rep_cmps1w_mv_constant_simple, @function
rep_cmps1w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1w_mv_constant_simple, .-rep_cmps1w_mv_constant_simple

    
.globl rep_cmps1w_mv_constant_complex1
         .type   rep_cmps1w_mv_constant_complex1, @function
rep_cmps1w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1w_mv_constant_complex1, .-rep_cmps1w_mv_constant_complex1

    
.globl rep_cmps1w_mv_constant_complex2
         .type   rep_cmps1w_mv_constant_complex2, @function
rep_cmps1w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1w_mv_constant_complex2, .-rep_cmps1w_mv_constant_complex2

    
.globl rep_cmps1l_mv_plain
         .type   rep_cmps1l_mv_plain, @function
rep_cmps1l_mv_plain:
      .byte 0xf2,0xa7
  mov $0x0,%eax

    ret
         .size   rep_cmps1l_mv_plain, .-rep_cmps1l_mv_plain

    
.globl rep_cmps1l_mv_allregs
         .type   rep_cmps1l_mv_allregs, @function
rep_cmps1l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1l_mv_allregs, .-rep_cmps1l_mv_allregs

    
.globl rep_cmps1l_mv_constant_simple
         .type   rep_cmps1l_mv_constant_simple, @function
rep_cmps1l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1l_mv_constant_simple, .-rep_cmps1l_mv_constant_simple

    
.globl rep_cmps1l_mv_constant_complex1
         .type   rep_cmps1l_mv_constant_complex1, @function
rep_cmps1l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1l_mv_constant_complex1, .-rep_cmps1l_mv_constant_complex1

    
.globl rep_cmps1l_mv_constant_complex2
         .type   rep_cmps1l_mv_constant_complex2, @function
rep_cmps1l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1l_mv_constant_complex2, .-rep_cmps1l_mv_constant_complex2

    
.globl rep_cmps2b_plain
         .type   rep_cmps2b_plain, @function
rep_cmps2b_plain:
      .byte 0xf3,0xa6
  mov $0x0,%eax

    ret
         .size   rep_cmps2b_plain, .-rep_cmps2b_plain

    
.globl rep_cmps2b_allregs
         .type   rep_cmps2b_allregs, @function
rep_cmps2b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2b_allregs, .-rep_cmps2b_allregs

    
.globl rep_cmps2b_constant_simple
         .type   rep_cmps2b_constant_simple, @function
rep_cmps2b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2b_constant_simple, .-rep_cmps2b_constant_simple

    
.globl rep_cmps2b_constant_complex1
         .type   rep_cmps2b_constant_complex1, @function
rep_cmps2b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2b_constant_complex1, .-rep_cmps2b_constant_complex1

    
.globl rep_cmps2b_constant_complex2
         .type   rep_cmps2b_constant_complex2, @function
rep_cmps2b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2b_constant_complex2, .-rep_cmps2b_constant_complex2

    
.globl rep_cmps2w_mv_plain
         .type   rep_cmps2w_mv_plain, @function
rep_cmps2w_mv_plain:
      .byte 0xf3,0x66,0xa7
  mov $0x0,%eax

    ret
         .size   rep_cmps2w_mv_plain, .-rep_cmps2w_mv_plain

    
.globl rep_cmps2w_mv_allregs
         .type   rep_cmps2w_mv_allregs, @function
rep_cmps2w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2w_mv_allregs, .-rep_cmps2w_mv_allregs

    
.globl rep_cmps2w_mv_constant_simple
         .type   rep_cmps2w_mv_constant_simple, @function
rep_cmps2w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2w_mv_constant_simple, .-rep_cmps2w_mv_constant_simple

    
.globl rep_cmps2w_mv_constant_complex1
         .type   rep_cmps2w_mv_constant_complex1, @function
rep_cmps2w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2w_mv_constant_complex1, .-rep_cmps2w_mv_constant_complex1

    
.globl rep_cmps2w_mv_constant_complex2
         .type   rep_cmps2w_mv_constant_complex2, @function
rep_cmps2w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2w_mv_constant_complex2, .-rep_cmps2w_mv_constant_complex2

    
.globl rep_cmps2l_mv_plain
         .type   rep_cmps2l_mv_plain, @function
rep_cmps2l_mv_plain:
      .byte 0xf3,0xa7
  mov $0x0,%eax

    ret
         .size   rep_cmps2l_mv_plain, .-rep_cmps2l_mv_plain

    
.globl rep_cmps2l_mv_allregs
         .type   rep_cmps2l_mv_allregs, @function
rep_cmps2l_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2l_mv_allregs, .-rep_cmps2l_mv_allregs

    
.globl rep_cmps2l_mv_constant_simple
         .type   rep_cmps2l_mv_constant_simple, @function
rep_cmps2l_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2l_mv_constant_simple, .-rep_cmps2l_mv_constant_simple

    
.globl rep_cmps2l_mv_constant_complex1
         .type   rep_cmps2l_mv_constant_complex1, @function
rep_cmps2l_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2l_mv_constant_complex1, .-rep_cmps2l_mv_constant_complex1

    
.globl rep_cmps2l_mv_constant_complex2
         .type   rep_cmps2l_mv_constant_complex2, @function
rep_cmps2l_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2l_mv_constant_complex2, .-rep_cmps2l_mv_constant_complex2

    
.globl rep_cmps_seg1_mv_plain
         .type   rep_cmps_seg1_mv_plain, @function
rep_cmps_seg1_mv_plain:
      .byte 0x36,0xf2,0xa6
  mov $0x0,%eax

    ret
         .size   rep_cmps_seg1_mv_plain, .-rep_cmps_seg1_mv_plain

    
.globl rep_cmps_seg1_mv_allregs
         .type   rep_cmps_seg1_mv_allregs, @function
rep_cmps_seg1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps_seg1_mv_allregs, .-rep_cmps_seg1_mv_allregs

    
.globl rep_cmps_seg1_mv_constant_simple
         .type   rep_cmps_seg1_mv_constant_simple, @function
rep_cmps_seg1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps_seg1_mv_constant_simple, .-rep_cmps_seg1_mv_constant_simple

    
.globl rep_cmps_seg1_mv_constant_complex1
         .type   rep_cmps_seg1_mv_constant_complex1, @function
rep_cmps_seg1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps_seg1_mv_constant_complex1, .-rep_cmps_seg1_mv_constant_complex1

    
.globl rep_cmps_seg1_mv_constant_complex2
         .type   rep_cmps_seg1_mv_constant_complex2, @function
rep_cmps_seg1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps_seg1_mv_constant_complex2, .-rep_cmps_seg1_mv_constant_complex2

    
.globl rep_cmps_clear_mv_plain
         .type   rep_cmps_clear_mv_plain, @function
rep_cmps_clear_mv_plain:
      .byte 0xfc,0x36,0xf2,0xa6
  mov $0x0,%eax

    ret
         .size   rep_cmps_clear_mv_plain, .-rep_cmps_clear_mv_plain

    
.globl rep_cmps_clear_mv_allregs
         .type   rep_cmps_clear_mv_allregs, @function
rep_cmps_clear_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xfc,0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps_clear_mv_allregs, .-rep_cmps_clear_mv_allregs

    
.globl rep_cmps_clear_mv_constant_simple
         .type   rep_cmps_clear_mv_constant_simple, @function
rep_cmps_clear_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xfc,0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps_clear_mv_constant_simple, .-rep_cmps_clear_mv_constant_simple

    
.globl rep_cmps_clear_mv_constant_complex1
         .type   rep_cmps_clear_mv_constant_complex1, @function
rep_cmps_clear_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xfc,0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps_clear_mv_constant_complex1, .-rep_cmps_clear_mv_constant_complex1

    
.globl rep_cmps_clear_mv_constant_complex2
         .type   rep_cmps_clear_mv_constant_complex2, @function
rep_cmps_clear_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xfc,0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps_clear_mv_constant_complex2, .-rep_cmps_clear_mv_constant_complex2

    
.globl rep_cmps_set_mv_plain
         .type   rep_cmps_set_mv_plain, @function
rep_cmps_set_mv_plain:
      .byte 0xfd,0x36,0xf2,0xa6
  mov $0x0,%eax

    ret
         .size   rep_cmps_set_mv_plain, .-rep_cmps_set_mv_plain

    
.globl rep_cmps_set_mv_allregs
         .type   rep_cmps_set_mv_allregs, @function
rep_cmps_set_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xfd,0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps_set_mv_allregs, .-rep_cmps_set_mv_allregs

    
.globl rep_cmps_set_mv_constant_simple
         .type   rep_cmps_set_mv_constant_simple, @function
rep_cmps_set_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xfd,0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps_set_mv_constant_simple, .-rep_cmps_set_mv_constant_simple

    
.globl rep_cmps_set_mv_constant_complex1
         .type   rep_cmps_set_mv_constant_complex1, @function
rep_cmps_set_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xfd,0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps_set_mv_constant_complex1, .-rep_cmps_set_mv_constant_complex1

    
.globl rep_cmps_set_mv_constant_complex2
         .type   rep_cmps_set_mv_constant_complex2, @function
rep_cmps_set_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xfd,0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps_set_mv_constant_complex2, .-rep_cmps_set_mv_constant_complex2

    
.globl rep_scas1b_plain
         .type   rep_scas1b_plain, @function
rep_scas1b_plain:
      .byte 0xf2,0xae
  mov $0x0,%eax

    ret
         .size   rep_scas1b_plain, .-rep_scas1b_plain

    
.globl rep_scas1b_allregs
         .type   rep_scas1b_allregs, @function
rep_scas1b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas1b_allregs, .-rep_scas1b_allregs

    
.globl rep_scas1b_constant_simple
         .type   rep_scas1b_constant_simple, @function
rep_scas1b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas1b_constant_simple, .-rep_scas1b_constant_simple

    
.globl rep_scas1b_constant_complex1
         .type   rep_scas1b_constant_complex1, @function
rep_scas1b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas1b_constant_complex1, .-rep_scas1b_constant_complex1

    
.globl rep_scas1b_constant_complex2
         .type   rep_scas1b_constant_complex2, @function
rep_scas1b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas1b_constant_complex2, .-rep_scas1b_constant_complex2

    
.globl rep_scas1w_mv_plain
         .type   rep_scas1w_mv_plain, @function
rep_scas1w_mv_plain:
      .byte 0xf2,0x66,0xaf
  mov $0x0,%eax

    ret
         .size   rep_scas1w_mv_plain, .-rep_scas1w_mv_plain

    
.globl rep_scas1w_mv_allregs
         .type   rep_scas1w_mv_allregs, @function
rep_scas1w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas1w_mv_allregs, .-rep_scas1w_mv_allregs

    
.globl rep_scas1w_mv_constant_simple
         .type   rep_scas1w_mv_constant_simple, @function
rep_scas1w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas1w_mv_constant_simple, .-rep_scas1w_mv_constant_simple

    
.globl rep_scas1w_mv_constant_complex1
         .type   rep_scas1w_mv_constant_complex1, @function
rep_scas1w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas1w_mv_constant_complex1, .-rep_scas1w_mv_constant_complex1

    
.globl rep_scas1w_mv_constant_complex2
         .type   rep_scas1w_mv_constant_complex2, @function
rep_scas1w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas1w_mv_constant_complex2, .-rep_scas1w_mv_constant_complex2

    
.globl rep_scas1l_plain
         .type   rep_scas1l_plain, @function
rep_scas1l_plain:
      .byte 0xf2,0xaf
  mov $0x0,%eax

    ret
         .size   rep_scas1l_plain, .-rep_scas1l_plain

    
.globl rep_scas1l_allregs
         .type   rep_scas1l_allregs, @function
rep_scas1l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas1l_allregs, .-rep_scas1l_allregs

    
.globl rep_scas1l_constant_simple
         .type   rep_scas1l_constant_simple, @function
rep_scas1l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas1l_constant_simple, .-rep_scas1l_constant_simple

    
.globl rep_scas1l_constant_complex1
         .type   rep_scas1l_constant_complex1, @function
rep_scas1l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas1l_constant_complex1, .-rep_scas1l_constant_complex1

    
.globl rep_scas1l_constant_complex2
         .type   rep_scas1l_constant_complex2, @function
rep_scas1l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas1l_constant_complex2, .-rep_scas1l_constant_complex2

    
.globl rep_scas2b_plain
         .type   rep_scas2b_plain, @function
rep_scas2b_plain:
      .byte 0xf3,0xae
  mov $0x0,%eax

    ret
         .size   rep_scas2b_plain, .-rep_scas2b_plain

    
.globl rep_scas2b_allregs
         .type   rep_scas2b_allregs, @function
rep_scas2b_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas2b_allregs, .-rep_scas2b_allregs

    
.globl rep_scas2b_constant_simple
         .type   rep_scas2b_constant_simple, @function
rep_scas2b_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas2b_constant_simple, .-rep_scas2b_constant_simple

    
.globl rep_scas2b_constant_complex1
         .type   rep_scas2b_constant_complex1, @function
rep_scas2b_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas2b_constant_complex1, .-rep_scas2b_constant_complex1

    
.globl rep_scas2b_constant_complex2
         .type   rep_scas2b_constant_complex2, @function
rep_scas2b_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas2b_constant_complex2, .-rep_scas2b_constant_complex2

    
.globl rep_scas2w_mv_plain
         .type   rep_scas2w_mv_plain, @function
rep_scas2w_mv_plain:
      .byte 0xf3,0x66,0xaf
  mov $0x0,%eax

    ret
         .size   rep_scas2w_mv_plain, .-rep_scas2w_mv_plain

    
.globl rep_scas2w_mv_allregs
         .type   rep_scas2w_mv_allregs, @function
rep_scas2w_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas2w_mv_allregs, .-rep_scas2w_mv_allregs

    
.globl rep_scas2w_mv_constant_simple
         .type   rep_scas2w_mv_constant_simple, @function
rep_scas2w_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas2w_mv_constant_simple, .-rep_scas2w_mv_constant_simple

    
.globl rep_scas2w_mv_constant_complex1
         .type   rep_scas2w_mv_constant_complex1, @function
rep_scas2w_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas2w_mv_constant_complex1, .-rep_scas2w_mv_constant_complex1

    
.globl rep_scas2w_mv_constant_complex2
         .type   rep_scas2w_mv_constant_complex2, @function
rep_scas2w_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas2w_mv_constant_complex2, .-rep_scas2w_mv_constant_complex2

    
.globl rep_scas2l_plain
         .type   rep_scas2l_plain, @function
rep_scas2l_plain:
      .byte 0xf3,0xaf
  mov $0x0,%eax

    ret
         .size   rep_scas2l_plain, .-rep_scas2l_plain

    
.globl rep_scas2l_allregs
         .type   rep_scas2l_allregs, @function
rep_scas2l_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf3,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas2l_allregs, .-rep_scas2l_allregs

    
.globl rep_scas2l_constant_simple
         .type   rep_scas2l_constant_simple, @function
rep_scas2l_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf3,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas2l_constant_simple, .-rep_scas2l_constant_simple

    
.globl rep_scas2l_constant_complex1
         .type   rep_scas2l_constant_complex1, @function
rep_scas2l_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf3,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas2l_constant_complex1, .-rep_scas2l_constant_complex1

    
.globl rep_scas2l_constant_complex2
         .type   rep_scas2l_constant_complex2, @function
rep_scas2l_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf3,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas2l_constant_complex2, .-rep_scas2l_constant_complex2

    
.globl rep_scas_seg_mv_plain
         .type   rep_scas_seg_mv_plain, @function
rep_scas_seg_mv_plain:
      .byte 0xf2,0xae
  mov $0x0,%eax

    ret
         .size   rep_scas_seg_mv_plain, .-rep_scas_seg_mv_plain

    
.globl rep_scas_seg_mv_allregs
         .type   rep_scas_seg_mv_allregs, @function
rep_scas_seg_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf2,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas_seg_mv_allregs, .-rep_scas_seg_mv_allregs

    
.globl rep_scas_seg_mv_constant_simple
         .type   rep_scas_seg_mv_constant_simple, @function
rep_scas_seg_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf2,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas_seg_mv_constant_simple, .-rep_scas_seg_mv_constant_simple

    
.globl rep_scas_seg_mv_constant_complex1
         .type   rep_scas_seg_mv_constant_complex1, @function
rep_scas_seg_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf2,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas_seg_mv_constant_complex1, .-rep_scas_seg_mv_constant_complex1

    
.globl rep_scas_seg_mv_constant_complex2
         .type   rep_scas_seg_mv_constant_complex2, @function
rep_scas_seg_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf2,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas_seg_mv_constant_complex2, .-rep_scas_seg_mv_constant_complex2

    
.globl rep_scas_memchr_mv_plain
         .type   rep_scas_memchr_mv_plain, @function
rep_scas_memchr_mv_plain:
      .byte 0x57,0x8b,0x7c,0x24,0x08,0x8b,0x44,0x24,0x0c,0x8b,0x4c,0x24,0x10,0x85,0xc9,0x74,0x0a,0xfc,0xf2,0xae,0x75,0x05,0x8d,0x47,0xff,0x5f,0xc3,0x31,0xc0,0x5f,0xc3
  mov $0x0,%eax

    ret
         .size   rep_scas_memchr_mv_plain, .-rep_scas_memchr_mv_plain

    
.globl rep_scas_memchr_mv_allregs
         .type   rep_scas_memchr_mv_allregs, @function
rep_scas_memchr_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x57,0x8b,0x7c,0x24,0x08,0x8b,0x44,0x24,0x0c,0x8b,0x4c,0x24,0x10,0x85,0xc9,0x74,0x0a,0xfc,0xf2,0xae,0x75,0x05,0x8d,0x47,0xff,0x5f,0xc3,0x31,0xc0,0x5f,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas_memchr_mv_allregs, .-rep_scas_memchr_mv_allregs

    
.globl rep_scas_memchr_mv_constant_simple
         .type   rep_scas_memchr_mv_constant_simple, @function
rep_scas_memchr_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x57,0x8b,0x7c,0x24,0x08,0x8b,0x44,0x24,0x0c,0x8b,0x4c,0x24,0x10,0x85,0xc9,0x74,0x0a,0xfc,0xf2,0xae,0x75,0x05,0x8d,0x47,0xff,0x5f,0xc3,0x31,0xc0,0x5f,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas_memchr_mv_constant_simple, .-rep_scas_memchr_mv_constant_simple

    
.globl rep_scas_memchr_mv_constant_complex1
         .type   rep_scas_memchr_mv_constant_complex1, @function
rep_scas_memchr_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x57,0x8b,0x7c,0x24,0x08,0x8b,0x44,0x24,0x0c,0x8b,0x4c,0x24,0x10,0x85,0xc9,0x74,0x0a,0xfc,0xf2,0xae,0x75,0x05,0x8d,0x47,0xff,0x5f,0xc3,0x31,0xc0,0x5f,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas_memchr_mv_constant_complex1, .-rep_scas_memchr_mv_constant_complex1

    
.globl rep_scas_memchr_mv_constant_complex2
         .type   rep_scas_memchr_mv_constant_complex2, @function
rep_scas_memchr_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x57,0x8b,0x7c,0x24,0x08,0x8b,0x44,0x24,0x0c,0x8b,0x4c,0x24,0x10,0x85,0xc9,0x74,0x0a,0xfc,0xf2,0xae,0x75,0x05,0x8d,0x47,0xff,0x5f,0xc3,0x31,0xc0,0x5f,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_scas_memchr_mv_constant_complex2, .-rep_scas_memchr_mv_constant_complex2

    
.globl rep_cmps1_test_with_count_0_mv_plain
         .type   rep_cmps1_test_with_count_0_mv_plain, @function
rep_cmps1_test_with_count_0_mv_plain:
      mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $0,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_with_count_0_mv_plain, .-rep_cmps1_test_with_count_0_mv_plain

    
.globl rep_cmps1_test_with_count_0_mv_allregs
         .type   rep_cmps1_test_with_count_0_mv_allregs, @function
rep_cmps1_test_with_count_0_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $0,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_with_count_0_mv_allregs, .-rep_cmps1_test_with_count_0_mv_allregs

    
.globl rep_cmps1_test_with_count_0_mv_constant_simple
         .type   rep_cmps1_test_with_count_0_mv_constant_simple, @function
rep_cmps1_test_with_count_0_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $0,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_with_count_0_mv_constant_simple, .-rep_cmps1_test_with_count_0_mv_constant_simple

    
.globl rep_cmps1_test_with_count_0_mv_constant_complex1
         .type   rep_cmps1_test_with_count_0_mv_constant_complex1, @function
rep_cmps1_test_with_count_0_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $0,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_with_count_0_mv_constant_complex1, .-rep_cmps1_test_with_count_0_mv_constant_complex1

    
.globl rep_cmps1_test_with_count_0_mv_constant_complex2
         .type   rep_cmps1_test_with_count_0_mv_constant_complex2, @function
rep_cmps1_test_with_count_0_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $0,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_with_count_0_mv_constant_complex2, .-rep_cmps1_test_with_count_0_mv_constant_complex2

    
.globl rep_cmps1_test_all_4bytes_differ_mv_plain
         .type   rep_cmps1_test_all_4bytes_differ_mv_plain, @function
rep_cmps1_test_all_4bytes_differ_mv_plain:
      mov $barr_abcde,%edi;mov $barr_ghije,%esi;mov $4,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_ghije,%esi;popf
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_all_4bytes_differ_mv_plain, .-rep_cmps1_test_all_4bytes_differ_mv_plain

    
.globl rep_cmps1_test_all_4bytes_differ_mv_allregs
         .type   rep_cmps1_test_all_4bytes_differ_mv_allregs, @function
rep_cmps1_test_all_4bytes_differ_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_ghije,%esi;mov $4,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_ghije,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_all_4bytes_differ_mv_allregs, .-rep_cmps1_test_all_4bytes_differ_mv_allregs

    
.globl rep_cmps1_test_all_4bytes_differ_mv_constant_simple
         .type   rep_cmps1_test_all_4bytes_differ_mv_constant_simple, @function
rep_cmps1_test_all_4bytes_differ_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_ghije,%esi;mov $4,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_ghije,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_all_4bytes_differ_mv_constant_simple, .-rep_cmps1_test_all_4bytes_differ_mv_constant_simple

    
.globl rep_cmps1_test_all_4bytes_differ_mv_constant_complex1
         .type   rep_cmps1_test_all_4bytes_differ_mv_constant_complex1, @function
rep_cmps1_test_all_4bytes_differ_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_ghije,%esi;mov $4,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_ghije,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_all_4bytes_differ_mv_constant_complex1, .-rep_cmps1_test_all_4bytes_differ_mv_constant_complex1

    
.globl rep_cmps1_test_all_4bytes_differ_mv_constant_complex2
         .type   rep_cmps1_test_all_4bytes_differ_mv_constant_complex2, @function
rep_cmps1_test_all_4bytes_differ_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_ghije,%esi;mov $4,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_ghije,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_all_4bytes_differ_mv_constant_complex2, .-rep_cmps1_test_all_4bytes_differ_mv_constant_complex2

    
.globl rep_cmps1_test_5th_byte_is_equal_mv_plain
         .type   rep_cmps1_test_5th_byte_is_equal_mv_plain, @function
rep_cmps1_test_5th_byte_is_equal_mv_plain:
      mov $barr_abcde,%edi;mov $barr_ghije,%esi;mov $5,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_ghije,%esi;popf
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_5th_byte_is_equal_mv_plain, .-rep_cmps1_test_5th_byte_is_equal_mv_plain

    
.globl rep_cmps1_test_5th_byte_is_equal_mv_allregs
         .type   rep_cmps1_test_5th_byte_is_equal_mv_allregs, @function
rep_cmps1_test_5th_byte_is_equal_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_ghije,%esi;mov $5,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_ghije,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_5th_byte_is_equal_mv_allregs, .-rep_cmps1_test_5th_byte_is_equal_mv_allregs

    
.globl rep_cmps1_test_5th_byte_is_equal_mv_constant_simple
         .type   rep_cmps1_test_5th_byte_is_equal_mv_constant_simple, @function
rep_cmps1_test_5th_byte_is_equal_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_ghije,%esi;mov $5,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_ghije,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_5th_byte_is_equal_mv_constant_simple, .-rep_cmps1_test_5th_byte_is_equal_mv_constant_simple

    
.globl rep_cmps1_test_5th_byte_is_equal_mv_constant_complex1
         .type   rep_cmps1_test_5th_byte_is_equal_mv_constant_complex1, @function
rep_cmps1_test_5th_byte_is_equal_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_ghije,%esi;mov $5,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_ghije,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_5th_byte_is_equal_mv_constant_complex1, .-rep_cmps1_test_5th_byte_is_equal_mv_constant_complex1

    
.globl rep_cmps1_test_5th_byte_is_equal_mv_constant_complex2
         .type   rep_cmps1_test_5th_byte_is_equal_mv_constant_complex2, @function
rep_cmps1_test_5th_byte_is_equal_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_ghije,%esi;mov $5,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_ghije,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps1_test_5th_byte_is_equal_mv_constant_complex2, .-rep_cmps1_test_5th_byte_is_equal_mv_constant_complex2

    
.globl rep_cmps2_test_with_count_0_mv_plain
         .type   rep_cmps2_test_with_count_0_mv_plain, @function
rep_cmps2_test_with_count_0_mv_plain:
      mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $0,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_with_count_0_mv_plain, .-rep_cmps2_test_with_count_0_mv_plain

    
.globl rep_cmps2_test_with_count_0_mv_allregs
         .type   rep_cmps2_test_with_count_0_mv_allregs, @function
rep_cmps2_test_with_count_0_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $0,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_with_count_0_mv_allregs, .-rep_cmps2_test_with_count_0_mv_allregs

    
.globl rep_cmps2_test_with_count_0_mv_constant_simple
         .type   rep_cmps2_test_with_count_0_mv_constant_simple, @function
rep_cmps2_test_with_count_0_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $0,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_with_count_0_mv_constant_simple, .-rep_cmps2_test_with_count_0_mv_constant_simple

    
.globl rep_cmps2_test_with_count_0_mv_constant_complex1
         .type   rep_cmps2_test_with_count_0_mv_constant_complex1, @function
rep_cmps2_test_with_count_0_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $0,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_with_count_0_mv_constant_complex1, .-rep_cmps2_test_with_count_0_mv_constant_complex1

    
.globl rep_cmps2_test_with_count_0_mv_constant_complex2
         .type   rep_cmps2_test_with_count_0_mv_constant_complex2, @function
rep_cmps2_test_with_count_0_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $0,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_with_count_0_mv_constant_complex2, .-rep_cmps2_test_with_count_0_mv_constant_complex2

    
.globl rep_cmps2_test_all_4_bytes_are_equal_mv_plain
         .type   rep_cmps2_test_all_4_bytes_are_equal_mv_plain, @function
rep_cmps2_test_all_4_bytes_are_equal_mv_plain:
      mov $barr_abcde,%edi;mov $barr_abcde,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcde,%esi;popf
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_all_4_bytes_are_equal_mv_plain, .-rep_cmps2_test_all_4_bytes_are_equal_mv_plain

    
.globl rep_cmps2_test_all_4_bytes_are_equal_mv_allregs
         .type   rep_cmps2_test_all_4_bytes_are_equal_mv_allregs, @function
rep_cmps2_test_all_4_bytes_are_equal_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcde,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcde,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_all_4_bytes_are_equal_mv_allregs, .-rep_cmps2_test_all_4_bytes_are_equal_mv_allregs

    
.globl rep_cmps2_test_all_4_bytes_are_equal_mv_constant_simple
         .type   rep_cmps2_test_all_4_bytes_are_equal_mv_constant_simple, @function
rep_cmps2_test_all_4_bytes_are_equal_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcde,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcde,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_all_4_bytes_are_equal_mv_constant_simple, .-rep_cmps2_test_all_4_bytes_are_equal_mv_constant_simple

    
.globl rep_cmps2_test_all_4_bytes_are_equal_mv_constant_complex1
         .type   rep_cmps2_test_all_4_bytes_are_equal_mv_constant_complex1, @function
rep_cmps2_test_all_4_bytes_are_equal_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcde,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcde,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_all_4_bytes_are_equal_mv_constant_complex1, .-rep_cmps2_test_all_4_bytes_are_equal_mv_constant_complex1

    
.globl rep_cmps2_test_all_4_bytes_are_equal_mv_constant_complex2
         .type   rep_cmps2_test_all_4_bytes_are_equal_mv_constant_complex2, @function
rep_cmps2_test_all_4_bytes_are_equal_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcde,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcde,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_all_4_bytes_are_equal_mv_constant_complex2, .-rep_cmps2_test_all_4_bytes_are_equal_mv_constant_complex2

    
.globl rep_cmps2_test_more_after_3_bytes_mv_plain
         .type   rep_cmps2_test_more_after_3_bytes_mv_plain, @function
rep_cmps2_test_more_after_3_bytes_mv_plain:
      mov $barr_abcde,%edi;mov $barr_abcxe,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcxe,%esi;popf
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_more_after_3_bytes_mv_plain, .-rep_cmps2_test_more_after_3_bytes_mv_plain

    
.globl rep_cmps2_test_more_after_3_bytes_mv_allregs
         .type   rep_cmps2_test_more_after_3_bytes_mv_allregs, @function
rep_cmps2_test_more_after_3_bytes_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcxe,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcxe,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_more_after_3_bytes_mv_allregs, .-rep_cmps2_test_more_after_3_bytes_mv_allregs

    
.globl rep_cmps2_test_more_after_3_bytes_mv_constant_simple
         .type   rep_cmps2_test_more_after_3_bytes_mv_constant_simple, @function
rep_cmps2_test_more_after_3_bytes_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcxe,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcxe,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_more_after_3_bytes_mv_constant_simple, .-rep_cmps2_test_more_after_3_bytes_mv_constant_simple

    
.globl rep_cmps2_test_more_after_3_bytes_mv_constant_complex1
         .type   rep_cmps2_test_more_after_3_bytes_mv_constant_complex1, @function
rep_cmps2_test_more_after_3_bytes_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcxe,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcxe,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_more_after_3_bytes_mv_constant_complex1, .-rep_cmps2_test_more_after_3_bytes_mv_constant_complex1

    
.globl rep_cmps2_test_more_after_3_bytes_mv_constant_complex2
         .type   rep_cmps2_test_more_after_3_bytes_mv_constant_complex2, @function
rep_cmps2_test_more_after_3_bytes_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcxe,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcxe,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_more_after_3_bytes_mv_constant_complex2, .-rep_cmps2_test_more_after_3_bytes_mv_constant_complex2

    
.globl rep_cmps2_test_less_after_3_bytes_mv_plain
         .type   rep_cmps2_test_less_after_3_bytes_mv_plain, @function
rep_cmps2_test_less_after_3_bytes_mv_plain:
      mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_less_after_3_bytes_mv_plain, .-rep_cmps2_test_less_after_3_bytes_mv_plain

    
.globl rep_cmps2_test_less_after_3_bytes_mv_allregs
         .type   rep_cmps2_test_less_after_3_bytes_mv_allregs, @function
rep_cmps2_test_less_after_3_bytes_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_less_after_3_bytes_mv_allregs, .-rep_cmps2_test_less_after_3_bytes_mv_allregs

    
.globl rep_cmps2_test_less_after_3_bytes_mv_constant_simple
         .type   rep_cmps2_test_less_after_3_bytes_mv_constant_simple, @function
rep_cmps2_test_less_after_3_bytes_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_less_after_3_bytes_mv_constant_simple, .-rep_cmps2_test_less_after_3_bytes_mv_constant_simple

    
.globl rep_cmps2_test_less_after_3_bytes_mv_constant_complex1
         .type   rep_cmps2_test_less_after_3_bytes_mv_constant_complex1, @function
rep_cmps2_test_less_after_3_bytes_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_less_after_3_bytes_mv_constant_complex1, .-rep_cmps2_test_less_after_3_bytes_mv_constant_complex1

    
.globl rep_cmps2_test_less_after_3_bytes_mv_constant_complex2
         .type   rep_cmps2_test_less_after_3_bytes_mv_constant_complex2, @function
rep_cmps2_test_less_after_3_bytes_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_cmps2_test_less_after_3_bytes_mv_constant_complex2, .-rep_cmps2_test_less_after_3_bytes_mv_constant_complex2

    
.globl rep_lods_test_mv_plain
         .type   rep_lods_test_mv_plain, @function
rep_lods_test_mv_plain:
      mov $barr_abcde,%esi;mov $3,%ecx; repz lods %ds:(%esi),%al;sub $barr_abcde,%esi
  mov $0x0,%eax

    ret
         .size   rep_lods_test_mv_plain, .-rep_lods_test_mv_plain

    
.globl rep_lods_test_mv_allregs
         .type   rep_lods_test_mv_allregs, @function
rep_lods_test_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $barr_abcde,%esi;mov $3,%ecx; repz lods %ds:(%esi),%al;sub $barr_abcde,%esi
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods_test_mv_allregs, .-rep_lods_test_mv_allregs

    
.globl rep_lods_test_mv_constant_simple
         .type   rep_lods_test_mv_constant_simple, @function
rep_lods_test_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $barr_abcde,%esi;mov $3,%ecx; repz lods %ds:(%esi),%al;sub $barr_abcde,%esi
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods_test_mv_constant_simple, .-rep_lods_test_mv_constant_simple

    
.globl rep_lods_test_mv_constant_complex1
         .type   rep_lods_test_mv_constant_complex1, @function
rep_lods_test_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $barr_abcde,%esi;mov $3,%ecx; repz lods %ds:(%esi),%al;sub $barr_abcde,%esi
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods_test_mv_constant_complex1, .-rep_lods_test_mv_constant_complex1

    
.globl rep_lods_test_mv_constant_complex2
         .type   rep_lods_test_mv_constant_complex2, @function
rep_lods_test_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $barr_abcde,%esi;mov $3,%ecx; repz lods %ds:(%esi),%al;sub $barr_abcde,%esi
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   rep_lods_test_mv_constant_complex2, .-rep_lods_test_mv_constant_complex2

    
.globl ret1_plain
         .type   ret1_plain, @function
ret1_plain:
      .byte 0xc3
  mov $0x0,%eax

    ret
         .size   ret1_plain, .-ret1_plain

    
.globl ret1_allregs
         .type   ret1_allregs, @function
ret1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret1_allregs, .-ret1_allregs

    
.globl ret1_constant_simple
         .type   ret1_constant_simple, @function
ret1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret1_constant_simple, .-ret1_constant_simple

    
.globl ret1_constant_complex1
         .type   ret1_constant_complex1, @function
ret1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret1_constant_complex1, .-ret1_constant_complex1

    
.globl ret1_constant_complex2
         .type   ret1_constant_complex2, @function
ret1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret1_constant_complex2, .-ret1_constant_complex2

    
.globl ret2_mv_plain
         .type   ret2_mv_plain, @function
ret2_mv_plain:
      .byte 0x66,0xc3
  mov $0x0,%eax

    ret
         .size   ret2_mv_plain, .-ret2_mv_plain

    
.globl ret2_mv_allregs
         .type   ret2_mv_allregs, @function
ret2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret2_mv_allregs, .-ret2_mv_allregs

    
.globl ret2_mv_constant_simple
         .type   ret2_mv_constant_simple, @function
ret2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret2_mv_constant_simple, .-ret2_mv_constant_simple

    
.globl ret2_mv_constant_complex1
         .type   ret2_mv_constant_complex1, @function
ret2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret2_mv_constant_complex1, .-ret2_mv_constant_complex1

    
.globl ret2_mv_constant_complex2
         .type   ret2_mv_constant_complex2, @function
ret2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret2_mv_constant_complex2, .-ret2_mv_constant_complex2

    
.globl ret3_mv_plain
         .type   ret3_mv_plain, @function
ret3_mv_plain:
      .byte 0xcb
  mov $0x0,%eax

    ret
         .size   ret3_mv_plain, .-ret3_mv_plain

    
.globl ret3_mv_allregs
         .type   ret3_mv_allregs, @function
ret3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xcb
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret3_mv_allregs, .-ret3_mv_allregs

    
.globl ret3_mv_constant_simple
         .type   ret3_mv_constant_simple, @function
ret3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xcb
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret3_mv_constant_simple, .-ret3_mv_constant_simple

    
.globl ret3_mv_constant_complex1
         .type   ret3_mv_constant_complex1, @function
ret3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xcb
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret3_mv_constant_complex1, .-ret3_mv_constant_complex1

    
.globl ret3_mv_constant_complex2
         .type   ret3_mv_constant_complex2, @function
ret3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xcb
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret3_mv_constant_complex2, .-ret3_mv_constant_complex2

    
.globl ret4_mv_plain
         .type   ret4_mv_plain, @function
ret4_mv_plain:
      .byte 0x66,0xcb
  mov $0x0,%eax

    ret
         .size   ret4_mv_plain, .-ret4_mv_plain

    
.globl ret4_mv_allregs
         .type   ret4_mv_allregs, @function
ret4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xcb
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret4_mv_allregs, .-ret4_mv_allregs

    
.globl ret4_mv_constant_simple
         .type   ret4_mv_constant_simple, @function
ret4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xcb
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret4_mv_constant_simple, .-ret4_mv_constant_simple

    
.globl ret4_mv_constant_complex1
         .type   ret4_mv_constant_complex1, @function
ret4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xcb
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret4_mv_constant_complex1, .-ret4_mv_constant_complex1

    
.globl ret4_mv_constant_complex2
         .type   ret4_mv_constant_complex2, @function
ret4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xcb
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret4_mv_constant_complex2, .-ret4_mv_constant_complex2

    
.globl ret_pop1_plain
         .type   ret_pop1_plain, @function
ret_pop1_plain:
      .byte 0xc2,0x34,0x12
  mov $0x0,%eax

    ret
         .size   ret_pop1_plain, .-ret_pop1_plain

    
.globl ret_pop1_allregs
         .type   ret_pop1_allregs, @function
ret_pop1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xc2,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop1_allregs, .-ret_pop1_allregs

    
.globl ret_pop1_constant_simple
         .type   ret_pop1_constant_simple, @function
ret_pop1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xc2,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop1_constant_simple, .-ret_pop1_constant_simple

    
.globl ret_pop1_constant_complex1
         .type   ret_pop1_constant_complex1, @function
ret_pop1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xc2,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop1_constant_complex1, .-ret_pop1_constant_complex1

    
.globl ret_pop1_constant_complex2
         .type   ret_pop1_constant_complex2, @function
ret_pop1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xc2,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop1_constant_complex2, .-ret_pop1_constant_complex2

    
.globl ret_pop2_mv_plain
         .type   ret_pop2_mv_plain, @function
ret_pop2_mv_plain:
      .byte 0x66,0xc2,0x34,0x12
  mov $0x0,%eax

    ret
         .size   ret_pop2_mv_plain, .-ret_pop2_mv_plain

    
.globl ret_pop2_mv_allregs
         .type   ret_pop2_mv_allregs, @function
ret_pop2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xc2,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop2_mv_allregs, .-ret_pop2_mv_allregs

    
.globl ret_pop2_mv_constant_simple
         .type   ret_pop2_mv_constant_simple, @function
ret_pop2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xc2,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop2_mv_constant_simple, .-ret_pop2_mv_constant_simple

    
.globl ret_pop2_mv_constant_complex1
         .type   ret_pop2_mv_constant_complex1, @function
ret_pop2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xc2,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop2_mv_constant_complex1, .-ret_pop2_mv_constant_complex1

    
.globl ret_pop2_mv_constant_complex2
         .type   ret_pop2_mv_constant_complex2, @function
ret_pop2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xc2,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop2_mv_constant_complex2, .-ret_pop2_mv_constant_complex2

    
.globl ret_pop3_mv_plain
         .type   ret_pop3_mv_plain, @function
ret_pop3_mv_plain:
      .byte 0xca,0x34,0x12
  mov $0x0,%eax

    ret
         .size   ret_pop3_mv_plain, .-ret_pop3_mv_plain

    
.globl ret_pop3_mv_allregs
         .type   ret_pop3_mv_allregs, @function
ret_pop3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xca,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop3_mv_allregs, .-ret_pop3_mv_allregs

    
.globl ret_pop3_mv_constant_simple
         .type   ret_pop3_mv_constant_simple, @function
ret_pop3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xca,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop3_mv_constant_simple, .-ret_pop3_mv_constant_simple

    
.globl ret_pop3_mv_constant_complex1
         .type   ret_pop3_mv_constant_complex1, @function
ret_pop3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xca,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop3_mv_constant_complex1, .-ret_pop3_mv_constant_complex1

    
.globl ret_pop3_mv_constant_complex2
         .type   ret_pop3_mv_constant_complex2, @function
ret_pop3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xca,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop3_mv_constant_complex2, .-ret_pop3_mv_constant_complex2

    
.globl ret_pop4_mv_plain
         .type   ret_pop4_mv_plain, @function
ret_pop4_mv_plain:
      .byte 0x66,0xca,0x34,0x12
  mov $0x0,%eax

    ret
         .size   ret_pop4_mv_plain, .-ret_pop4_mv_plain

    
.globl ret_pop4_mv_allregs
         .type   ret_pop4_mv_allregs, @function
ret_pop4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xca,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop4_mv_allregs, .-ret_pop4_mv_allregs

    
.globl ret_pop4_mv_constant_simple
         .type   ret_pop4_mv_constant_simple, @function
ret_pop4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xca,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop4_mv_constant_simple, .-ret_pop4_mv_constant_simple

    
.globl ret_pop4_mv_constant_complex1
         .type   ret_pop4_mv_constant_complex1, @function
ret_pop4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xca,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop4_mv_constant_complex1, .-ret_pop4_mv_constant_complex1

    
.globl ret_pop4_mv_constant_complex2
         .type   ret_pop4_mv_constant_complex2, @function
ret_pop4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xca,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   ret_pop4_mv_constant_complex2, .-ret_pop4_mv_constant_complex2

    
.globl sahf_plain
         .type   sahf_plain, @function
sahf_plain:
      sahf
  mov $0x0,%eax

    ret
         .size   sahf_plain, .-sahf_plain

    
.globl sahf_allregs
         .type   sahf_allregs, @function
sahf_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  sahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sahf_allregs, .-sahf_allregs

    
.globl sahf_constant_simple
         .type   sahf_constant_simple, @function
sahf_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sahf_constant_simple, .-sahf_constant_simple

    
.globl sahf_constant_complex1
         .type   sahf_constant_complex1, @function
sahf_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  sahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sahf_constant_complex1, .-sahf_constant_complex1

    
.globl sahf_constant_complex2
         .type   sahf_constant_complex2, @function
sahf_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  sahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sahf_constant_complex2, .-sahf_constant_complex2

    
.globl sbb1_mv_plain
         .type   sbb1_mv_plain, @function
sbb1_mv_plain:
      sbb $0xe8,%al
  mov $0x0,%eax

    ret
         .size   sbb1_mv_plain, .-sbb1_mv_plain

    
.globl sbb1_mv_allregs
         .type   sbb1_mv_allregs, @function
sbb1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  sbb $0xe8,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb1_mv_allregs, .-sbb1_mv_allregs

    
.globl sbb1_mv_constant_simple_clear
         .type   sbb1_mv_constant_simple_clear, @function
sbb1_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbb $0xe8,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb1_mv_constant_simple_clear, .-sbb1_mv_constant_simple_clear

    
.globl sbb1_mv_constant_simple_set
         .type   sbb1_mv_constant_simple_set, @function
sbb1_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbb $0xe8,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb1_mv_constant_simple_set, .-sbb1_mv_constant_simple_set

    
.globl sbb1_mv_constant_complex1
         .type   sbb1_mv_constant_complex1, @function
sbb1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  sbb $0xe8,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb1_mv_constant_complex1, .-sbb1_mv_constant_complex1

    
.globl sbb1_mv_constant_complex2
         .type   sbb1_mv_constant_complex2, @function
sbb1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  sbb $0xe8,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb1_mv_constant_complex2, .-sbb1_mv_constant_complex2

    
.globl sbb2_mv_plain
         .type   sbb2_mv_plain, @function
sbb2_mv_plain:
      sbb $0xe8,%ax
  mov $0x0,%eax

    ret
         .size   sbb2_mv_plain, .-sbb2_mv_plain

    
.globl sbb2_mv_allregs
         .type   sbb2_mv_allregs, @function
sbb2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  sbb $0xe8,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb2_mv_allregs, .-sbb2_mv_allregs

    
.globl sbb2_mv_constant_simple_clear
         .type   sbb2_mv_constant_simple_clear, @function
sbb2_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbb $0xe8,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb2_mv_constant_simple_clear, .-sbb2_mv_constant_simple_clear

    
.globl sbb2_mv_constant_simple_set
         .type   sbb2_mv_constant_simple_set, @function
sbb2_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbb $0xe8,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb2_mv_constant_simple_set, .-sbb2_mv_constant_simple_set

    
.globl sbb2_mv_constant_complex1
         .type   sbb2_mv_constant_complex1, @function
sbb2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  sbb $0xe8,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb2_mv_constant_complex1, .-sbb2_mv_constant_complex1

    
.globl sbb2_mv_constant_complex2
         .type   sbb2_mv_constant_complex2, @function
sbb2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  sbb $0xe8,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb2_mv_constant_complex2, .-sbb2_mv_constant_complex2

    
.globl sbb3_plain
         .type   sbb3_plain, @function
sbb3_plain:
      sbb $0xe8,%eax
  mov $0x0,%eax

    ret
         .size   sbb3_plain, .-sbb3_plain

    
.globl sbb3_allregs
         .type   sbb3_allregs, @function
sbb3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  sbb $0xe8,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb3_allregs, .-sbb3_allregs

    
.globl sbb3_constant_simple_clear
         .type   sbb3_constant_simple_clear, @function
sbb3_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbb $0xe8,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb3_constant_simple_clear, .-sbb3_constant_simple_clear

    
.globl sbb3_constant_simple_set
         .type   sbb3_constant_simple_set, @function
sbb3_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbb $0xe8,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb3_constant_simple_set, .-sbb3_constant_simple_set

    
.globl sbb3_constant_complex1
         .type   sbb3_constant_complex1, @function
sbb3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  sbb $0xe8,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb3_constant_complex1, .-sbb3_constant_complex1

    
.globl sbb3_constant_complex2
         .type   sbb3_constant_complex2, @function
sbb3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  sbb $0xe8,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb3_constant_complex2, .-sbb3_constant_complex2

    
.globl sbb4_mv_plain
         .type   sbb4_mv_plain, @function
sbb4_mv_plain:
      sbbb $0xe8,(%eax)
  mov $0x0,%eax

    ret
         .size   sbb4_mv_plain, .-sbb4_mv_plain

    
.globl sbb4_mv_allregs
         .type   sbb4_mv_allregs, @function
sbb4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  sbbb $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb4_mv_allregs, .-sbb4_mv_allregs

    
.globl sbb4_mv_constant_simple_clear
         .type   sbb4_mv_constant_simple_clear, @function
sbb4_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbbb $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb4_mv_constant_simple_clear, .-sbb4_mv_constant_simple_clear

    
.globl sbb4_mv_constant_simple_set
         .type   sbb4_mv_constant_simple_set, @function
sbb4_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbbb $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb4_mv_constant_simple_set, .-sbb4_mv_constant_simple_set

    
.globl sbb4_mv_constant_complex1
         .type   sbb4_mv_constant_complex1, @function
sbb4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  sbbb $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb4_mv_constant_complex1, .-sbb4_mv_constant_complex1

    
.globl sbb4_mv_constant_complex2
         .type   sbb4_mv_constant_complex2, @function
sbb4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  sbbb $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb4_mv_constant_complex2, .-sbb4_mv_constant_complex2

    
.globl sbb5_mv_plain
         .type   sbb5_mv_plain, @function
sbb5_mv_plain:
      sbbw $0xe8,(%eax)
  mov $0x0,%eax

    ret
         .size   sbb5_mv_plain, .-sbb5_mv_plain

    
.globl sbb5_mv_allregs
         .type   sbb5_mv_allregs, @function
sbb5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  sbbw $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb5_mv_allregs, .-sbb5_mv_allregs

    
.globl sbb5_mv_constant_simple_clear
         .type   sbb5_mv_constant_simple_clear, @function
sbb5_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbbw $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb5_mv_constant_simple_clear, .-sbb5_mv_constant_simple_clear

    
.globl sbb5_mv_constant_simple_set
         .type   sbb5_mv_constant_simple_set, @function
sbb5_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbbw $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb5_mv_constant_simple_set, .-sbb5_mv_constant_simple_set

    
.globl sbb5_mv_constant_complex1
         .type   sbb5_mv_constant_complex1, @function
sbb5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  sbbw $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb5_mv_constant_complex1, .-sbb5_mv_constant_complex1

    
.globl sbb5_mv_constant_complex2
         .type   sbb5_mv_constant_complex2, @function
sbb5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  sbbw $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb5_mv_constant_complex2, .-sbb5_mv_constant_complex2

    
.globl sbb6_mv_plain
         .type   sbb6_mv_plain, @function
sbb6_mv_plain:
      sbbl $0xe8,(%eax)
  mov $0x0,%eax

    ret
         .size   sbb6_mv_plain, .-sbb6_mv_plain

    
.globl sbb6_mv_allregs
         .type   sbb6_mv_allregs, @function
sbb6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  sbbl $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb6_mv_allregs, .-sbb6_mv_allregs

    
.globl sbb6_mv_constant_simple_clear
         .type   sbb6_mv_constant_simple_clear, @function
sbb6_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbbl $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb6_mv_constant_simple_clear, .-sbb6_mv_constant_simple_clear

    
.globl sbb6_mv_constant_simple_set
         .type   sbb6_mv_constant_simple_set, @function
sbb6_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbbl $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb6_mv_constant_simple_set, .-sbb6_mv_constant_simple_set

    
.globl sbb6_mv_constant_complex1
         .type   sbb6_mv_constant_complex1, @function
sbb6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  sbbl $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb6_mv_constant_complex1, .-sbb6_mv_constant_complex1

    
.globl sbb6_mv_constant_complex2
         .type   sbb6_mv_constant_complex2, @function
sbb6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  sbbl $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb6_mv_constant_complex2, .-sbb6_mv_constant_complex2

    
.globl sbb7_mv_plain
         .type   sbb7_mv_plain, @function
sbb7_mv_plain:
      sbb %ax,%bx
  mov $0x0,%eax

    ret
         .size   sbb7_mv_plain, .-sbb7_mv_plain

    
.globl sbb7_mv_allregs
         .type   sbb7_mv_allregs, @function
sbb7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  sbb %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb7_mv_allregs, .-sbb7_mv_allregs

    
.globl sbb7_mv_constant_simple_clear
         .type   sbb7_mv_constant_simple_clear, @function
sbb7_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbb %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb7_mv_constant_simple_clear, .-sbb7_mv_constant_simple_clear

    
.globl sbb7_mv_constant_simple_set
         .type   sbb7_mv_constant_simple_set, @function
sbb7_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sbb %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb7_mv_constant_simple_set, .-sbb7_mv_constant_simple_set

    
.globl sbb7_mv_constant_complex1
         .type   sbb7_mv_constant_complex1, @function
sbb7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  sbb %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb7_mv_constant_complex1, .-sbb7_mv_constant_complex1

    
.globl sbb7_mv_constant_complex2
         .type   sbb7_mv_constant_complex2, @function
sbb7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  sbb %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb7_mv_constant_complex2, .-sbb7_mv_constant_complex2

    
.globl sbb_locked_mv_plain
         .type   sbb_locked_mv_plain, @function
sbb_locked_mv_plain:
      lock sbb %eax,(%ebx)
  mov $0x0,%eax

    ret
         .size   sbb_locked_mv_plain, .-sbb_locked_mv_plain

    
.globl sbb_locked_mv_allregs
         .type   sbb_locked_mv_allregs, @function
sbb_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lock sbb %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb_locked_mv_allregs, .-sbb_locked_mv_allregs

    
.globl sbb_locked_mv_constant_simple
         .type   sbb_locked_mv_constant_simple, @function
sbb_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lock sbb %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb_locked_mv_constant_simple, .-sbb_locked_mv_constant_simple

    
.globl sbb_locked_mv_constant_complex1
         .type   sbb_locked_mv_constant_complex1, @function
sbb_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lock sbb %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb_locked_mv_constant_complex1, .-sbb_locked_mv_constant_complex1

    
.globl sbb_locked_mv_constant_complex2
         .type   sbb_locked_mv_constant_complex2, @function
sbb_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lock sbb %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sbb_locked_mv_constant_complex2, .-sbb_locked_mv_constant_complex2

    
.globl scas1_plain
         .type   scas1_plain, @function
scas1_plain:
      .byte 0xae
  mov $0x0,%eax

    ret
         .size   scas1_plain, .-scas1_plain

    
.globl scas1_allregs
         .type   scas1_allregs, @function
scas1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   scas1_allregs, .-scas1_allregs

    
.globl scas1_constant_simple
         .type   scas1_constant_simple, @function
scas1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   scas1_constant_simple, .-scas1_constant_simple

    
.globl scas1_constant_complex1
         .type   scas1_constant_complex1, @function
scas1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   scas1_constant_complex1, .-scas1_constant_complex1

    
.globl scas1_constant_complex2
         .type   scas1_constant_complex2, @function
scas1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   scas1_constant_complex2, .-scas1_constant_complex2

    
.globl scas2_mv_plain
         .type   scas2_mv_plain, @function
scas2_mv_plain:
      .byte 0x66,0xaf
  mov $0x0,%eax

    ret
         .size   scas2_mv_plain, .-scas2_mv_plain

    
.globl scas2_mv_allregs
         .type   scas2_mv_allregs, @function
scas2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   scas2_mv_allregs, .-scas2_mv_allregs

    
.globl scas2_mv_constant_simple
         .type   scas2_mv_constant_simple, @function
scas2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   scas2_mv_constant_simple, .-scas2_mv_constant_simple

    
.globl scas2_mv_constant_complex1
         .type   scas2_mv_constant_complex1, @function
scas2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   scas2_mv_constant_complex1, .-scas2_mv_constant_complex1

    
.globl scas2_mv_constant_complex2
         .type   scas2_mv_constant_complex2, @function
scas2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   scas2_mv_constant_complex2, .-scas2_mv_constant_complex2

    
.globl scas3_plain
         .type   scas3_plain, @function
scas3_plain:
      .byte 0xaf
  mov $0x0,%eax

    ret
         .size   scas3_plain, .-scas3_plain

    
.globl scas3_allregs
         .type   scas3_allregs, @function
scas3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   scas3_allregs, .-scas3_allregs

    
.globl scas3_constant_simple
         .type   scas3_constant_simple, @function
scas3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   scas3_constant_simple, .-scas3_constant_simple

    
.globl scas3_constant_complex1
         .type   scas3_constant_complex1, @function
scas3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   scas3_constant_complex1, .-scas3_constant_complex1

    
.globl scas3_constant_complex2
         .type   scas3_constant_complex2, @function
scas3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   scas3_constant_complex2, .-scas3_constant_complex2

    
.globl setcc_with_code_0_plain
         .type   setcc_with_code_0_plain, @function
setcc_with_code_0_plain:
      .byte 0x0f,0x90,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_0_plain, .-setcc_with_code_0_plain

    
.globl setcc_with_code_0_allregs
         .type   setcc_with_code_0_allregs, @function
setcc_with_code_0_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x90,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_0_allregs, .-setcc_with_code_0_allregs

    
.globl setcc_with_code_0_constant_simple_clear
         .type   setcc_with_code_0_constant_simple_clear, @function
setcc_with_code_0_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x90,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_0_constant_simple_clear, .-setcc_with_code_0_constant_simple_clear

    
.globl setcc_with_code_0_constant_simple_set
         .type   setcc_with_code_0_constant_simple_set, @function
setcc_with_code_0_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x90,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_0_constant_simple_set, .-setcc_with_code_0_constant_simple_set

    
.globl setcc_with_code_0_constant_complex1
         .type   setcc_with_code_0_constant_complex1, @function
setcc_with_code_0_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x90,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_0_constant_complex1, .-setcc_with_code_0_constant_complex1

    
.globl setcc_with_code_0_constant_complex2
         .type   setcc_with_code_0_constant_complex2, @function
setcc_with_code_0_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x90,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_0_constant_complex2, .-setcc_with_code_0_constant_complex2

    
.globl setcc_with_code_1_mv_plain
         .type   setcc_with_code_1_mv_plain, @function
setcc_with_code_1_mv_plain:
      .byte 0x0f,0x91,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_1_mv_plain, .-setcc_with_code_1_mv_plain

    
.globl setcc_with_code_1_mv_allregs
         .type   setcc_with_code_1_mv_allregs, @function
setcc_with_code_1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x91,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_1_mv_allregs, .-setcc_with_code_1_mv_allregs

    
.globl setcc_with_code_1_mv_constant_simple_clear
         .type   setcc_with_code_1_mv_constant_simple_clear, @function
setcc_with_code_1_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x91,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_1_mv_constant_simple_clear, .-setcc_with_code_1_mv_constant_simple_clear

    
.globl setcc_with_code_1_mv_constant_simple_set
         .type   setcc_with_code_1_mv_constant_simple_set, @function
setcc_with_code_1_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x91,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_1_mv_constant_simple_set, .-setcc_with_code_1_mv_constant_simple_set

    
.globl setcc_with_code_1_mv_constant_complex1
         .type   setcc_with_code_1_mv_constant_complex1, @function
setcc_with_code_1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x91,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_1_mv_constant_complex1, .-setcc_with_code_1_mv_constant_complex1

    
.globl setcc_with_code_1_mv_constant_complex2
         .type   setcc_with_code_1_mv_constant_complex2, @function
setcc_with_code_1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x91,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_1_mv_constant_complex2, .-setcc_with_code_1_mv_constant_complex2

    
.globl setcc_with_code_2_mv_plain
         .type   setcc_with_code_2_mv_plain, @function
setcc_with_code_2_mv_plain:
      .byte 0x0f,0x92,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_2_mv_plain, .-setcc_with_code_2_mv_plain

    
.globl setcc_with_code_2_mv_allregs
         .type   setcc_with_code_2_mv_allregs, @function
setcc_with_code_2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x92,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_2_mv_allregs, .-setcc_with_code_2_mv_allregs

    
.globl setcc_with_code_2_mv_constant_simple_clear
         .type   setcc_with_code_2_mv_constant_simple_clear, @function
setcc_with_code_2_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x92,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_2_mv_constant_simple_clear, .-setcc_with_code_2_mv_constant_simple_clear

    
.globl setcc_with_code_2_mv_constant_simple_set
         .type   setcc_with_code_2_mv_constant_simple_set, @function
setcc_with_code_2_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x92,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_2_mv_constant_simple_set, .-setcc_with_code_2_mv_constant_simple_set

    
.globl setcc_with_code_2_mv_constant_complex1
         .type   setcc_with_code_2_mv_constant_complex1, @function
setcc_with_code_2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x92,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_2_mv_constant_complex1, .-setcc_with_code_2_mv_constant_complex1

    
.globl setcc_with_code_2_mv_constant_complex2
         .type   setcc_with_code_2_mv_constant_complex2, @function
setcc_with_code_2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x92,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_2_mv_constant_complex2, .-setcc_with_code_2_mv_constant_complex2

    
.globl setcc_with_code_3_mv_plain
         .type   setcc_with_code_3_mv_plain, @function
setcc_with_code_3_mv_plain:
      .byte 0x0f,0x93,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_3_mv_plain, .-setcc_with_code_3_mv_plain

    
.globl setcc_with_code_3_mv_allregs
         .type   setcc_with_code_3_mv_allregs, @function
setcc_with_code_3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x93,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_3_mv_allregs, .-setcc_with_code_3_mv_allregs

    
.globl setcc_with_code_3_mv_constant_simple_clear
         .type   setcc_with_code_3_mv_constant_simple_clear, @function
setcc_with_code_3_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x93,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_3_mv_constant_simple_clear, .-setcc_with_code_3_mv_constant_simple_clear

    
.globl setcc_with_code_3_mv_constant_simple_set
         .type   setcc_with_code_3_mv_constant_simple_set, @function
setcc_with_code_3_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x93,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_3_mv_constant_simple_set, .-setcc_with_code_3_mv_constant_simple_set

    
.globl setcc_with_code_3_mv_constant_complex1
         .type   setcc_with_code_3_mv_constant_complex1, @function
setcc_with_code_3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x93,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_3_mv_constant_complex1, .-setcc_with_code_3_mv_constant_complex1

    
.globl setcc_with_code_3_mv_constant_complex2
         .type   setcc_with_code_3_mv_constant_complex2, @function
setcc_with_code_3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x93,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_3_mv_constant_complex2, .-setcc_with_code_3_mv_constant_complex2

    
.globl setcc_with_code_4_mv_plain
         .type   setcc_with_code_4_mv_plain, @function
setcc_with_code_4_mv_plain:
      .byte 0x0f,0x94,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_4_mv_plain, .-setcc_with_code_4_mv_plain

    
.globl setcc_with_code_4_mv_allregs
         .type   setcc_with_code_4_mv_allregs, @function
setcc_with_code_4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x94,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_4_mv_allregs, .-setcc_with_code_4_mv_allregs

    
.globl setcc_with_code_4_mv_constant_simple_clear
         .type   setcc_with_code_4_mv_constant_simple_clear, @function
setcc_with_code_4_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x94,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_4_mv_constant_simple_clear, .-setcc_with_code_4_mv_constant_simple_clear

    
.globl setcc_with_code_4_mv_constant_simple_set
         .type   setcc_with_code_4_mv_constant_simple_set, @function
setcc_with_code_4_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x94,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_4_mv_constant_simple_set, .-setcc_with_code_4_mv_constant_simple_set

    
.globl setcc_with_code_4_mv_constant_complex1
         .type   setcc_with_code_4_mv_constant_complex1, @function
setcc_with_code_4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x94,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_4_mv_constant_complex1, .-setcc_with_code_4_mv_constant_complex1

    
.globl setcc_with_code_4_mv_constant_complex2
         .type   setcc_with_code_4_mv_constant_complex2, @function
setcc_with_code_4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x94,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_4_mv_constant_complex2, .-setcc_with_code_4_mv_constant_complex2

    
.globl setcc_with_code_5_mv_plain
         .type   setcc_with_code_5_mv_plain, @function
setcc_with_code_5_mv_plain:
      .byte 0x0f,0x95,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_5_mv_plain, .-setcc_with_code_5_mv_plain

    
.globl setcc_with_code_5_mv_allregs
         .type   setcc_with_code_5_mv_allregs, @function
setcc_with_code_5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x95,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_5_mv_allregs, .-setcc_with_code_5_mv_allregs

    
.globl setcc_with_code_5_mv_constant_simple_clear
         .type   setcc_with_code_5_mv_constant_simple_clear, @function
setcc_with_code_5_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x95,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_5_mv_constant_simple_clear, .-setcc_with_code_5_mv_constant_simple_clear

    
.globl setcc_with_code_5_mv_constant_simple_set
         .type   setcc_with_code_5_mv_constant_simple_set, @function
setcc_with_code_5_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x95,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_5_mv_constant_simple_set, .-setcc_with_code_5_mv_constant_simple_set

    
.globl setcc_with_code_5_mv_constant_complex1
         .type   setcc_with_code_5_mv_constant_complex1, @function
setcc_with_code_5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x95,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_5_mv_constant_complex1, .-setcc_with_code_5_mv_constant_complex1

    
.globl setcc_with_code_5_mv_constant_complex2
         .type   setcc_with_code_5_mv_constant_complex2, @function
setcc_with_code_5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x95,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_5_mv_constant_complex2, .-setcc_with_code_5_mv_constant_complex2

    
.globl setcc_with_code_6_mv_plain
         .type   setcc_with_code_6_mv_plain, @function
setcc_with_code_6_mv_plain:
      .byte 0x0f,0x96,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_6_mv_plain, .-setcc_with_code_6_mv_plain

    
.globl setcc_with_code_6_mv_allregs
         .type   setcc_with_code_6_mv_allregs, @function
setcc_with_code_6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x96,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_6_mv_allregs, .-setcc_with_code_6_mv_allregs

    
.globl setcc_with_code_6_mv_constant_simple_clear
         .type   setcc_with_code_6_mv_constant_simple_clear, @function
setcc_with_code_6_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x96,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_6_mv_constant_simple_clear, .-setcc_with_code_6_mv_constant_simple_clear

    
.globl setcc_with_code_6_mv_constant_simple_set
         .type   setcc_with_code_6_mv_constant_simple_set, @function
setcc_with_code_6_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x96,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_6_mv_constant_simple_set, .-setcc_with_code_6_mv_constant_simple_set

    
.globl setcc_with_code_6_mv_constant_complex1
         .type   setcc_with_code_6_mv_constant_complex1, @function
setcc_with_code_6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x96,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_6_mv_constant_complex1, .-setcc_with_code_6_mv_constant_complex1

    
.globl setcc_with_code_6_mv_constant_complex2
         .type   setcc_with_code_6_mv_constant_complex2, @function
setcc_with_code_6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x96,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_6_mv_constant_complex2, .-setcc_with_code_6_mv_constant_complex2

    
.globl setcc_with_code_7_mv_plain
         .type   setcc_with_code_7_mv_plain, @function
setcc_with_code_7_mv_plain:
      .byte 0x0f,0x97,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_7_mv_plain, .-setcc_with_code_7_mv_plain

    
.globl setcc_with_code_7_mv_allregs
         .type   setcc_with_code_7_mv_allregs, @function
setcc_with_code_7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x97,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_7_mv_allregs, .-setcc_with_code_7_mv_allregs

    
.globl setcc_with_code_7_mv_constant_simple_clear
         .type   setcc_with_code_7_mv_constant_simple_clear, @function
setcc_with_code_7_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x97,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_7_mv_constant_simple_clear, .-setcc_with_code_7_mv_constant_simple_clear

    
.globl setcc_with_code_7_mv_constant_simple_set
         .type   setcc_with_code_7_mv_constant_simple_set, @function
setcc_with_code_7_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x97,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_7_mv_constant_simple_set, .-setcc_with_code_7_mv_constant_simple_set

    
.globl setcc_with_code_7_mv_constant_complex1
         .type   setcc_with_code_7_mv_constant_complex1, @function
setcc_with_code_7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x97,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_7_mv_constant_complex1, .-setcc_with_code_7_mv_constant_complex1

    
.globl setcc_with_code_7_mv_constant_complex2
         .type   setcc_with_code_7_mv_constant_complex2, @function
setcc_with_code_7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x97,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_7_mv_constant_complex2, .-setcc_with_code_7_mv_constant_complex2

    
.globl setcc_with_code_8_mv_plain
         .type   setcc_with_code_8_mv_plain, @function
setcc_with_code_8_mv_plain:
      .byte 0x0f,0x98,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_8_mv_plain, .-setcc_with_code_8_mv_plain

    
.globl setcc_with_code_8_mv_allregs
         .type   setcc_with_code_8_mv_allregs, @function
setcc_with_code_8_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x98,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_8_mv_allregs, .-setcc_with_code_8_mv_allregs

    
.globl setcc_with_code_8_mv_constant_simple_clear
         .type   setcc_with_code_8_mv_constant_simple_clear, @function
setcc_with_code_8_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x98,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_8_mv_constant_simple_clear, .-setcc_with_code_8_mv_constant_simple_clear

    
.globl setcc_with_code_8_mv_constant_simple_set
         .type   setcc_with_code_8_mv_constant_simple_set, @function
setcc_with_code_8_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x98,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_8_mv_constant_simple_set, .-setcc_with_code_8_mv_constant_simple_set

    
.globl setcc_with_code_8_mv_constant_complex1
         .type   setcc_with_code_8_mv_constant_complex1, @function
setcc_with_code_8_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x98,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_8_mv_constant_complex1, .-setcc_with_code_8_mv_constant_complex1

    
.globl setcc_with_code_8_mv_constant_complex2
         .type   setcc_with_code_8_mv_constant_complex2, @function
setcc_with_code_8_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x98,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_8_mv_constant_complex2, .-setcc_with_code_8_mv_constant_complex2

    
.globl setcc_with_code_9_mv_plain
         .type   setcc_with_code_9_mv_plain, @function
setcc_with_code_9_mv_plain:
      .byte 0x0f,0x99,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_9_mv_plain, .-setcc_with_code_9_mv_plain

    
.globl setcc_with_code_9_mv_allregs
         .type   setcc_with_code_9_mv_allregs, @function
setcc_with_code_9_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x99,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_9_mv_allregs, .-setcc_with_code_9_mv_allregs

    
.globl setcc_with_code_9_mv_constant_simple_clear
         .type   setcc_with_code_9_mv_constant_simple_clear, @function
setcc_with_code_9_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x99,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_9_mv_constant_simple_clear, .-setcc_with_code_9_mv_constant_simple_clear

    
.globl setcc_with_code_9_mv_constant_simple_set
         .type   setcc_with_code_9_mv_constant_simple_set, @function
setcc_with_code_9_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x99,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_9_mv_constant_simple_set, .-setcc_with_code_9_mv_constant_simple_set

    
.globl setcc_with_code_9_mv_constant_complex1
         .type   setcc_with_code_9_mv_constant_complex1, @function
setcc_with_code_9_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x99,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_9_mv_constant_complex1, .-setcc_with_code_9_mv_constant_complex1

    
.globl setcc_with_code_9_mv_constant_complex2
         .type   setcc_with_code_9_mv_constant_complex2, @function
setcc_with_code_9_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x99,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_9_mv_constant_complex2, .-setcc_with_code_9_mv_constant_complex2

    
.globl setcc_with_code_a_mv_plain
         .type   setcc_with_code_a_mv_plain, @function
setcc_with_code_a_mv_plain:
      .byte 0x0f,0x9a,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_a_mv_plain, .-setcc_with_code_a_mv_plain

    
.globl setcc_with_code_a_mv_allregs
         .type   setcc_with_code_a_mv_allregs, @function
setcc_with_code_a_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x9a,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_a_mv_allregs, .-setcc_with_code_a_mv_allregs

    
.globl setcc_with_code_a_mv_constant_simple_clear
         .type   setcc_with_code_a_mv_constant_simple_clear, @function
setcc_with_code_a_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x9a,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_a_mv_constant_simple_clear, .-setcc_with_code_a_mv_constant_simple_clear

    
.globl setcc_with_code_a_mv_constant_simple_set
         .type   setcc_with_code_a_mv_constant_simple_set, @function
setcc_with_code_a_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x9a,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_a_mv_constant_simple_set, .-setcc_with_code_a_mv_constant_simple_set

    
.globl setcc_with_code_a_mv_constant_complex1
         .type   setcc_with_code_a_mv_constant_complex1, @function
setcc_with_code_a_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x9a,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_a_mv_constant_complex1, .-setcc_with_code_a_mv_constant_complex1

    
.globl setcc_with_code_a_mv_constant_complex2
         .type   setcc_with_code_a_mv_constant_complex2, @function
setcc_with_code_a_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x9a,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_a_mv_constant_complex2, .-setcc_with_code_a_mv_constant_complex2

    
.globl setcc_with_code_b_mv_plain
         .type   setcc_with_code_b_mv_plain, @function
setcc_with_code_b_mv_plain:
      .byte 0x0f,0x9b,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_b_mv_plain, .-setcc_with_code_b_mv_plain

    
.globl setcc_with_code_b_mv_allregs
         .type   setcc_with_code_b_mv_allregs, @function
setcc_with_code_b_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x9b,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_b_mv_allregs, .-setcc_with_code_b_mv_allregs

    
.globl setcc_with_code_b_mv_constant_simple_clear
         .type   setcc_with_code_b_mv_constant_simple_clear, @function
setcc_with_code_b_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x9b,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_b_mv_constant_simple_clear, .-setcc_with_code_b_mv_constant_simple_clear

    
.globl setcc_with_code_b_mv_constant_simple_set
         .type   setcc_with_code_b_mv_constant_simple_set, @function
setcc_with_code_b_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x9b,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_b_mv_constant_simple_set, .-setcc_with_code_b_mv_constant_simple_set

    
.globl setcc_with_code_b_mv_constant_complex1
         .type   setcc_with_code_b_mv_constant_complex1, @function
setcc_with_code_b_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x9b,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_b_mv_constant_complex1, .-setcc_with_code_b_mv_constant_complex1

    
.globl setcc_with_code_b_mv_constant_complex2
         .type   setcc_with_code_b_mv_constant_complex2, @function
setcc_with_code_b_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x9b,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_b_mv_constant_complex2, .-setcc_with_code_b_mv_constant_complex2

    
.globl setcc_with_code_c_mv_plain
         .type   setcc_with_code_c_mv_plain, @function
setcc_with_code_c_mv_plain:
      .byte 0x0f,0x9c,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_c_mv_plain, .-setcc_with_code_c_mv_plain

    
.globl setcc_with_code_c_mv_allregs
         .type   setcc_with_code_c_mv_allregs, @function
setcc_with_code_c_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x9c,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_c_mv_allregs, .-setcc_with_code_c_mv_allregs

    
.globl setcc_with_code_c_mv_constant_simple_clear
         .type   setcc_with_code_c_mv_constant_simple_clear, @function
setcc_with_code_c_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x9c,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_c_mv_constant_simple_clear, .-setcc_with_code_c_mv_constant_simple_clear

    
.globl setcc_with_code_c_mv_constant_simple_set
         .type   setcc_with_code_c_mv_constant_simple_set, @function
setcc_with_code_c_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x9c,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_c_mv_constant_simple_set, .-setcc_with_code_c_mv_constant_simple_set

    
.globl setcc_with_code_c_mv_constant_complex1
         .type   setcc_with_code_c_mv_constant_complex1, @function
setcc_with_code_c_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x9c,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_c_mv_constant_complex1, .-setcc_with_code_c_mv_constant_complex1

    
.globl setcc_with_code_c_mv_constant_complex2
         .type   setcc_with_code_c_mv_constant_complex2, @function
setcc_with_code_c_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x9c,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_c_mv_constant_complex2, .-setcc_with_code_c_mv_constant_complex2

    
.globl setcc_with_code_d_mv_plain
         .type   setcc_with_code_d_mv_plain, @function
setcc_with_code_d_mv_plain:
      .byte 0x0f,0x9d,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_d_mv_plain, .-setcc_with_code_d_mv_plain

    
.globl setcc_with_code_d_mv_allregs
         .type   setcc_with_code_d_mv_allregs, @function
setcc_with_code_d_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x9d,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_d_mv_allregs, .-setcc_with_code_d_mv_allregs

    
.globl setcc_with_code_d_mv_constant_simple_clear
         .type   setcc_with_code_d_mv_constant_simple_clear, @function
setcc_with_code_d_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x9d,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_d_mv_constant_simple_clear, .-setcc_with_code_d_mv_constant_simple_clear

    
.globl setcc_with_code_d_mv_constant_simple_set
         .type   setcc_with_code_d_mv_constant_simple_set, @function
setcc_with_code_d_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x9d,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_d_mv_constant_simple_set, .-setcc_with_code_d_mv_constant_simple_set

    
.globl setcc_with_code_d_mv_constant_complex1
         .type   setcc_with_code_d_mv_constant_complex1, @function
setcc_with_code_d_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x9d,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_d_mv_constant_complex1, .-setcc_with_code_d_mv_constant_complex1

    
.globl setcc_with_code_d_mv_constant_complex2
         .type   setcc_with_code_d_mv_constant_complex2, @function
setcc_with_code_d_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x9d,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_d_mv_constant_complex2, .-setcc_with_code_d_mv_constant_complex2

    
.globl setcc_with_code_e_mv_plain
         .type   setcc_with_code_e_mv_plain, @function
setcc_with_code_e_mv_plain:
      .byte 0x0f,0x9e,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_e_mv_plain, .-setcc_with_code_e_mv_plain

    
.globl setcc_with_code_e_mv_allregs
         .type   setcc_with_code_e_mv_allregs, @function
setcc_with_code_e_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x9e,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_e_mv_allregs, .-setcc_with_code_e_mv_allregs

    
.globl setcc_with_code_e_mv_constant_simple_clear
         .type   setcc_with_code_e_mv_constant_simple_clear, @function
setcc_with_code_e_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x9e,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_e_mv_constant_simple_clear, .-setcc_with_code_e_mv_constant_simple_clear

    
.globl setcc_with_code_e_mv_constant_simple_set
         .type   setcc_with_code_e_mv_constant_simple_set, @function
setcc_with_code_e_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x9e,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_e_mv_constant_simple_set, .-setcc_with_code_e_mv_constant_simple_set

    
.globl setcc_with_code_e_mv_constant_complex1
         .type   setcc_with_code_e_mv_constant_complex1, @function
setcc_with_code_e_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x9e,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_e_mv_constant_complex1, .-setcc_with_code_e_mv_constant_complex1

    
.globl setcc_with_code_e_mv_constant_complex2
         .type   setcc_with_code_e_mv_constant_complex2, @function
setcc_with_code_e_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x9e,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_e_mv_constant_complex2, .-setcc_with_code_e_mv_constant_complex2

    
.globl setcc_with_code_f_mv_plain
         .type   setcc_with_code_f_mv_plain, @function
setcc_with_code_f_mv_plain:
      .byte 0x0f,0x9f,0xc3
  mov $0x0,%eax

    ret
         .size   setcc_with_code_f_mv_plain, .-setcc_with_code_f_mv_plain

    
.globl setcc_with_code_f_mv_allregs
         .type   setcc_with_code_f_mv_allregs, @function
setcc_with_code_f_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x0f,0x9f,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_f_mv_allregs, .-setcc_with_code_f_mv_allregs

    
.globl setcc_with_code_f_mv_constant_simple_clear
         .type   setcc_with_code_f_mv_constant_simple_clear, @function
setcc_with_code_f_mv_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x9f,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_f_mv_constant_simple_clear, .-setcc_with_code_f_mv_constant_simple_clear

    
.globl setcc_with_code_f_mv_constant_simple_set
         .type   setcc_with_code_f_mv_constant_simple_set, @function
setcc_with_code_f_mv_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x0f,0x9f,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_f_mv_constant_simple_set, .-setcc_with_code_f_mv_constant_simple_set

    
.globl setcc_with_code_f_mv_constant_complex1
         .type   setcc_with_code_f_mv_constant_complex1, @function
setcc_with_code_f_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x0f,0x9f,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_f_mv_constant_complex1, .-setcc_with_code_f_mv_constant_complex1

    
.globl setcc_with_code_f_mv_constant_complex2
         .type   setcc_with_code_f_mv_constant_complex2, @function
setcc_with_code_f_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x0f,0x9f,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   setcc_with_code_f_mv_constant_complex2, .-setcc_with_code_f_mv_constant_complex2

    
.globl sgdt_plain
         .type   sgdt_plain, @function
sgdt_plain:
      sgdt (%eax)
  mov $0x0,%eax

    ret
         .size   sgdt_plain, .-sgdt_plain

    
.globl sgdt_allregs
         .type   sgdt_allregs, @function
sgdt_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  sgdt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sgdt_allregs, .-sgdt_allregs

    
.globl sgdt_constant_simple
         .type   sgdt_constant_simple, @function
sgdt_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sgdt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sgdt_constant_simple, .-sgdt_constant_simple

    
.globl sgdt_constant_complex1
         .type   sgdt_constant_complex1, @function
sgdt_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  sgdt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sgdt_constant_complex1, .-sgdt_constant_complex1

    
.globl sgdt_constant_complex2
         .type   sgdt_constant_complex2, @function
sgdt_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  sgdt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sgdt_constant_complex2, .-sgdt_constant_complex2

    
.globl sidt_plain
         .type   sidt_plain, @function
sidt_plain:
      sidt (%eax)
  mov $0x0,%eax

    ret
         .size   sidt_plain, .-sidt_plain

    
.globl sidt_allregs
         .type   sidt_allregs, @function
sidt_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  sidt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sidt_allregs, .-sidt_allregs

    
.globl sidt_constant_simple
         .type   sidt_constant_simple, @function
sidt_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sidt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sidt_constant_simple, .-sidt_constant_simple

    
.globl sidt_constant_complex1
         .type   sidt_constant_complex1, @function
sidt_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  sidt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sidt_constant_complex1, .-sidt_constant_complex1

    
.globl sidt_constant_complex2
         .type   sidt_constant_complex2, @function
sidt_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  sidt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sidt_constant_complex2, .-sidt_constant_complex2

    
.globl shld1_plain
         .type   shld1_plain, @function
shld1_plain:
      shld $4,%ax,%bx
  mov $0x0,%eax

    ret
         .size   shld1_plain, .-shld1_plain

    
.globl shld1_allregs
         .type   shld1_allregs, @function
shld1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  shld $4,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld1_allregs, .-shld1_allregs

    
.globl shld1_constant_simple
         .type   shld1_constant_simple, @function
shld1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  shld $4,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld1_constant_simple, .-shld1_constant_simple

    
.globl shld1_constant_complex1
         .type   shld1_constant_complex1, @function
shld1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  shld $4,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld1_constant_complex1, .-shld1_constant_complex1

    
.globl shld1_constant_complex2
         .type   shld1_constant_complex2, @function
shld1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  shld $4,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld1_constant_complex2, .-shld1_constant_complex2

    
.globl shld2_plain
         .type   shld2_plain, @function
shld2_plain:
      shld $4,%eax,%ebx
  mov $0x0,%eax

    ret
         .size   shld2_plain, .-shld2_plain

    
.globl shld2_allregs
         .type   shld2_allregs, @function
shld2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  shld $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld2_allregs, .-shld2_allregs

    
.globl shld2_constant_simple
         .type   shld2_constant_simple, @function
shld2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  shld $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld2_constant_simple, .-shld2_constant_simple

    
.globl shld2_constant_complex1
         .type   shld2_constant_complex1, @function
shld2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  shld $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld2_constant_complex1, .-shld2_constant_complex1

    
.globl shld2_constant_complex2
         .type   shld2_constant_complex2, @function
shld2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  shld $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld2_constant_complex2, .-shld2_constant_complex2

    
.globl shld3_plain
         .type   shld3_plain, @function
shld3_plain:
      shld %cl,%ax,%bx
  mov $0x0,%eax

    ret
         .size   shld3_plain, .-shld3_plain

    
.globl shld3_allregs
         .type   shld3_allregs, @function
shld3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  shld %cl,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld3_allregs, .-shld3_allregs

    
.globl shld3_constant_simple
         .type   shld3_constant_simple, @function
shld3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  shld %cl,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld3_constant_simple, .-shld3_constant_simple

    
.globl shld3_constant_complex1
         .type   shld3_constant_complex1, @function
shld3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  shld %cl,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld3_constant_complex1, .-shld3_constant_complex1

    
.globl shld3_constant_complex2
         .type   shld3_constant_complex2, @function
shld3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  shld %cl,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld3_constant_complex2, .-shld3_constant_complex2

    
.globl shld4_plain
         .type   shld4_plain, @function
shld4_plain:
      shld %cl,%eax,%ebx
  mov $0x0,%eax

    ret
         .size   shld4_plain, .-shld4_plain

    
.globl shld4_allregs
         .type   shld4_allregs, @function
shld4_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  shld %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld4_allregs, .-shld4_allregs

    
.globl shld4_constant_simple
         .type   shld4_constant_simple, @function
shld4_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  shld %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld4_constant_simple, .-shld4_constant_simple

    
.globl shld4_constant_complex1
         .type   shld4_constant_complex1, @function
shld4_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  shld %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld4_constant_complex1, .-shld4_constant_complex1

    
.globl shld4_constant_complex2
         .type   shld4_constant_complex2, @function
shld4_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  shld %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shld4_constant_complex2, .-shld4_constant_complex2

    
.globl shrd1_plain
         .type   shrd1_plain, @function
shrd1_plain:
      shrd $4,%ax,%bx
  mov $0x0,%eax

    ret
         .size   shrd1_plain, .-shrd1_plain

    
.globl shrd1_allregs
         .type   shrd1_allregs, @function
shrd1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  shrd $4,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd1_allregs, .-shrd1_allregs

    
.globl shrd1_constant_simple
         .type   shrd1_constant_simple, @function
shrd1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  shrd $4,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd1_constant_simple, .-shrd1_constant_simple

    
.globl shrd1_constant_complex1
         .type   shrd1_constant_complex1, @function
shrd1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  shrd $4,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd1_constant_complex1, .-shrd1_constant_complex1

    
.globl shrd1_constant_complex2
         .type   shrd1_constant_complex2, @function
shrd1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  shrd $4,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd1_constant_complex2, .-shrd1_constant_complex2

    
.globl shrd2_plain
         .type   shrd2_plain, @function
shrd2_plain:
      shrd $4,%eax,%ebx
  mov $0x0,%eax

    ret
         .size   shrd2_plain, .-shrd2_plain

    
.globl shrd2_allregs
         .type   shrd2_allregs, @function
shrd2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  shrd $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd2_allregs, .-shrd2_allregs

    
.globl shrd2_constant_simple
         .type   shrd2_constant_simple, @function
shrd2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  shrd $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd2_constant_simple, .-shrd2_constant_simple

    
.globl shrd2_constant_complex1
         .type   shrd2_constant_complex1, @function
shrd2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  shrd $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd2_constant_complex1, .-shrd2_constant_complex1

    
.globl shrd2_constant_complex2
         .type   shrd2_constant_complex2, @function
shrd2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  shrd $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd2_constant_complex2, .-shrd2_constant_complex2

    
.globl shrd3_plain
         .type   shrd3_plain, @function
shrd3_plain:
      shrd %cl,%ax,%bx
  mov $0x0,%eax

    ret
         .size   shrd3_plain, .-shrd3_plain

    
.globl shrd3_allregs
         .type   shrd3_allregs, @function
shrd3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  shrd %cl,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd3_allregs, .-shrd3_allregs

    
.globl shrd3_constant_simple
         .type   shrd3_constant_simple, @function
shrd3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  shrd %cl,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd3_constant_simple, .-shrd3_constant_simple

    
.globl shrd3_constant_complex1
         .type   shrd3_constant_complex1, @function
shrd3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  shrd %cl,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd3_constant_complex1, .-shrd3_constant_complex1

    
.globl shrd3_constant_complex2
         .type   shrd3_constant_complex2, @function
shrd3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  shrd %cl,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd3_constant_complex2, .-shrd3_constant_complex2

    
.globl shrd4_plain
         .type   shrd4_plain, @function
shrd4_plain:
      shrd %cl,%eax,%ebx
  mov $0x0,%eax

    ret
         .size   shrd4_plain, .-shrd4_plain

    
.globl shrd4_allregs
         .type   shrd4_allregs, @function
shrd4_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  shrd %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd4_allregs, .-shrd4_allregs

    
.globl shrd4_constant_simple
         .type   shrd4_constant_simple, @function
shrd4_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  shrd %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd4_constant_simple, .-shrd4_constant_simple

    
.globl shrd4_constant_complex1
         .type   shrd4_constant_complex1, @function
shrd4_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  shrd %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd4_constant_complex1, .-shrd4_constant_complex1

    
.globl shrd4_constant_complex2
         .type   shrd4_constant_complex2, @function
shrd4_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  shrd %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   shrd4_constant_complex2, .-shrd4_constant_complex2

    
.globl sldt_plain
         .type   sldt_plain, @function
sldt_plain:
      sldt (%eax)
  mov $0x0,%eax

    ret
         .size   sldt_plain, .-sldt_plain

    
.globl sldt_allregs
         .type   sldt_allregs, @function
sldt_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  sldt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sldt_allregs, .-sldt_allregs

    
.globl sldt_constant_simple
         .type   sldt_constant_simple, @function
sldt_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sldt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sldt_constant_simple, .-sldt_constant_simple

    
.globl sldt_constant_complex1
         .type   sldt_constant_complex1, @function
sldt_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  sldt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sldt_constant_complex1, .-sldt_constant_complex1

    
.globl sldt_constant_complex2
         .type   sldt_constant_complex2, @function
sldt_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  sldt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sldt_constant_complex2, .-sldt_constant_complex2

    
.globl smsw_plain
         .type   smsw_plain, @function
smsw_plain:
      smsw (%eax)
  mov $0x0,%eax

    ret
         .size   smsw_plain, .-smsw_plain

    
.globl smsw_allregs
         .type   smsw_allregs, @function
smsw_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  smsw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   smsw_allregs, .-smsw_allregs

    
.globl smsw_constant_simple
         .type   smsw_constant_simple, @function
smsw_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  smsw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   smsw_constant_simple, .-smsw_constant_simple

    
.globl smsw_constant_complex1
         .type   smsw_constant_complex1, @function
smsw_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  smsw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   smsw_constant_complex1, .-smsw_constant_complex1

    
.globl smsw_constant_complex2
         .type   smsw_constant_complex2, @function
smsw_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  smsw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   smsw_constant_complex2, .-smsw_constant_complex2

    
.globl stc_plain
         .type   stc_plain, @function
stc_plain:
      stc
  mov $0x0,%eax

    ret
         .size   stc_plain, .-stc_plain

    
.globl stc_allregs
         .type   stc_allregs, @function
stc_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  stc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stc_allregs, .-stc_allregs

    
.globl stc_constant_simple_clear
         .type   stc_constant_simple_clear, @function
stc_constant_simple_clear:
      nop
  pushw $0x0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  stc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stc_constant_simple_clear, .-stc_constant_simple_clear

    
.globl stc_constant_simple_set
         .type   stc_constant_simple_set, @function
stc_constant_simple_set:
      nop
  pushw $0xfeff
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  stc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stc_constant_simple_set, .-stc_constant_simple_set

    
.globl stc_constant_complex1
         .type   stc_constant_complex1, @function
stc_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  stc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stc_constant_complex1, .-stc_constant_complex1

    
.globl stc_constant_complex2
         .type   stc_constant_complex2, @function
stc_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  stc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stc_constant_complex2, .-stc_constant_complex2

    
.globl std_plain
         .type   std_plain, @function
std_plain:
      std
  mov $0x0,%eax

    ret
         .size   std_plain, .-std_plain

    
.globl std_allregs
         .type   std_allregs, @function
std_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  std
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   std_allregs, .-std_allregs

    
.globl std_constant_simple
         .type   std_constant_simple, @function
std_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  std
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   std_constant_simple, .-std_constant_simple

    
.globl std_constant_complex1
         .type   std_constant_complex1, @function
std_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  std
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   std_constant_complex1, .-std_constant_complex1

    
.globl std_constant_complex2
         .type   std_constant_complex2, @function
std_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  std
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   std_constant_complex2, .-std_constant_complex2

    
.globl sti_plain
         .type   sti_plain, @function
sti_plain:
      sti
  mov $0x0,%eax

    ret
         .size   sti_plain, .-sti_plain

    
.globl sti_allregs
         .type   sti_allregs, @function
sti_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  sti
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sti_allregs, .-sti_allregs

    
.globl sti_constant_simple
         .type   sti_constant_simple, @function
sti_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  sti
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sti_constant_simple, .-sti_constant_simple

    
.globl sti_constant_complex1
         .type   sti_constant_complex1, @function
sti_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  sti
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sti_constant_complex1, .-sti_constant_complex1

    
.globl sti_constant_complex2
         .type   sti_constant_complex2, @function
sti_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  sti
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sti_constant_complex2, .-sti_constant_complex2

    
.globl stos1_plain
         .type   stos1_plain, @function
stos1_plain:
      .byte 0xaa
  mov $0x0,%eax

    ret
         .size   stos1_plain, .-stos1_plain

    
.globl stos1_allregs
         .type   stos1_allregs, @function
stos1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stos1_allregs, .-stos1_allregs

    
.globl stos1_constant_simple
         .type   stos1_constant_simple, @function
stos1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stos1_constant_simple, .-stos1_constant_simple

    
.globl stos1_constant_complex1
         .type   stos1_constant_complex1, @function
stos1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stos1_constant_complex1, .-stos1_constant_complex1

    
.globl stos1_constant_complex2
         .type   stos1_constant_complex2, @function
stos1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stos1_constant_complex2, .-stos1_constant_complex2

    
.globl stos2_mv_plain
         .type   stos2_mv_plain, @function
stos2_mv_plain:
      .byte 0x66,0xab
  mov $0x0,%eax

    ret
         .size   stos2_mv_plain, .-stos2_mv_plain

    
.globl stos2_mv_allregs
         .type   stos2_mv_allregs, @function
stos2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stos2_mv_allregs, .-stos2_mv_allregs

    
.globl stos2_mv_constant_simple
         .type   stos2_mv_constant_simple, @function
stos2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stos2_mv_constant_simple, .-stos2_mv_constant_simple

    
.globl stos2_mv_constant_complex1
         .type   stos2_mv_constant_complex1, @function
stos2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stos2_mv_constant_complex1, .-stos2_mv_constant_complex1

    
.globl stos2_mv_constant_complex2
         .type   stos2_mv_constant_complex2, @function
stos2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stos2_mv_constant_complex2, .-stos2_mv_constant_complex2

    
.globl stos3_plain
         .type   stos3_plain, @function
stos3_plain:
      .byte 0xab
  mov $0x0,%eax

    ret
         .size   stos3_plain, .-stos3_plain

    
.globl stos3_allregs
         .type   stos3_allregs, @function
stos3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stos3_allregs, .-stos3_allregs

    
.globl stos3_constant_simple
         .type   stos3_constant_simple, @function
stos3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stos3_constant_simple, .-stos3_constant_simple

    
.globl stos3_constant_complex1
         .type   stos3_constant_complex1, @function
stos3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stos3_constant_complex1, .-stos3_constant_complex1

    
.globl stos3_constant_complex2
         .type   stos3_constant_complex2, @function
stos3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   stos3_constant_complex2, .-stos3_constant_complex2

    
.globl str_plain
         .type   str_plain, @function
str_plain:
      str (%eax)
  mov $0x0,%eax

    ret
         .size   str_plain, .-str_plain

    
.globl str_allregs
         .type   str_allregs, @function
str_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  str (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   str_allregs, .-str_allregs

    
.globl str_constant_simple
         .type   str_constant_simple, @function
str_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  str (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   str_constant_simple, .-str_constant_simple

    
.globl str_constant_complex1
         .type   str_constant_complex1, @function
str_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  str (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   str_constant_complex1, .-str_constant_complex1

    
.globl str_constant_complex2
         .type   str_constant_complex2, @function
str_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  str (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   str_constant_complex2, .-str_constant_complex2

    
.globl sub1_mv_plain
         .type   sub1_mv_plain, @function
sub1_mv_plain:
      .byte 0x2c,0x02
  mov $0x0,%eax

    ret
         .size   sub1_mv_plain, .-sub1_mv_plain

    
.globl sub1_mv_allregs
         .type   sub1_mv_allregs, @function
sub1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x2c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub1_mv_allregs, .-sub1_mv_allregs

    
.globl sub1_mv_constant_simple
         .type   sub1_mv_constant_simple, @function
sub1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x2c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub1_mv_constant_simple, .-sub1_mv_constant_simple

    
.globl sub1_mv_constant_complex1
         .type   sub1_mv_constant_complex1, @function
sub1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x2c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub1_mv_constant_complex1, .-sub1_mv_constant_complex1

    
.globl sub1_mv_constant_complex2
         .type   sub1_mv_constant_complex2, @function
sub1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x2c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub1_mv_constant_complex2, .-sub1_mv_constant_complex2

    
.globl sub2_mv_plain
         .type   sub2_mv_plain, @function
sub2_mv_plain:
      .byte 0x2c,0xfe
  mov $0x0,%eax

    ret
         .size   sub2_mv_plain, .-sub2_mv_plain

    
.globl sub2_mv_allregs
         .type   sub2_mv_allregs, @function
sub2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x2c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub2_mv_allregs, .-sub2_mv_allregs

    
.globl sub2_mv_constant_simple
         .type   sub2_mv_constant_simple, @function
sub2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x2c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub2_mv_constant_simple, .-sub2_mv_constant_simple

    
.globl sub2_mv_constant_complex1
         .type   sub2_mv_constant_complex1, @function
sub2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x2c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub2_mv_constant_complex1, .-sub2_mv_constant_complex1

    
.globl sub2_mv_constant_complex2
         .type   sub2_mv_constant_complex2, @function
sub2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x2c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub2_mv_constant_complex2, .-sub2_mv_constant_complex2

    
.globl sub3_mv_plain
         .type   sub3_mv_plain, @function
sub3_mv_plain:
      .byte 0x66,0x2d,0x02,0x00
  mov $0x0,%eax

    ret
         .size   sub3_mv_plain, .-sub3_mv_plain

    
.globl sub3_mv_allregs
         .type   sub3_mv_allregs, @function
sub3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x2d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub3_mv_allregs, .-sub3_mv_allregs

    
.globl sub3_mv_constant_simple
         .type   sub3_mv_constant_simple, @function
sub3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x2d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub3_mv_constant_simple, .-sub3_mv_constant_simple

    
.globl sub3_mv_constant_complex1
         .type   sub3_mv_constant_complex1, @function
sub3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x2d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub3_mv_constant_complex1, .-sub3_mv_constant_complex1

    
.globl sub3_mv_constant_complex2
         .type   sub3_mv_constant_complex2, @function
sub3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x2d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub3_mv_constant_complex2, .-sub3_mv_constant_complex2

    
.globl sub4_mv_plain
         .type   sub4_mv_plain, @function
sub4_mv_plain:
      .byte 0x66,0x2d,0xfe,0xff
  mov $0x0,%eax

    ret
         .size   sub4_mv_plain, .-sub4_mv_plain

    
.globl sub4_mv_allregs
         .type   sub4_mv_allregs, @function
sub4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x2d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub4_mv_allregs, .-sub4_mv_allregs

    
.globl sub4_mv_constant_simple
         .type   sub4_mv_constant_simple, @function
sub4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x2d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub4_mv_constant_simple, .-sub4_mv_constant_simple

    
.globl sub4_mv_constant_complex1
         .type   sub4_mv_constant_complex1, @function
sub4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x2d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub4_mv_constant_complex1, .-sub4_mv_constant_complex1

    
.globl sub4_mv_constant_complex2
         .type   sub4_mv_constant_complex2, @function
sub4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x2d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub4_mv_constant_complex2, .-sub4_mv_constant_complex2

    
.globl sub5_plain
         .type   sub5_plain, @function
sub5_plain:
      .byte 0x2d,0x02,0x00,0x00,0x00
  mov $0x0,%eax

    ret
         .size   sub5_plain, .-sub5_plain

    
.globl sub5_allregs
         .type   sub5_allregs, @function
sub5_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x2d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub5_allregs, .-sub5_allregs

    
.globl sub5_constant_simple
         .type   sub5_constant_simple, @function
sub5_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x2d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub5_constant_simple, .-sub5_constant_simple

    
.globl sub5_constant_complex1
         .type   sub5_constant_complex1, @function
sub5_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x2d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub5_constant_complex1, .-sub5_constant_complex1

    
.globl sub5_constant_complex2
         .type   sub5_constant_complex2, @function
sub5_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x2d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub5_constant_complex2, .-sub5_constant_complex2

    
.globl sub6_mv_plain
         .type   sub6_mv_plain, @function
sub6_mv_plain:
      .byte 0x2d,0xfe,0xff,0xff,0xff
  mov $0x0,%eax

    ret
         .size   sub6_mv_plain, .-sub6_mv_plain

    
.globl sub6_mv_allregs
         .type   sub6_mv_allregs, @function
sub6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x2d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub6_mv_allregs, .-sub6_mv_allregs

    
.globl sub6_mv_constant_simple
         .type   sub6_mv_constant_simple, @function
sub6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x2d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub6_mv_constant_simple, .-sub6_mv_constant_simple

    
.globl sub6_mv_constant_complex1
         .type   sub6_mv_constant_complex1, @function
sub6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x2d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub6_mv_constant_complex1, .-sub6_mv_constant_complex1

    
.globl sub6_mv_constant_complex2
         .type   sub6_mv_constant_complex2, @function
sub6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x2d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub6_mv_constant_complex2, .-sub6_mv_constant_complex2

    
.globl sub7_mv_plain
         .type   sub7_mv_plain, @function
sub7_mv_plain:
      subl 8(%ebp), %eax
  mov $0x0,%eax

    ret
         .size   sub7_mv_plain, .-sub7_mv_plain

    
.globl sub7_mv_allregs
         .type   sub7_mv_allregs, @function
sub7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  subl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub7_mv_allregs, .-sub7_mv_allregs

    
.globl sub7_mv_constant_simple
         .type   sub7_mv_constant_simple, @function
sub7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  subl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub7_mv_constant_simple, .-sub7_mv_constant_simple

    
.globl sub7_mv_constant_complex1
         .type   sub7_mv_constant_complex1, @function
sub7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  subl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub7_mv_constant_complex1, .-sub7_mv_constant_complex1

    
.globl sub7_mv_constant_complex2
         .type   sub7_mv_constant_complex2, @function
sub7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  subl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub7_mv_constant_complex2, .-sub7_mv_constant_complex2

    
.globl sub_locked_mv_plain
         .type   sub_locked_mv_plain, @function
sub_locked_mv_plain:
      .byte 0xf0,0x2b,0x45,0x08
  mov $0x0,%eax

    ret
         .size   sub_locked_mv_plain, .-sub_locked_mv_plain

    
.globl sub_locked_mv_allregs
         .type   sub_locked_mv_allregs, @function
sub_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xf0,0x2b,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_locked_mv_allregs, .-sub_locked_mv_allregs

    
.globl sub_locked_mv_constant_simple
         .type   sub_locked_mv_constant_simple, @function
sub_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xf0,0x2b,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_locked_mv_constant_simple, .-sub_locked_mv_constant_simple

    
.globl sub_locked_mv_constant_complex1
         .type   sub_locked_mv_constant_complex1, @function
sub_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xf0,0x2b,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_locked_mv_constant_complex1, .-sub_locked_mv_constant_complex1

    
.globl sub_locked_mv_constant_complex2
         .type   sub_locked_mv_constant_complex2, @function
sub_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xf0,0x2b,0x45,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_locked_mv_constant_complex2, .-sub_locked_mv_constant_complex2

    
.globl sub_ft_0_mv_plain
         .type   sub_ft_0_mv_plain, @function
sub_ft_0_mv_plain:
      mov $0x01,%al; mov $0x01,%bl; sub %bl,%al
  mov $0x0,%eax

    ret
         .size   sub_ft_0_mv_plain, .-sub_ft_0_mv_plain

    
.globl sub_ft_0_mv_allregs
         .type   sub_ft_0_mv_allregs, @function
sub_ft_0_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x01,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_0_mv_allregs, .-sub_ft_0_mv_allregs

    
.globl sub_ft_0_mv_constant_simple
         .type   sub_ft_0_mv_constant_simple, @function
sub_ft_0_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x01,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_0_mv_constant_simple, .-sub_ft_0_mv_constant_simple

    
.globl sub_ft_0_mv_constant_complex1
         .type   sub_ft_0_mv_constant_complex1, @function
sub_ft_0_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x01,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_0_mv_constant_complex1, .-sub_ft_0_mv_constant_complex1

    
.globl sub_ft_0_mv_constant_complex2
         .type   sub_ft_0_mv_constant_complex2, @function
sub_ft_0_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x01,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_0_mv_constant_complex2, .-sub_ft_0_mv_constant_complex2

    
.globl sub_ft_1_mv_plain
         .type   sub_ft_1_mv_plain, @function
sub_ft_1_mv_plain:
      mov $0x01,%al; mov $0x02,%bl; sub %bl,%al
  mov $0x0,%eax

    ret
         .size   sub_ft_1_mv_plain, .-sub_ft_1_mv_plain

    
.globl sub_ft_1_mv_allregs
         .type   sub_ft_1_mv_allregs, @function
sub_ft_1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x02,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_1_mv_allregs, .-sub_ft_1_mv_allregs

    
.globl sub_ft_1_mv_constant_simple
         .type   sub_ft_1_mv_constant_simple, @function
sub_ft_1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x02,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_1_mv_constant_simple, .-sub_ft_1_mv_constant_simple

    
.globl sub_ft_1_mv_constant_complex1
         .type   sub_ft_1_mv_constant_complex1, @function
sub_ft_1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x02,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_1_mv_constant_complex1, .-sub_ft_1_mv_constant_complex1

    
.globl sub_ft_1_mv_constant_complex2
         .type   sub_ft_1_mv_constant_complex2, @function
sub_ft_1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x02,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_1_mv_constant_complex2, .-sub_ft_1_mv_constant_complex2

    
.globl sub_ft_2_mv_plain
         .type   sub_ft_2_mv_plain, @function
sub_ft_2_mv_plain:
      mov $0x80,%al; mov $0x7f,%bl; sub %bl,%al
  mov $0x0,%eax

    ret
         .size   sub_ft_2_mv_plain, .-sub_ft_2_mv_plain

    
.globl sub_ft_2_mv_allregs
         .type   sub_ft_2_mv_allregs, @function
sub_ft_2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0x7f,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_2_mv_allregs, .-sub_ft_2_mv_allregs

    
.globl sub_ft_2_mv_constant_simple
         .type   sub_ft_2_mv_constant_simple, @function
sub_ft_2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0x7f,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_2_mv_constant_simple, .-sub_ft_2_mv_constant_simple

    
.globl sub_ft_2_mv_constant_complex1
         .type   sub_ft_2_mv_constant_complex1, @function
sub_ft_2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0x7f,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_2_mv_constant_complex1, .-sub_ft_2_mv_constant_complex1

    
.globl sub_ft_2_mv_constant_complex2
         .type   sub_ft_2_mv_constant_complex2, @function
sub_ft_2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0x7f,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_2_mv_constant_complex2, .-sub_ft_2_mv_constant_complex2

    
.globl sub_ft_3_mv_plain
         .type   sub_ft_3_mv_plain, @function
sub_ft_3_mv_plain:
      mov $0xff,%al; mov $0x02,%bl; sub %bl,%al
  mov $0x0,%eax

    ret
         .size   sub_ft_3_mv_plain, .-sub_ft_3_mv_plain

    
.globl sub_ft_3_mv_allregs
         .type   sub_ft_3_mv_allregs, @function
sub_ft_3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0xff,%al; mov $0x02,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_3_mv_allregs, .-sub_ft_3_mv_allregs

    
.globl sub_ft_3_mv_constant_simple
         .type   sub_ft_3_mv_constant_simple, @function
sub_ft_3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0xff,%al; mov $0x02,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_3_mv_constant_simple, .-sub_ft_3_mv_constant_simple

    
.globl sub_ft_3_mv_constant_complex1
         .type   sub_ft_3_mv_constant_complex1, @function
sub_ft_3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0xff,%al; mov $0x02,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_3_mv_constant_complex1, .-sub_ft_3_mv_constant_complex1

    
.globl sub_ft_3_mv_constant_complex2
         .type   sub_ft_3_mv_constant_complex2, @function
sub_ft_3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0xff,%al; mov $0x02,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_3_mv_constant_complex2, .-sub_ft_3_mv_constant_complex2

    
.globl sub_ft_4_mv_plain
         .type   sub_ft_4_mv_plain, @function
sub_ft_4_mv_plain:
      mov $0x01,%al; mov $0xff,%bl; sub %bl,%al
  mov $0x0,%eax

    ret
         .size   sub_ft_4_mv_plain, .-sub_ft_4_mv_plain

    
.globl sub_ft_4_mv_allregs
         .type   sub_ft_4_mv_allregs, @function
sub_ft_4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0xff,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_4_mv_allregs, .-sub_ft_4_mv_allregs

    
.globl sub_ft_4_mv_constant_simple
         .type   sub_ft_4_mv_constant_simple, @function
sub_ft_4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0xff,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_4_mv_constant_simple, .-sub_ft_4_mv_constant_simple

    
.globl sub_ft_4_mv_constant_complex1
         .type   sub_ft_4_mv_constant_complex1, @function
sub_ft_4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0xff,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_4_mv_constant_complex1, .-sub_ft_4_mv_constant_complex1

    
.globl sub_ft_4_mv_constant_complex2
         .type   sub_ft_4_mv_constant_complex2, @function
sub_ft_4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0xff,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_4_mv_constant_complex2, .-sub_ft_4_mv_constant_complex2

    
.globl sub_ft_5_mv_plain
         .type   sub_ft_5_mv_plain, @function
sub_ft_5_mv_plain:
      mov $0x01,%al; mov $0x80,%bl; sub %bl,%al
  mov $0x0,%eax

    ret
         .size   sub_ft_5_mv_plain, .-sub_ft_5_mv_plain

    
.globl sub_ft_5_mv_allregs
         .type   sub_ft_5_mv_allregs, @function
sub_ft_5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x80,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_5_mv_allregs, .-sub_ft_5_mv_allregs

    
.globl sub_ft_5_mv_constant_simple
         .type   sub_ft_5_mv_constant_simple, @function
sub_ft_5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x80,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_5_mv_constant_simple, .-sub_ft_5_mv_constant_simple

    
.globl sub_ft_5_mv_constant_complex1
         .type   sub_ft_5_mv_constant_complex1, @function
sub_ft_5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x80,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_5_mv_constant_complex1, .-sub_ft_5_mv_constant_complex1

    
.globl sub_ft_5_mv_constant_complex2
         .type   sub_ft_5_mv_constant_complex2, @function
sub_ft_5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x01,%al; mov $0x80,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_5_mv_constant_complex2, .-sub_ft_5_mv_constant_complex2

    
.globl sub_ft_6_mv_plain
         .type   sub_ft_6_mv_plain, @function
sub_ft_6_mv_plain:
      mov $0x80,%al; mov $0x80,%bl; sub %bl,%al
  mov $0x0,%eax

    ret
         .size   sub_ft_6_mv_plain, .-sub_ft_6_mv_plain

    
.globl sub_ft_6_mv_allregs
         .type   sub_ft_6_mv_allregs, @function
sub_ft_6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0x80,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_6_mv_allregs, .-sub_ft_6_mv_allregs

    
.globl sub_ft_6_mv_constant_simple
         .type   sub_ft_6_mv_constant_simple, @function
sub_ft_6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0x80,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_6_mv_constant_simple, .-sub_ft_6_mv_constant_simple

    
.globl sub_ft_6_mv_constant_complex1
         .type   sub_ft_6_mv_constant_complex1, @function
sub_ft_6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0x80,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_6_mv_constant_complex1, .-sub_ft_6_mv_constant_complex1

    
.globl sub_ft_6_mv_constant_complex2
         .type   sub_ft_6_mv_constant_complex2, @function
sub_ft_6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0x80,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_6_mv_constant_complex2, .-sub_ft_6_mv_constant_complex2

    
.globl sub_ft_7_mv_plain
         .type   sub_ft_7_mv_plain, @function
sub_ft_7_mv_plain:
      mov $0x80,%al; mov $0xff,%bl; sub %bl,%al
  mov $0x0,%eax

    ret
         .size   sub_ft_7_mv_plain, .-sub_ft_7_mv_plain

    
.globl sub_ft_7_mv_allregs
         .type   sub_ft_7_mv_allregs, @function
sub_ft_7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0xff,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_7_mv_allregs, .-sub_ft_7_mv_allregs

    
.globl sub_ft_7_mv_constant_simple
         .type   sub_ft_7_mv_constant_simple, @function
sub_ft_7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0xff,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_7_mv_constant_simple, .-sub_ft_7_mv_constant_simple

    
.globl sub_ft_7_mv_constant_complex1
         .type   sub_ft_7_mv_constant_complex1, @function
sub_ft_7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0xff,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_7_mv_constant_complex1, .-sub_ft_7_mv_constant_complex1

    
.globl sub_ft_7_mv_constant_complex2
         .type   sub_ft_7_mv_constant_complex2, @function
sub_ft_7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  mov $0x80,%al; mov $0xff,%bl; sub %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   sub_ft_7_mv_constant_complex2, .-sub_ft_7_mv_constant_complex2

    
.globl test1_mv_plain
         .type   test1_mv_plain, @function
test1_mv_plain:
      test $0x42,%al
  mov $0x0,%eax

    ret
         .size   test1_mv_plain, .-test1_mv_plain

    
.globl test1_mv_allregs
         .type   test1_mv_allregs, @function
test1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  test $0x42,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test1_mv_allregs, .-test1_mv_allregs

    
.globl test1_mv_constant_simple
         .type   test1_mv_constant_simple, @function
test1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  test $0x42,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test1_mv_constant_simple, .-test1_mv_constant_simple

    
.globl test1_mv_constant_complex1
         .type   test1_mv_constant_complex1, @function
test1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  test $0x42,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test1_mv_constant_complex1, .-test1_mv_constant_complex1

    
.globl test1_mv_constant_complex2
         .type   test1_mv_constant_complex2, @function
test1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  test $0x42,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test1_mv_constant_complex2, .-test1_mv_constant_complex2

    
.globl test2_mv_plain
         .type   test2_mv_plain, @function
test2_mv_plain:
      test $0x42,%ax
  mov $0x0,%eax

    ret
         .size   test2_mv_plain, .-test2_mv_plain

    
.globl test2_mv_allregs
         .type   test2_mv_allregs, @function
test2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  test $0x42,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test2_mv_allregs, .-test2_mv_allregs

    
.globl test2_mv_constant_simple
         .type   test2_mv_constant_simple, @function
test2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  test $0x42,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test2_mv_constant_simple, .-test2_mv_constant_simple

    
.globl test2_mv_constant_complex1
         .type   test2_mv_constant_complex1, @function
test2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  test $0x42,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test2_mv_constant_complex1, .-test2_mv_constant_complex1

    
.globl test2_mv_constant_complex2
         .type   test2_mv_constant_complex2, @function
test2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  test $0x42,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test2_mv_constant_complex2, .-test2_mv_constant_complex2

    
.globl test3_plain
         .type   test3_plain, @function
test3_plain:
      test $0x42,%eax
  mov $0x0,%eax

    ret
         .size   test3_plain, .-test3_plain

    
.globl test3_allregs
         .type   test3_allregs, @function
test3_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  test $0x42,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test3_allregs, .-test3_allregs

    
.globl test3_constant_simple
         .type   test3_constant_simple, @function
test3_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  test $0x42,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test3_constant_simple, .-test3_constant_simple

    
.globl test3_constant_complex1
         .type   test3_constant_complex1, @function
test3_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  test $0x42,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test3_constant_complex1, .-test3_constant_complex1

    
.globl test3_constant_complex2
         .type   test3_constant_complex2, @function
test3_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  test $0x42,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test3_constant_complex2, .-test3_constant_complex2

    
.globl test4_mv_plain
         .type   test4_mv_plain, @function
test4_mv_plain:
      testb $0x42,(%ecx)
  mov $0x0,%eax

    ret
         .size   test4_mv_plain, .-test4_mv_plain

    
.globl test4_mv_allregs
         .type   test4_mv_allregs, @function
test4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  testb $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test4_mv_allregs, .-test4_mv_allregs

    
.globl test4_mv_constant_simple
         .type   test4_mv_constant_simple, @function
test4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  testb $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test4_mv_constant_simple, .-test4_mv_constant_simple

    
.globl test4_mv_constant_complex1
         .type   test4_mv_constant_complex1, @function
test4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  testb $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test4_mv_constant_complex1, .-test4_mv_constant_complex1

    
.globl test4_mv_constant_complex2
         .type   test4_mv_constant_complex2, @function
test4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  testb $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test4_mv_constant_complex2, .-test4_mv_constant_complex2

    
.globl test5_mv_plain
         .type   test5_mv_plain, @function
test5_mv_plain:
      testw $0x42,(%ecx)
  mov $0x0,%eax

    ret
         .size   test5_mv_plain, .-test5_mv_plain

    
.globl test5_mv_allregs
         .type   test5_mv_allregs, @function
test5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  testw $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test5_mv_allregs, .-test5_mv_allregs

    
.globl test5_mv_constant_simple
         .type   test5_mv_constant_simple, @function
test5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  testw $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test5_mv_constant_simple, .-test5_mv_constant_simple

    
.globl test5_mv_constant_complex1
         .type   test5_mv_constant_complex1, @function
test5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  testw $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test5_mv_constant_complex1, .-test5_mv_constant_complex1

    
.globl test5_mv_constant_complex2
         .type   test5_mv_constant_complex2, @function
test5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  testw $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test5_mv_constant_complex2, .-test5_mv_constant_complex2

    
.globl test6_mv_plain
         .type   test6_mv_plain, @function
test6_mv_plain:
      testl $0x42,(%ecx)
  mov $0x0,%eax

    ret
         .size   test6_mv_plain, .-test6_mv_plain

    
.globl test6_mv_allregs
         .type   test6_mv_allregs, @function
test6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  testl $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test6_mv_allregs, .-test6_mv_allregs

    
.globl test6_mv_constant_simple
         .type   test6_mv_constant_simple, @function
test6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  testl $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test6_mv_constant_simple, .-test6_mv_constant_simple

    
.globl test6_mv_constant_complex1
         .type   test6_mv_constant_complex1, @function
test6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  testl $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test6_mv_constant_complex1, .-test6_mv_constant_complex1

    
.globl test6_mv_constant_complex2
         .type   test6_mv_constant_complex2, @function
test6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  testl $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test6_mv_constant_complex2, .-test6_mv_constant_complex2

    
.globl test7_mv_plain
         .type   test7_mv_plain, @function
test7_mv_plain:
      test %bl,(%ecx)
  mov $0x0,%eax

    ret
         .size   test7_mv_plain, .-test7_mv_plain

    
.globl test7_mv_allregs
         .type   test7_mv_allregs, @function
test7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  test %bl,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test7_mv_allregs, .-test7_mv_allregs

    
.globl test7_mv_constant_simple
         .type   test7_mv_constant_simple, @function
test7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  test %bl,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test7_mv_constant_simple, .-test7_mv_constant_simple

    
.globl test7_mv_constant_complex1
         .type   test7_mv_constant_complex1, @function
test7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  test %bl,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test7_mv_constant_complex1, .-test7_mv_constant_complex1

    
.globl test7_mv_constant_complex2
         .type   test7_mv_constant_complex2, @function
test7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  test %bl,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test7_mv_constant_complex2, .-test7_mv_constant_complex2

    
.globl test8_mv_plain
         .type   test8_mv_plain, @function
test8_mv_plain:
      test %bx,(%ecx)
  mov $0x0,%eax

    ret
         .size   test8_mv_plain, .-test8_mv_plain

    
.globl test8_mv_allregs
         .type   test8_mv_allregs, @function
test8_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  test %bx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test8_mv_allregs, .-test8_mv_allregs

    
.globl test8_mv_constant_simple
         .type   test8_mv_constant_simple, @function
test8_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  test %bx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test8_mv_constant_simple, .-test8_mv_constant_simple

    
.globl test8_mv_constant_complex1
         .type   test8_mv_constant_complex1, @function
test8_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  test %bx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test8_mv_constant_complex1, .-test8_mv_constant_complex1

    
.globl test8_mv_constant_complex2
         .type   test8_mv_constant_complex2, @function
test8_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  test %bx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test8_mv_constant_complex2, .-test8_mv_constant_complex2

    
.globl test9_mv_plain
         .type   test9_mv_plain, @function
test9_mv_plain:
      test %ebx,(%ecx)
  mov $0x0,%eax

    ret
         .size   test9_mv_plain, .-test9_mv_plain

    
.globl test9_mv_allregs
         .type   test9_mv_allregs, @function
test9_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  test %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test9_mv_allregs, .-test9_mv_allregs

    
.globl test9_mv_constant_simple
         .type   test9_mv_constant_simple, @function
test9_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  test %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test9_mv_constant_simple, .-test9_mv_constant_simple

    
.globl test9_mv_constant_complex1
         .type   test9_mv_constant_complex1, @function
test9_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  test %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test9_mv_constant_complex1, .-test9_mv_constant_complex1

    
.globl test9_mv_constant_complex2
         .type   test9_mv_constant_complex2, @function
test9_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  test %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   test9_mv_constant_complex2, .-test9_mv_constant_complex2

    
.globl verr_plain
         .type   verr_plain, @function
verr_plain:
      verr (%eax)
  mov $0x0,%eax

    ret
         .size   verr_plain, .-verr_plain

    
.globl verr_allregs
         .type   verr_allregs, @function
verr_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  verr (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   verr_allregs, .-verr_allregs

    
.globl verr_constant_simple
         .type   verr_constant_simple, @function
verr_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  verr (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   verr_constant_simple, .-verr_constant_simple

    
.globl verr_constant_complex1
         .type   verr_constant_complex1, @function
verr_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  verr (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   verr_constant_complex1, .-verr_constant_complex1

    
.globl verr_constant_complex2
         .type   verr_constant_complex2, @function
verr_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  verr (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   verr_constant_complex2, .-verr_constant_complex2

    
.globl verw_plain
         .type   verw_plain, @function
verw_plain:
      verw (%eax)
  mov $0x0,%eax

    ret
         .size   verw_plain, .-verw_plain

    
.globl verw_allregs
         .type   verw_allregs, @function
verw_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  verw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   verw_allregs, .-verw_allregs

    
.globl verw_constant_simple
         .type   verw_constant_simple, @function
verw_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  verw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   verw_constant_simple, .-verw_constant_simple

    
.globl verw_constant_complex1
         .type   verw_constant_complex1, @function
verw_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  verw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   verw_constant_complex1, .-verw_constant_complex1

    
.globl verw_constant_complex2
         .type   verw_constant_complex2, @function
verw_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  verw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   verw_constant_complex2, .-verw_constant_complex2

    
.globl wait_plain
         .type   wait_plain, @function
wait_plain:
      .byte 0x9b
  mov $0x0,%eax

    ret
         .size   wait_plain, .-wait_plain

    
.globl wait_allregs
         .type   wait_allregs, @function
wait_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x9b
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   wait_allregs, .-wait_allregs

    
.globl wait_constant_simple
         .type   wait_constant_simple, @function
wait_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x9b
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   wait_constant_simple, .-wait_constant_simple

    
.globl wait_constant_complex1
         .type   wait_constant_complex1, @function
wait_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x9b
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   wait_constant_complex1, .-wait_constant_complex1

    
.globl wait_constant_complex2
         .type   wait_constant_complex2, @function
wait_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x9b
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   wait_constant_complex2, .-wait_constant_complex2

    
.globl xchg1_plain
         .type   xchg1_plain, @function
xchg1_plain:
      xchg %ax,%bx
  mov $0x0,%eax

    ret
         .size   xchg1_plain, .-xchg1_plain

    
.globl xchg1_allregs
         .type   xchg1_allregs, @function
xchg1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  xchg %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg1_allregs, .-xchg1_allregs

    
.globl xchg1_constant_simple
         .type   xchg1_constant_simple, @function
xchg1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  xchg %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg1_constant_simple, .-xchg1_constant_simple

    
.globl xchg1_constant_complex1
         .type   xchg1_constant_complex1, @function
xchg1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  xchg %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg1_constant_complex1, .-xchg1_constant_complex1

    
.globl xchg1_constant_complex2
         .type   xchg1_constant_complex2, @function
xchg1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  xchg %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg1_constant_complex2, .-xchg1_constant_complex2

    
.globl xchg2_plain
         .type   xchg2_plain, @function
xchg2_plain:
      xchg %eax,%ebx
  mov $0x0,%eax

    ret
         .size   xchg2_plain, .-xchg2_plain

    
.globl xchg2_allregs
         .type   xchg2_allregs, @function
xchg2_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  xchg %eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg2_allregs, .-xchg2_allregs

    
.globl xchg2_constant_simple
         .type   xchg2_constant_simple, @function
xchg2_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  xchg %eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg2_constant_simple, .-xchg2_constant_simple

    
.globl xchg2_constant_complex1
         .type   xchg2_constant_complex1, @function
xchg2_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  xchg %eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg2_constant_complex1, .-xchg2_constant_complex1

    
.globl xchg2_constant_complex2
         .type   xchg2_constant_complex2, @function
xchg2_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  xchg %eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg2_constant_complex2, .-xchg2_constant_complex2

    
.globl xchg3_mv_plain
         .type   xchg3_mv_plain, @function
xchg3_mv_plain:
      xchg %bl,(%ecx)
  mov $0x0,%eax

    ret
         .size   xchg3_mv_plain, .-xchg3_mv_plain

    
.globl xchg3_mv_allregs
         .type   xchg3_mv_allregs, @function
xchg3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  xchg %bl,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg3_mv_allregs, .-xchg3_mv_allregs

    
.globl xchg3_mv_constant_simple
         .type   xchg3_mv_constant_simple, @function
xchg3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  xchg %bl,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg3_mv_constant_simple, .-xchg3_mv_constant_simple

    
.globl xchg3_mv_constant_complex1
         .type   xchg3_mv_constant_complex1, @function
xchg3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  xchg %bl,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg3_mv_constant_complex1, .-xchg3_mv_constant_complex1

    
.globl xchg3_mv_constant_complex2
         .type   xchg3_mv_constant_complex2, @function
xchg3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  xchg %bl,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg3_mv_constant_complex2, .-xchg3_mv_constant_complex2

    
.globl xchg4_mv_plain
         .type   xchg4_mv_plain, @function
xchg4_mv_plain:
      xchg %bx,(%ecx)
  mov $0x0,%eax

    ret
         .size   xchg4_mv_plain, .-xchg4_mv_plain

    
.globl xchg4_mv_allregs
         .type   xchg4_mv_allregs, @function
xchg4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  xchg %bx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg4_mv_allregs, .-xchg4_mv_allregs

    
.globl xchg4_mv_constant_simple
         .type   xchg4_mv_constant_simple, @function
xchg4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  xchg %bx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg4_mv_constant_simple, .-xchg4_mv_constant_simple

    
.globl xchg4_mv_constant_complex1
         .type   xchg4_mv_constant_complex1, @function
xchg4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  xchg %bx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg4_mv_constant_complex1, .-xchg4_mv_constant_complex1

    
.globl xchg4_mv_constant_complex2
         .type   xchg4_mv_constant_complex2, @function
xchg4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  xchg %bx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg4_mv_constant_complex2, .-xchg4_mv_constant_complex2

    
.globl xchg5_mv_plain
         .type   xchg5_mv_plain, @function
xchg5_mv_plain:
      xchg %ebx,(%ecx)
  mov $0x0,%eax

    ret
         .size   xchg5_mv_plain, .-xchg5_mv_plain

    
.globl xchg5_mv_allregs
         .type   xchg5_mv_allregs, @function
xchg5_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  xchg %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg5_mv_allregs, .-xchg5_mv_allregs

    
.globl xchg5_mv_constant_simple
         .type   xchg5_mv_constant_simple, @function
xchg5_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  xchg %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg5_mv_constant_simple, .-xchg5_mv_constant_simple

    
.globl xchg5_mv_constant_complex1
         .type   xchg5_mv_constant_complex1, @function
xchg5_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  xchg %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg5_mv_constant_complex1, .-xchg5_mv_constant_complex1

    
.globl xchg5_mv_constant_complex2
         .type   xchg5_mv_constant_complex2, @function
xchg5_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  xchg %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg5_mv_constant_complex2, .-xchg5_mv_constant_complex2

    
.globl xchg_locked_mv_plain
         .type   xchg_locked_mv_plain, @function
xchg_locked_mv_plain:
      lock xchg %ebx,(%ecx)
  mov $0x0,%eax

    ret
         .size   xchg_locked_mv_plain, .-xchg_locked_mv_plain

    
.globl xchg_locked_mv_allregs
         .type   xchg_locked_mv_allregs, @function
xchg_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lock xchg %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg_locked_mv_allregs, .-xchg_locked_mv_allregs

    
.globl xchg_locked_mv_constant_simple
         .type   xchg_locked_mv_constant_simple, @function
xchg_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lock xchg %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg_locked_mv_constant_simple, .-xchg_locked_mv_constant_simple

    
.globl xchg_locked_mv_constant_complex1
         .type   xchg_locked_mv_constant_complex1, @function
xchg_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lock xchg %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg_locked_mv_constant_complex1, .-xchg_locked_mv_constant_complex1

    
.globl xchg_locked_mv_constant_complex2
         .type   xchg_locked_mv_constant_complex2, @function
xchg_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lock xchg %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xchg_locked_mv_constant_complex2, .-xchg_locked_mv_constant_complex2

    
.globl xlat1_plain
         .type   xlat1_plain, @function
xlat1_plain:
      .byte 0xd7
  mov $0x0,%eax

    ret
         .size   xlat1_plain, .-xlat1_plain

    
.globl xlat1_allregs
         .type   xlat1_allregs, @function
xlat1_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0xd7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xlat1_allregs, .-xlat1_allregs

    
.globl xlat1_constant_simple
         .type   xlat1_constant_simple, @function
xlat1_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0xd7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xlat1_constant_simple, .-xlat1_constant_simple

    
.globl xlat1_constant_complex1
         .type   xlat1_constant_complex1, @function
xlat1_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0xd7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xlat1_constant_complex1, .-xlat1_constant_complex1

    
.globl xlat1_constant_complex2
         .type   xlat1_constant_complex2, @function
xlat1_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0xd7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xlat1_constant_complex2, .-xlat1_constant_complex2

    
.globl xlat2_mv_plain
         .type   xlat2_mv_plain, @function
xlat2_mv_plain:
      .byte 0x67,0xd7
  mov $0x0,%eax

    ret
         .size   xlat2_mv_plain, .-xlat2_mv_plain

    
.globl xlat2_mv_allregs
         .type   xlat2_mv_allregs, @function
xlat2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x67,0xd7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xlat2_mv_allregs, .-xlat2_mv_allregs

    
.globl xlat2_mv_constant_simple
         .type   xlat2_mv_constant_simple, @function
xlat2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x67,0xd7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xlat2_mv_constant_simple, .-xlat2_mv_constant_simple

    
.globl xlat2_mv_constant_complex1
         .type   xlat2_mv_constant_complex1, @function
xlat2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x67,0xd7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xlat2_mv_constant_complex1, .-xlat2_mv_constant_complex1

    
.globl xlat2_mv_constant_complex2
         .type   xlat2_mv_constant_complex2, @function
xlat2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x67,0xd7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xlat2_mv_constant_complex2, .-xlat2_mv_constant_complex2

    
.globl xor1_mv_plain
         .type   xor1_mv_plain, @function
xor1_mv_plain:
      .byte 0x34,0x02
  mov $0x0,%eax

    ret
         .size   xor1_mv_plain, .-xor1_mv_plain

    
.globl xor1_mv_allregs
         .type   xor1_mv_allregs, @function
xor1_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x34,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor1_mv_allregs, .-xor1_mv_allregs

    
.globl xor1_mv_constant_simple
         .type   xor1_mv_constant_simple, @function
xor1_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x34,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor1_mv_constant_simple, .-xor1_mv_constant_simple

    
.globl xor1_mv_constant_complex1
         .type   xor1_mv_constant_complex1, @function
xor1_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x34,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor1_mv_constant_complex1, .-xor1_mv_constant_complex1

    
.globl xor1_mv_constant_complex2
         .type   xor1_mv_constant_complex2, @function
xor1_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x34,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor1_mv_constant_complex2, .-xor1_mv_constant_complex2

    
.globl xor2_mv_plain
         .type   xor2_mv_plain, @function
xor2_mv_plain:
      .byte 0x34,0xfe
  mov $0x0,%eax

    ret
         .size   xor2_mv_plain, .-xor2_mv_plain

    
.globl xor2_mv_allregs
         .type   xor2_mv_allregs, @function
xor2_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x34,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor2_mv_allregs, .-xor2_mv_allregs

    
.globl xor2_mv_constant_simple
         .type   xor2_mv_constant_simple, @function
xor2_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x34,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor2_mv_constant_simple, .-xor2_mv_constant_simple

    
.globl xor2_mv_constant_complex1
         .type   xor2_mv_constant_complex1, @function
xor2_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x34,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor2_mv_constant_complex1, .-xor2_mv_constant_complex1

    
.globl xor2_mv_constant_complex2
         .type   xor2_mv_constant_complex2, @function
xor2_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x34,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor2_mv_constant_complex2, .-xor2_mv_constant_complex2

    
.globl xor3_mv_plain
         .type   xor3_mv_plain, @function
xor3_mv_plain:
      .byte 0x66,0x35,0x02,0x00
  mov $0x0,%eax

    ret
         .size   xor3_mv_plain, .-xor3_mv_plain

    
.globl xor3_mv_allregs
         .type   xor3_mv_allregs, @function
xor3_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x35,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor3_mv_allregs, .-xor3_mv_allregs

    
.globl xor3_mv_constant_simple
         .type   xor3_mv_constant_simple, @function
xor3_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x35,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor3_mv_constant_simple, .-xor3_mv_constant_simple

    
.globl xor3_mv_constant_complex1
         .type   xor3_mv_constant_complex1, @function
xor3_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x35,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor3_mv_constant_complex1, .-xor3_mv_constant_complex1

    
.globl xor3_mv_constant_complex2
         .type   xor3_mv_constant_complex2, @function
xor3_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x35,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor3_mv_constant_complex2, .-xor3_mv_constant_complex2

    
.globl xor4_mv_plain
         .type   xor4_mv_plain, @function
xor4_mv_plain:
      .byte 0x66,0x35,0xfe,0xff
  mov $0x0,%eax

    ret
         .size   xor4_mv_plain, .-xor4_mv_plain

    
.globl xor4_mv_allregs
         .type   xor4_mv_allregs, @function
xor4_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x66,0x35,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor4_mv_allregs, .-xor4_mv_allregs

    
.globl xor4_mv_constant_simple
         .type   xor4_mv_constant_simple, @function
xor4_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x66,0x35,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor4_mv_constant_simple, .-xor4_mv_constant_simple

    
.globl xor4_mv_constant_complex1
         .type   xor4_mv_constant_complex1, @function
xor4_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x66,0x35,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor4_mv_constant_complex1, .-xor4_mv_constant_complex1

    
.globl xor4_mv_constant_complex2
         .type   xor4_mv_constant_complex2, @function
xor4_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x66,0x35,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor4_mv_constant_complex2, .-xor4_mv_constant_complex2

    
.globl xor5_plain
         .type   xor5_plain, @function
xor5_plain:
      .byte 0x35,0x02,0x00,0x00,0x00
  mov $0x0,%eax

    ret
         .size   xor5_plain, .-xor5_plain

    
.globl xor5_allregs
         .type   xor5_allregs, @function
xor5_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x35,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor5_allregs, .-xor5_allregs

    
.globl xor5_constant_simple
         .type   xor5_constant_simple, @function
xor5_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x35,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor5_constant_simple, .-xor5_constant_simple

    
.globl xor5_constant_complex1
         .type   xor5_constant_complex1, @function
xor5_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x35,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor5_constant_complex1, .-xor5_constant_complex1

    
.globl xor5_constant_complex2
         .type   xor5_constant_complex2, @function
xor5_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x35,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor5_constant_complex2, .-xor5_constant_complex2

    
.globl xor6_mv_plain
         .type   xor6_mv_plain, @function
xor6_mv_plain:
      .byte 0x35,0xfe,0xff,0xff,0xff
  mov $0x0,%eax

    ret
         .size   xor6_mv_plain, .-xor6_mv_plain

    
.globl xor6_mv_allregs
         .type   xor6_mv_allregs, @function
xor6_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  .byte 0x35,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor6_mv_allregs, .-xor6_mv_allregs

    
.globl xor6_mv_constant_simple
         .type   xor6_mv_constant_simple, @function
xor6_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  .byte 0x35,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor6_mv_constant_simple, .-xor6_mv_constant_simple

    
.globl xor6_mv_constant_complex1
         .type   xor6_mv_constant_complex1, @function
xor6_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  .byte 0x35,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor6_mv_constant_complex1, .-xor6_mv_constant_complex1

    
.globl xor6_mv_constant_complex2
         .type   xor6_mv_constant_complex2, @function
xor6_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  .byte 0x35,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor6_mv_constant_complex2, .-xor6_mv_constant_complex2

    
.globl xor7_mv_plain
         .type   xor7_mv_plain, @function
xor7_mv_plain:
      xorl 8(%ebp), %eax
  mov $0x0,%eax

    ret
         .size   xor7_mv_plain, .-xor7_mv_plain

    
.globl xor7_mv_allregs
         .type   xor7_mv_allregs, @function
xor7_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  xorl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor7_mv_allregs, .-xor7_mv_allregs

    
.globl xor7_mv_constant_simple
         .type   xor7_mv_constant_simple, @function
xor7_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  xorl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor7_mv_constant_simple, .-xor7_mv_constant_simple

    
.globl xor7_mv_constant_complex1
         .type   xor7_mv_constant_complex1, @function
xor7_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  xorl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor7_mv_constant_complex1, .-xor7_mv_constant_complex1

    
.globl xor7_mv_constant_complex2
         .type   xor7_mv_constant_complex2, @function
xor7_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  xorl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor7_mv_constant_complex2, .-xor7_mv_constant_complex2

    
.globl xor8_mv_plain
         .type   xor8_mv_plain, @function
xor8_mv_plain:
      xorl $0x02,%eax
  mov $0x0,%eax

    ret
         .size   xor8_mv_plain, .-xor8_mv_plain

    
.globl xor8_mv_allregs
         .type   xor8_mv_allregs, @function
xor8_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  xorl $0x02,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor8_mv_allregs, .-xor8_mv_allregs

    
.globl xor8_mv_constant_simple
         .type   xor8_mv_constant_simple, @function
xor8_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  xorl $0x02,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor8_mv_constant_simple, .-xor8_mv_constant_simple

    
.globl xor8_mv_constant_complex1
         .type   xor8_mv_constant_complex1, @function
xor8_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  xorl $0x02,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor8_mv_constant_complex1, .-xor8_mv_constant_complex1

    
.globl xor8_mv_constant_complex2
         .type   xor8_mv_constant_complex2, @function
xor8_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  xorl $0x02,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor8_mv_constant_complex2, .-xor8_mv_constant_complex2

    
.globl xor9_mv_plain
         .type   xor9_mv_plain, @function
xor9_mv_plain:
      xorl $0xf2,%eax
  mov $0x0,%eax

    ret
         .size   xor9_mv_plain, .-xor9_mv_plain

    
.globl xor9_mv_allregs
         .type   xor9_mv_allregs, @function
xor9_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  xorl $0xf2,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor9_mv_allregs, .-xor9_mv_allregs

    
.globl xor9_mv_constant_simple
         .type   xor9_mv_constant_simple, @function
xor9_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  xorl $0xf2,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor9_mv_constant_simple, .-xor9_mv_constant_simple

    
.globl xor9_mv_constant_complex1
         .type   xor9_mv_constant_complex1, @function
xor9_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  xorl $0xf2,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor9_mv_constant_complex1, .-xor9_mv_constant_complex1

    
.globl xor9_mv_constant_complex2
         .type   xor9_mv_constant_complex2, @function
xor9_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  xorl $0xf2,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor9_mv_constant_complex2, .-xor9_mv_constant_complex2

    
.globl xor_locked_mv_plain
         .type   xor_locked_mv_plain, @function
xor_locked_mv_plain:
      lock xorl $0xf2,(%eax)
  mov $0x0,%eax

    ret
         .size   xor_locked_mv_plain, .-xor_locked_mv_plain

    
.globl xor_locked_mv_allregs
         .type   xor_locked_mv_allregs, @function
xor_locked_mv_allregs:
      nop
  mov 4352,%ax
  push %ax
  popfw
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov %esp,8272
  lock xorl $0xf2,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor_locked_mv_allregs, .-xor_locked_mv_allregs

    
.globl xor_locked_mv_constant_simple
         .type   xor_locked_mv_constant_simple, @function
xor_locked_mv_constant_simple:
      nop
  pushw $0
  popfw
  mov $2,%eax
  mov $3,%ebx
  mov $4,%ecx
  mov $5,%edx
  mov $6,%ebp
  mov $7,%esi
  mov $8,%edi
  mov %esp,8272
  lock xorl $0xf2,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor_locked_mv_constant_simple, .-xor_locked_mv_constant_simple

    
.globl xor_locked_mv_constant_complex1
         .type   xor_locked_mv_constant_complex1, @function
xor_locked_mv_constant_complex1:
      nop
  pushw $0
  popfw
  mov $0xa3b17984,%eax
  mov $0x06671ad7,%ebx
  mov $0x46685248,%ecx
  mov $0x392456c4,%edx
  mov $0xbc8960a4,%ebp
  mov $0xad3c2d78,%esi
  mov $0xe465e152,%edi
  mov %esp,8272
  lock xorl $0xf2,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor_locked_mv_constant_complex1, .-xor_locked_mv_constant_complex1

    
.globl xor_locked_mv_constant_complex2
         .type   xor_locked_mv_constant_complex2, @function
xor_locked_mv_constant_complex2:
      nop
  pushw $0xfeff
  popfw
  mov $0x313ec0e8,%eax
  mov $0x496e81c3,%ebx
  mov $0x1e3f6cb2,%ecx
  mov $0x4e6925b3,%edx
  mov $0x4f312610,%ebp
  mov $0x2f37a4a5,%esi
  mov $0x91a917b4,%edi
  mov %esp,8272
  lock xorl $0xf2,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  seto 8704
  setno 8705
  setc 8706
  setnc 8707
  setz 8708
  setnz 8709
  setbe 8710
  seta 8711
  sets 8712
  setns 8713
  setp 8714
  setnp 8715
  setl 8716
  setnl 8717
  setle 8718
  setg 8719
  pushfw
  pop %ax
  mov %ax,8448
  mov 8272,%eax
  sub %esp,%eax
  mov %eax,8224
  mov $0x0,%eax

    ret
         .size   xor_locked_mv_constant_complex2, .-xor_locked_mv_constant_complex2
  .data
.globl l_esp
l_esp: .long 0
.globl barr_abcde
barr_abcde: .byte 0x10,0x12,0x14,0x16,0x18
.globl barr_abcxe
barr_abcxe: .byte 0x10,0x12,0x14,0x36,0x18
.globl barr_abcae
barr_abcae: .byte 0x10,0x12,0x14,0x06,0x18
.globl barr_ghije
barr_ghije: .byte 0x80,0x82,0x84,0x86,0x18
  .text

.globl callAll
         .type   callAll, @function
callAll:
          call aaa_plain
          call aaa_allregs
          call aaa_constant_simple_clear
          call aaa_constant_simple_set
          call aaa_constant_complex1
          call aaa_constant_complex2
          call aad1_plain
          call aad1_allregs
          call aad1_constant_simple
          call aad1_constant_complex1
          call aad1_constant_complex2
          call aad2_plain
          call aad2_allregs
          call aad2_constant_simple
          call aad2_constant_complex1
          call aad2_constant_complex2
          call aam1_plain
          call aam1_allregs
          call aam1_constant_simple
          call aam1_constant_complex1
          call aam1_constant_complex2
          call aam2_plain
          call aam2_allregs
          call aam2_constant_simple
          call aam2_constant_complex1
          call aam2_constant_complex2
          call aas_plain
          call aas_allregs
          call aas_constant_simple_clear
          call aas_constant_simple_set
          call aas_constant_complex1
          call aas_constant_complex2
          call adc1_mv_plain
          call adc1_mv_allregs
          call adc1_mv_constant_simple_clear
          call adc1_mv_constant_simple_set
          call adc1_mv_constant_complex1
          call adc1_mv_constant_complex2
          call adc2_mv_plain
          call adc2_mv_allregs
          call adc2_mv_constant_simple_clear
          call adc2_mv_constant_simple_set
          call adc2_mv_constant_complex1
          call adc2_mv_constant_complex2
          call adc2a_mv_plain
          call adc2a_mv_allregs
          call adc2a_mv_constant_simple_clear
          call adc2a_mv_constant_simple_set
          call adc2a_mv_constant_complex1
          call adc2a_mv_constant_complex2
          call adc3_plain
          call adc3_allregs
          call adc3_constant_simple_clear
          call adc3_constant_simple_set
          call adc3_constant_complex1
          call adc3_constant_complex2
          call adc3a_mv_plain
          call adc3a_mv_allregs
          call adc3a_mv_constant_simple_clear
          call adc3a_mv_constant_simple_set
          call adc3a_mv_constant_complex1
          call adc3a_mv_constant_complex2
          call adc4_mv_plain
          call adc4_mv_allregs
          call adc4_mv_constant_simple_clear
          call adc4_mv_constant_simple_set
          call adc4_mv_constant_complex1
          call adc4_mv_constant_complex2
          call adc_locked_mv_plain
          call adc_locked_mv_allregs
          call adc_locked_mv_constant_simple
          call adc_locked_mv_constant_complex1
          call adc_locked_mv_constant_complex2
          call add1_plain
          call add1_allregs
          call add1_constant_simple
          call add1_constant_complex1
          call add1_constant_complex2
          call add2_mv_plain
          call add2_mv_allregs
          call add2_mv_constant_simple
          call add2_mv_constant_complex1
          call add2_mv_constant_complex2
          call add3_mv_plain
          call add3_mv_allregs
          call add3_mv_constant_simple
          call add3_mv_constant_complex1
          call add3_mv_constant_complex2
          call add4_mv_plain
          call add4_mv_allregs
          call add4_mv_constant_simple
          call add4_mv_constant_complex1
          call add4_mv_constant_complex2
          call add5_plain
          call add5_allregs
          call add5_constant_simple
          call add5_constant_complex1
          call add5_constant_complex2
          call add6_plain
          call add6_allregs
          call add6_constant_simple
          call add6_constant_complex1
          call add6_constant_complex2
          call add7_mv_plain
          call add7_mv_allregs
          call add7_mv_constant_simple
          call add7_mv_constant_complex1
          call add7_mv_constant_complex2
          call add8_mv_plain
          call add8_mv_allregs
          call add8_mv_constant_simple
          call add8_mv_constant_complex1
          call add8_mv_constant_complex2
          call add9_mv_plain
          call add9_mv_allregs
          call add9_mv_constant_simple
          call add9_mv_constant_complex1
          call add9_mv_constant_complex2
          call add10_mv_plain
          call add10_mv_allregs
          call add10_mv_constant_simple
          call add10_mv_constant_complex1
          call add10_mv_constant_complex2
          call add11_mv_plain
          call add11_mv_allregs
          call add11_mv_constant_simple
          call add11_mv_constant_complex1
          call add11_mv_constant_complex2
          call add12_mv_plain
          call add12_mv_allregs
          call add12_mv_constant_simple
          call add12_mv_constant_complex1
          call add12_mv_constant_complex2
          call add_locked_mv_plain
          call add_locked_mv_allregs
          call add_locked_mv_constant_simple
          call add_locked_mv_constant_complex1
          call add_locked_mv_constant_complex2
          call add_ft_0_mv_plain
          call add_ft_0_mv_allregs
          call add_ft_0_mv_constant_simple
          call add_ft_0_mv_constant_complex1
          call add_ft_0_mv_constant_complex2
          call add_ft_1_mv_plain
          call add_ft_1_mv_allregs
          call add_ft_1_mv_constant_simple
          call add_ft_1_mv_constant_complex1
          call add_ft_1_mv_constant_complex2
          call add_ft_2_mv_plain
          call add_ft_2_mv_allregs
          call add_ft_2_mv_constant_simple
          call add_ft_2_mv_constant_complex1
          call add_ft_2_mv_constant_complex2
          call add_ft_3_mv_plain
          call add_ft_3_mv_allregs
          call add_ft_3_mv_constant_simple
          call add_ft_3_mv_constant_complex1
          call add_ft_3_mv_constant_complex2
          call add_ft_4_mv_plain
          call add_ft_4_mv_allregs
          call add_ft_4_mv_constant_simple
          call add_ft_4_mv_constant_complex1
          call add_ft_4_mv_constant_complex2
          call add_ft_5_mv_plain
          call add_ft_5_mv_allregs
          call add_ft_5_mv_constant_simple
          call add_ft_5_mv_constant_complex1
          call add_ft_5_mv_constant_complex2
          call add_ft_6_mv_plain
          call add_ft_6_mv_allregs
          call add_ft_6_mv_constant_simple
          call add_ft_6_mv_constant_complex1
          call add_ft_6_mv_constant_complex2
          call add_ft_7_mv_plain
          call add_ft_7_mv_allregs
          call add_ft_7_mv_constant_simple
          call add_ft_7_mv_constant_complex1
          call add_ft_7_mv_constant_complex2
          call and1_plain
          call and1_allregs
          call and1_constant_simple
          call and1_constant_complex1
          call and1_constant_complex2
          call and2_mv_plain
          call and2_mv_allregs
          call and2_mv_constant_simple
          call and2_mv_constant_complex1
          call and2_mv_constant_complex2
          call and3_mv_plain
          call and3_mv_allregs
          call and3_mv_constant_simple
          call and3_mv_constant_complex1
          call and3_mv_constant_complex2
          call and4_mv_plain
          call and4_mv_allregs
          call and4_mv_constant_simple
          call and4_mv_constant_complex1
          call and4_mv_constant_complex2
          call and5_plain
          call and5_allregs
          call and5_constant_simple
          call and5_constant_complex1
          call and5_constant_complex2
          call and6_mv_plain
          call and6_mv_allregs
          call and6_mv_constant_simple
          call and6_mv_constant_complex1
          call and6_mv_constant_complex2
          call and7_mv_plain
          call and7_mv_allregs
          call and7_mv_constant_simple
          call and7_mv_constant_complex1
          call and7_mv_constant_complex2
          call and_locked_mv_plain
          call and_locked_mv_allregs
          call and_locked_mv_constant_simple
          call and_locked_mv_constant_complex1
          call and_locked_mv_constant_complex2
          call arpl_plain
          call arpl_allregs
          call arpl_constant_simple
          call arpl_constant_complex1
          call arpl_constant_complex2
          call bound1_mv_plain
          call bound1_mv_allregs
          call bound1_mv_constant_simple
          call bound1_mv_constant_complex1
          call bound1_mv_constant_complex2
          call bound2_plain
          call bound2_allregs
          call bound2_constant_simple
          call bound2_constant_complex1
          call bound2_constant_complex2
          call bsf1_mv_plain
          call bsf1_mv_allregs
          call bsf1_mv_constant_simple
          call bsf1_mv_constant_complex1
          call bsf1_mv_constant_complex2
          call bsf2_plain
          call bsf2_allregs
          call bsf2_constant_simple
          call bsf2_constant_complex1
          call bsf2_constant_complex2
          call bsf3_mv_plain
          call bsf3_mv_allregs
          call bsf3_mv_constant_simple
          call bsf3_mv_constant_complex1
          call bsf3_mv_constant_complex2
          call bsf4_mv_plain
          call bsf4_mv_allregs
          call bsf4_mv_constant_simple
          call bsf4_mv_constant_complex1
          call bsf4_mv_constant_complex2
          call bsf5_mv_plain
          call bsf5_mv_allregs
          call bsf5_mv_constant_simple
          call bsf5_mv_constant_complex1
          call bsf5_mv_constant_complex2
          call bsf6_mv_plain
          call bsf6_mv_allregs
          call bsf6_mv_constant_simple
          call bsf6_mv_constant_complex1
          call bsf6_mv_constant_complex2
          call bsf7_mv_plain
          call bsf7_mv_allregs
          call bsf7_mv_constant_simple
          call bsf7_mv_constant_complex1
          call bsf7_mv_constant_complex2
          call bsf8_mv_plain
          call bsf8_mv_allregs
          call bsf8_mv_constant_simple
          call bsf8_mv_constant_complex1
          call bsf8_mv_constant_complex2
          call bsr1_mv_plain
          call bsr1_mv_allregs
          call bsr1_mv_constant_simple
          call bsr1_mv_constant_complex1
          call bsr1_mv_constant_complex2
          call bsr2_plain
          call bsr2_allregs
          call bsr2_constant_simple
          call bsr2_constant_complex1
          call bsr2_constant_complex2
          call bsr3_mv_plain
          call bsr3_mv_allregs
          call bsr3_mv_constant_simple
          call bsr3_mv_constant_complex1
          call bsr3_mv_constant_complex2
          call bsr4_mv_plain
          call bsr4_mv_allregs
          call bsr4_mv_constant_simple
          call bsr4_mv_constant_complex1
          call bsr4_mv_constant_complex2
          call bsr5_mv_plain
          call bsr5_mv_allregs
          call bsr5_mv_constant_simple
          call bsr5_mv_constant_complex1
          call bsr5_mv_constant_complex2
          call bsr6_mv_plain
          call bsr6_mv_allregs
          call bsr6_mv_constant_simple
          call bsr6_mv_constant_complex1
          call bsr6_mv_constant_complex2
          call bsr7_mv_plain
          call bsr7_mv_allregs
          call bsr7_mv_constant_simple
          call bsr7_mv_constant_complex1
          call bsr7_mv_constant_complex2
          call bsr8_mv_plain
          call bsr8_mv_allregs
          call bsr8_mv_constant_simple
          call bsr8_mv_constant_complex1
          call bsr8_mv_constant_complex2
          call bt1_mv_plain
          call bt1_mv_allregs
          call bt1_mv_constant_simple
          call bt1_mv_constant_complex1
          call bt1_mv_constant_complex2
          call bt2_mv_plain
          call bt2_mv_allregs
          call bt2_mv_constant_simple
          call bt2_mv_constant_complex1
          call bt2_mv_constant_complex2
          call bt3_plain
          call bt3_allregs
          call bt3_constant_simple
          call bt3_constant_complex1
          call bt3_constant_complex2
          call bt4_mv_plain
          call bt4_mv_allregs
          call bt4_mv_constant_simple
          call bt4_mv_constant_complex1
          call bt4_mv_constant_complex2
          call bt5_mv_plain
          call bt5_mv_allregs
          call bt5_mv_constant_simple
          call bt5_mv_constant_complex1
          call bt5_mv_constant_complex2
          call btc1_mv_plain
          call btc1_mv_allregs
          call btc1_mv_constant_simple
          call btc1_mv_constant_complex1
          call btc1_mv_constant_complex2
          call btc2_mv_plain
          call btc2_mv_allregs
          call btc2_mv_constant_simple
          call btc2_mv_constant_complex1
          call btc2_mv_constant_complex2
          call btc3_plain
          call btc3_allregs
          call btc3_constant_simple
          call btc3_constant_complex1
          call btc3_constant_complex2
          call btc4_mv_plain
          call btc4_mv_allregs
          call btc4_mv_constant_simple
          call btc4_mv_constant_complex1
          call btc4_mv_constant_complex2
          call btc5_mv_plain
          call btc5_mv_allregs
          call btc5_mv_constant_simple
          call btc5_mv_constant_complex1
          call btc5_mv_constant_complex2
          call btc_locked_mv_plain
          call btc_locked_mv_allregs
          call btc_locked_mv_constant_simple
          call btc_locked_mv_constant_complex1
          call btc_locked_mv_constant_complex2
          call btr1_mv_plain
          call btr1_mv_allregs
          call btr1_mv_constant_simple
          call btr1_mv_constant_complex1
          call btr1_mv_constant_complex2
          call btr2_mv_plain
          call btr2_mv_allregs
          call btr2_mv_constant_simple
          call btr2_mv_constant_complex1
          call btr2_mv_constant_complex2
          call btr3_plain
          call btr3_allregs
          call btr3_constant_simple
          call btr3_constant_complex1
          call btr3_constant_complex2
          call btr4_mv_plain
          call btr4_mv_allregs
          call btr4_mv_constant_simple
          call btr4_mv_constant_complex1
          call btr4_mv_constant_complex2
          call btr5_mv_plain
          call btr5_mv_allregs
          call btr5_mv_constant_simple
          call btr5_mv_constant_complex1
          call btr5_mv_constant_complex2
          call btr_locked_mv_plain
          call btr_locked_mv_allregs
          call btr_locked_mv_constant_simple
          call btr_locked_mv_constant_complex1
          call btr_locked_mv_constant_complex2
          call bts1_mv_plain
          call bts1_mv_allregs
          call bts1_mv_constant_simple
          call bts1_mv_constant_complex1
          call bts1_mv_constant_complex2
          call bts2_mv_plain
          call bts2_mv_allregs
          call bts2_mv_constant_simple
          call bts2_mv_constant_complex1
          call bts2_mv_constant_complex2
          call bts3_plain
          call bts3_allregs
          call bts3_constant_simple
          call bts3_constant_complex1
          call bts3_constant_complex2
          call bts4_mv_plain
          call bts4_mv_allregs
          call bts4_mv_constant_simple
          call bts4_mv_constant_complex1
          call bts4_mv_constant_complex2
          call bts5_mv_plain
          call bts5_mv_allregs
          call bts5_mv_constant_simple
          call bts5_mv_constant_complex1
          call bts5_mv_constant_complex2
          call bts_locked_mv_plain
          call bts_locked_mv_allregs
          call bts_locked_mv_constant_simple
          call bts_locked_mv_constant_complex1
          call bts_locked_mv_constant_complex2
          call call1_mv_plain
          call call1_mv_allregs
          call call1_mv_constant_simple
          call call1_mv_constant_complex1
          call call1_mv_constant_complex2
          call call2_plain
          call call2_allregs
          call call2_constant_simple
          call call2_constant_complex1
          call call2_constant_complex2
          call call3_mv_plain
          call call3_mv_allregs
          call call3_mv_constant_simple
          call call3_mv_constant_complex1
          call call3_mv_constant_complex2
          call call5_mv_plain
          call call5_mv_allregs
          call call5_mv_constant_simple
          call call5_mv_constant_complex1
          call call5_mv_constant_complex2
          call call6_mv_plain
          call call6_mv_allregs
          call call6_mv_constant_simple
          call call6_mv_constant_complex1
          call call6_mv_constant_complex2
          call cbw1_plain
          call cbw1_allregs
          call cbw1_constant_simple
          call cbw1_constant_complex1
          call cbw1_constant_complex2
          call cbw2_plain
          call cbw2_allregs
          call cbw2_constant_simple
          call cbw2_constant_complex1
          call cbw2_constant_complex2
          call clc_plain
          call clc_allregs
          call clc_constant_simple_clear
          call clc_constant_simple_set
          call clc_constant_complex1
          call clc_constant_complex2
          call cld_plain
          call cld_allregs
          call cld_constant_simple
          call cld_constant_complex1
          call cld_constant_complex2
          call cli_plain
          call cli_allregs
          call cli_constant_simple
          call cli_constant_complex1
          call cli_constant_complex2
          call clts_plain
          call clts_allregs
          call clts_constant_simple
          call clts_constant_complex1
          call clts_constant_complex2
          call cmc_plain
          call cmc_allregs
          call cmc_constant_simple_clear
          call cmc_constant_simple_set
          call cmc_constant_complex1
          call cmc_constant_complex2
          call cmp1_mv_plain
          call cmp1_mv_allregs
          call cmp1_mv_constant_simple
          call cmp1_mv_constant_complex1
          call cmp1_mv_constant_complex2
          call cmp2_mv_plain
          call cmp2_mv_allregs
          call cmp2_mv_constant_simple
          call cmp2_mv_constant_complex1
          call cmp2_mv_constant_complex2
          call cmp3_mv_plain
          call cmp3_mv_allregs
          call cmp3_mv_constant_simple
          call cmp3_mv_constant_complex1
          call cmp3_mv_constant_complex2
          call cmp4_mv_plain
          call cmp4_mv_allregs
          call cmp4_mv_constant_simple
          call cmp4_mv_constant_complex1
          call cmp4_mv_constant_complex2
          call cmp5_plain
          call cmp5_allregs
          call cmp5_constant_simple
          call cmp5_constant_complex1
          call cmp5_constant_complex2
          call cmp6_mv_plain
          call cmp6_mv_allregs
          call cmp6_mv_constant_simple
          call cmp6_mv_constant_complex1
          call cmp6_mv_constant_complex2
          call cmp7_mv_plain
          call cmp7_mv_allregs
          call cmp7_mv_constant_simple
          call cmp7_mv_constant_complex1
          call cmp7_mv_constant_complex2
          call cmp8_mv_plain
          call cmp8_mv_allregs
          call cmp8_mv_constant_simple
          call cmp8_mv_constant_complex1
          call cmp8_mv_constant_complex2
          call cmps1_plain
          call cmps1_allregs
          call cmps1_constant_simple
          call cmps1_constant_complex1
          call cmps1_constant_complex2
          call cmps2_mv_plain
          call cmps2_mv_allregs
          call cmps2_mv_constant_simple
          call cmps2_mv_constant_complex1
          call cmps2_mv_constant_complex2
          call cmps3_plain
          call cmps3_allregs
          call cmps3_constant_simple
          call cmps3_constant_complex1
          call cmps3_constant_complex2
          call cmps4_mv_plain
          call cmps4_mv_allregs
          call cmps4_mv_constant_simple
          call cmps4_mv_constant_complex1
          call cmps4_mv_constant_complex2
          call cmps5_mv_plain
          call cmps5_mv_allregs
          call cmps5_mv_constant_simple
          call cmps5_mv_constant_complex1
          call cmps5_mv_constant_complex2
          call cmps6_mv_plain
          call cmps6_mv_allregs
          call cmps6_mv_constant_simple
          call cmps6_mv_constant_complex1
          call cmps6_mv_constant_complex2
          call cmps_seg_mv_plain
          call cmps_seg_mv_allregs
          call cmps_seg_mv_constant_simple
          call cmps_seg_mv_constant_complex1
          call cmps_seg_mv_constant_complex2
          call cwd1_plain
          call cwd1_allregs
          call cwd1_constant_simple
          call cwd1_constant_complex1
          call cwd1_constant_complex2
          call cwd2_plain
          call cwd2_allregs
          call cwd2_constant_simple
          call cwd2_constant_complex1
          call cwd2_constant_complex2
          call daa_plain
          call daa_allregs
          call daa_constant_simple_clear
          call daa_constant_simple_set
          call daa_constant_complex1
          call daa_constant_complex2
          call das_plain
          call das_allregs
          call das_constant_simple_clear
          call das_constant_simple_set
          call das_constant_complex1
          call das_constant_complex2
          call dec1_mv_plain
          call dec1_mv_allregs
          call dec1_mv_constant_simple
          call dec1_mv_constant_complex1
          call dec1_mv_constant_complex2
          call dec2_mv_plain
          call dec2_mv_allregs
          call dec2_mv_constant_simple
          call dec2_mv_constant_complex1
          call dec2_mv_constant_complex2
          call dec3_mv_plain
          call dec3_mv_allregs
          call dec3_mv_constant_simple
          call dec3_mv_constant_complex1
          call dec3_mv_constant_complex2
          call dec4_plain
          call dec4_allregs
          call dec4_constant_simple
          call dec4_constant_complex1
          call dec4_constant_complex2
          call dec5b_mv_plain
          call dec5b_mv_allregs
          call dec5b_mv_constant_simple
          call dec5b_mv_constant_complex1
          call dec5b_mv_constant_complex2
          call dec5w_mv_plain
          call dec5w_mv_allregs
          call dec5w_mv_constant_simple
          call dec5w_mv_constant_complex1
          call dec5w_mv_constant_complex2
          call dec5l_mv_plain
          call dec5l_mv_allregs
          call dec5l_mv_constant_simple
          call dec5l_mv_constant_complex1
          call dec5l_mv_constant_complex2
          call dec_locked_mv_plain
          call dec_locked_mv_allregs
          call dec_locked_mv_constant_simple
          call dec_locked_mv_constant_complex1
          call dec_locked_mv_constant_complex2
          call div1_plain
          call div1_allregs
          call div1_constant_simple
          call div1_constant_complex1
          call div1_constant_complex2
          call div2_plain
          call div2_allregs
          call div2_constant_simple
          call div2_constant_complex1
          call div2_constant_complex2
          call div3_plain
          call div3_allregs
          call div3_constant_simple
          call div3_constant_complex1
          call div3_constant_complex2
          call div4_mv_plain
          call div4_mv_allregs
          call div4_mv_constant_simple
          call div4_mv_constant_complex1
          call div4_mv_constant_complex2
          call enter1_plain
          call enter1_allregs
          call enter1_constant_simple
          call enter1_constant_complex1
          call enter1_constant_complex2
          call enter2_mv_plain
          call enter2_mv_allregs
          call enter2_mv_constant_simple
          call enter2_mv_constant_complex1
          call enter2_mv_constant_complex2
          call enter3_mv_plain
          call enter3_mv_allregs
          call enter3_mv_constant_simple
          call enter3_mv_constant_complex1
          call enter3_mv_constant_complex2
          call hlt_plain
          call hlt_allregs
          call hlt_constant_simple
          call hlt_constant_complex1
          call hlt_constant_complex2
          call idiv1_plain
          call idiv1_allregs
          call idiv1_constant_simple
          call idiv1_constant_complex1
          call idiv1_constant_complex2
          call idiv2_plain
          call idiv2_allregs
          call idiv2_constant_simple
          call idiv2_constant_complex1
          call idiv2_constant_complex2
          call idiv3_plain
          call idiv3_allregs
          call idiv3_constant_simple
          call idiv3_constant_complex1
          call idiv3_constant_complex2
          call imul_one_op1_plain
          call imul_one_op1_allregs
          call imul_one_op1_constant_simple
          call imul_one_op1_constant_complex1
          call imul_one_op1_constant_complex2
          call imul_one_op2_plain
          call imul_one_op2_allregs
          call imul_one_op2_constant_simple
          call imul_one_op2_constant_complex1
          call imul_one_op2_constant_complex2
          call imul_one_op3_plain
          call imul_one_op3_allregs
          call imul_one_op3_constant_simple
          call imul_one_op3_constant_complex1
          call imul_one_op3_constant_complex2
          call imul_one_op4_mv_plain
          call imul_one_op4_mv_allregs
          call imul_one_op4_mv_constant_simple
          call imul_one_op4_mv_constant_complex1
          call imul_one_op4_mv_constant_complex2
          call imul_two_op1_plain
          call imul_two_op1_allregs
          call imul_two_op1_constant_simple
          call imul_two_op1_constant_complex1
          call imul_two_op1_constant_complex2
          call imul_two_op2_plain
          call imul_two_op2_allregs
          call imul_two_op2_constant_simple
          call imul_two_op2_constant_complex1
          call imul_two_op2_constant_complex2
          call imul_two_op3_mv_plain
          call imul_two_op3_mv_allregs
          call imul_two_op3_mv_constant_simple
          call imul_two_op3_mv_constant_complex1
          call imul_two_op3_mv_constant_complex2
          call imul_three_op1_plain
          call imul_three_op1_allregs
          call imul_three_op1_constant_simple
          call imul_three_op1_constant_complex1
          call imul_three_op1_constant_complex2
          call imul_three_op2_plain
          call imul_three_op2_allregs
          call imul_three_op2_constant_simple
          call imul_three_op2_constant_complex1
          call imul_three_op2_constant_complex2
          call imul_three_op3_mv_plain
          call imul_three_op3_mv_allregs
          call imul_three_op3_mv_constant_simple
          call imul_three_op3_mv_constant_complex1
          call imul_three_op3_mv_constant_complex2
          call in1_plain
          call in1_allregs
          call in1_constant_simple
          call in1_constant_complex1
          call in1_constant_complex2
          call in2_mv_plain
          call in2_mv_allregs
          call in2_mv_constant_simple
          call in2_mv_constant_complex1
          call in2_mv_constant_complex2
          call in3_plain
          call in3_allregs
          call in3_constant_simple
          call in3_constant_complex1
          call in3_constant_complex2
          call in4_plain
          call in4_allregs
          call in4_constant_simple
          call in4_constant_complex1
          call in4_constant_complex2
          call in5_mv_plain
          call in5_mv_allregs
          call in5_mv_constant_simple
          call in5_mv_constant_complex1
          call in5_mv_constant_complex2
          call in6_mv_plain
          call in6_mv_allregs
          call in6_mv_constant_simple
          call in6_mv_constant_complex1
          call in6_mv_constant_complex2
          call inc1_mv_plain
          call inc1_mv_allregs
          call inc1_mv_constant_simple
          call inc1_mv_constant_complex1
          call inc1_mv_constant_complex2
          call inc2_mv_plain
          call inc2_mv_allregs
          call inc2_mv_constant_simple
          call inc2_mv_constant_complex1
          call inc2_mv_constant_complex2
          call inc3_mv_plain
          call inc3_mv_allregs
          call inc3_mv_constant_simple
          call inc3_mv_constant_complex1
          call inc3_mv_constant_complex2
          call inc4_plain
          call inc4_allregs
          call inc4_constant_simple
          call inc4_constant_complex1
          call inc4_constant_complex2
          call inc5b_mv_plain
          call inc5b_mv_allregs
          call inc5b_mv_constant_simple
          call inc5b_mv_constant_complex1
          call inc5b_mv_constant_complex2
          call inc5w_mv_plain
          call inc5w_mv_allregs
          call inc5w_mv_constant_simple
          call inc5w_mv_constant_complex1
          call inc5w_mv_constant_complex2
          call inc5l_mv_plain
          call inc5l_mv_allregs
          call inc5l_mv_constant_simple
          call inc5l_mv_constant_complex1
          call inc5l_mv_constant_complex2
          call inc_locked_mv_plain
          call inc_locked_mv_allregs
          call inc_locked_mv_constant_simple
          call inc_locked_mv_constant_complex1
          call inc_locked_mv_constant_complex2
          call ins1_plain
          call ins1_allregs
          call ins1_constant_simple
          call ins1_constant_complex1
          call ins1_constant_complex2
          call ins2_mv_plain
          call ins2_mv_allregs
          call ins2_mv_constant_simple
          call ins2_mv_constant_complex1
          call ins2_mv_constant_complex2
          call ins3_plain
          call ins3_allregs
          call ins3_constant_simple
          call ins3_constant_complex1
          call ins3_constant_complex2
          call int1_mv_plain
          call int1_mv_allregs
          call int1_mv_constant_simple
          call int1_mv_constant_complex1
          call int1_mv_constant_complex2
          call int2_mv_plain
          call int2_mv_allregs
          call int2_mv_constant_simple
          call int2_mv_constant_complex1
          call int2_mv_constant_complex2
          call int3_mv_plain
          call int3_mv_allregs
          call int3_mv_constant_simple
          call int3_mv_constant_complex1
          call int3_mv_constant_complex2
          call iret1_plain
          call iret1_allregs
          call iret1_constant_simple
          call iret1_constant_complex1
          call iret1_constant_complex2
          call iret2_mv_plain
          call iret2_mv_allregs
          call iret2_mv_constant_simple
          call iret2_mv_constant_complex1
          call iret2_mv_constant_complex2
          call jcc_short_with_code_0_plain
          call jcc_short_with_code_0_allregs
          call jcc_short_with_code_0_constant_simple_clear
          call jcc_short_with_code_0_constant_simple_set
          call jcc_short_with_code_0_constant_complex1
          call jcc_short_with_code_0_constant_complex2
          call jcc_short_with_code_1_mv_plain
          call jcc_short_with_code_1_mv_allregs
          call jcc_short_with_code_1_mv_constant_simple_clear
          call jcc_short_with_code_1_mv_constant_simple_set
          call jcc_short_with_code_1_mv_constant_complex1
          call jcc_short_with_code_1_mv_constant_complex2
          call jcc_short_with_code_2_mv_plain
          call jcc_short_with_code_2_mv_allregs
          call jcc_short_with_code_2_mv_constant_simple_clear
          call jcc_short_with_code_2_mv_constant_simple_set
          call jcc_short_with_code_2_mv_constant_complex1
          call jcc_short_with_code_2_mv_constant_complex2
          call jcc_short_with_code_3_mv_plain
          call jcc_short_with_code_3_mv_allregs
          call jcc_short_with_code_3_mv_constant_simple_clear
          call jcc_short_with_code_3_mv_constant_simple_set
          call jcc_short_with_code_3_mv_constant_complex1
          call jcc_short_with_code_3_mv_constant_complex2
          call jcc_short_with_code_4_mv_plain
          call jcc_short_with_code_4_mv_allregs
          call jcc_short_with_code_4_mv_constant_simple_clear
          call jcc_short_with_code_4_mv_constant_simple_set
          call jcc_short_with_code_4_mv_constant_complex1
          call jcc_short_with_code_4_mv_constant_complex2
          call jcc_short_with_code_5_mv_plain
          call jcc_short_with_code_5_mv_allregs
          call jcc_short_with_code_5_mv_constant_simple_clear
          call jcc_short_with_code_5_mv_constant_simple_set
          call jcc_short_with_code_5_mv_constant_complex1
          call jcc_short_with_code_5_mv_constant_complex2
          call jcc_short_with_code_6_mv_plain
          call jcc_short_with_code_6_mv_allregs
          call jcc_short_with_code_6_mv_constant_simple_clear
          call jcc_short_with_code_6_mv_constant_simple_set
          call jcc_short_with_code_6_mv_constant_complex1
          call jcc_short_with_code_6_mv_constant_complex2
          call jcc_short_with_code_7_mv_plain
          call jcc_short_with_code_7_mv_allregs
          call jcc_short_with_code_7_mv_constant_simple_clear
          call jcc_short_with_code_7_mv_constant_simple_set
          call jcc_short_with_code_7_mv_constant_complex1
          call jcc_short_with_code_7_mv_constant_complex2
          call jcc_short_with_code_8_mv_plain
          call jcc_short_with_code_8_mv_allregs
          call jcc_short_with_code_8_mv_constant_simple_clear
          call jcc_short_with_code_8_mv_constant_simple_set
          call jcc_short_with_code_8_mv_constant_complex1
          call jcc_short_with_code_8_mv_constant_complex2
          call jcc_short_with_code_9_mv_plain
          call jcc_short_with_code_9_mv_allregs
          call jcc_short_with_code_9_mv_constant_simple_clear
          call jcc_short_with_code_9_mv_constant_simple_set
          call jcc_short_with_code_9_mv_constant_complex1
          call jcc_short_with_code_9_mv_constant_complex2
          call jcc_short_with_code_a_mv_plain
          call jcc_short_with_code_a_mv_allregs
          call jcc_short_with_code_a_mv_constant_simple_clear
          call jcc_short_with_code_a_mv_constant_simple_set
          call jcc_short_with_code_a_mv_constant_complex1
          call jcc_short_with_code_a_mv_constant_complex2
          call jcc_short_with_code_b_mv_plain
          call jcc_short_with_code_b_mv_allregs
          call jcc_short_with_code_b_mv_constant_simple_clear
          call jcc_short_with_code_b_mv_constant_simple_set
          call jcc_short_with_code_b_mv_constant_complex1
          call jcc_short_with_code_b_mv_constant_complex2
          call jcc_short_with_code_c_mv_plain
          call jcc_short_with_code_c_mv_allregs
          call jcc_short_with_code_c_mv_constant_simple_clear
          call jcc_short_with_code_c_mv_constant_simple_set
          call jcc_short_with_code_c_mv_constant_complex1
          call jcc_short_with_code_c_mv_constant_complex2
          call jcc_short_with_code_d_mv_plain
          call jcc_short_with_code_d_mv_allregs
          call jcc_short_with_code_d_mv_constant_simple_clear
          call jcc_short_with_code_d_mv_constant_simple_set
          call jcc_short_with_code_d_mv_constant_complex1
          call jcc_short_with_code_d_mv_constant_complex2
          call jcc_short_with_code_e_mv_plain
          call jcc_short_with_code_e_mv_allregs
          call jcc_short_with_code_e_mv_constant_simple_clear
          call jcc_short_with_code_e_mv_constant_simple_set
          call jcc_short_with_code_e_mv_constant_complex1
          call jcc_short_with_code_e_mv_constant_complex2
          call jcc_short_with_code_f_mv_plain
          call jcc_short_with_code_f_mv_allregs
          call jcc_short_with_code_f_mv_constant_simple_clear
          call jcc_short_with_code_f_mv_constant_simple_set
          call jcc_short_with_code_f_mv_constant_complex1
          call jcc_short_with_code_f_mv_constant_complex2
          call jcc_long_with_code_0_plain
          call jcc_long_with_code_0_allregs
          call jcc_long_with_code_0_constant_simple_clear
          call jcc_long_with_code_0_constant_simple_set
          call jcc_long_with_code_0_constant_complex1
          call jcc_long_with_code_0_constant_complex2
          call jcc_long_with_code_1_mv_plain
          call jcc_long_with_code_1_mv_allregs
          call jcc_long_with_code_1_mv_constant_simple_clear
          call jcc_long_with_code_1_mv_constant_simple_set
          call jcc_long_with_code_1_mv_constant_complex1
          call jcc_long_with_code_1_mv_constant_complex2
          call jcc_long_with_code_2_mv_plain
          call jcc_long_with_code_2_mv_allregs
          call jcc_long_with_code_2_mv_constant_simple_clear
          call jcc_long_with_code_2_mv_constant_simple_set
          call jcc_long_with_code_2_mv_constant_complex1
          call jcc_long_with_code_2_mv_constant_complex2
          call jcc_long_with_code_3_mv_plain
          call jcc_long_with_code_3_mv_allregs
          call jcc_long_with_code_3_mv_constant_simple_clear
          call jcc_long_with_code_3_mv_constant_simple_set
          call jcc_long_with_code_3_mv_constant_complex1
          call jcc_long_with_code_3_mv_constant_complex2
          call jcc_long_with_code_4_mv_plain
          call jcc_long_with_code_4_mv_allregs
          call jcc_long_with_code_4_mv_constant_simple_clear
          call jcc_long_with_code_4_mv_constant_simple_set
          call jcc_long_with_code_4_mv_constant_complex1
          call jcc_long_with_code_4_mv_constant_complex2
          call jcc_long_with_code_5_mv_plain
          call jcc_long_with_code_5_mv_allregs
          call jcc_long_with_code_5_mv_constant_simple_clear
          call jcc_long_with_code_5_mv_constant_simple_set
          call jcc_long_with_code_5_mv_constant_complex1
          call jcc_long_with_code_5_mv_constant_complex2
          call jcc_long_with_code_6_mv_plain
          call jcc_long_with_code_6_mv_allregs
          call jcc_long_with_code_6_mv_constant_simple_clear
          call jcc_long_with_code_6_mv_constant_simple_set
          call jcc_long_with_code_6_mv_constant_complex1
          call jcc_long_with_code_6_mv_constant_complex2
          call jcc_long_with_code_7_mv_plain
          call jcc_long_with_code_7_mv_allregs
          call jcc_long_with_code_7_mv_constant_simple_clear
          call jcc_long_with_code_7_mv_constant_simple_set
          call jcc_long_with_code_7_mv_constant_complex1
          call jcc_long_with_code_7_mv_constant_complex2
          call jcc_long_with_code_8_mv_plain
          call jcc_long_with_code_8_mv_allregs
          call jcc_long_with_code_8_mv_constant_simple_clear
          call jcc_long_with_code_8_mv_constant_simple_set
          call jcc_long_with_code_8_mv_constant_complex1
          call jcc_long_with_code_8_mv_constant_complex2
          call jcc_long_with_code_9_mv_plain
          call jcc_long_with_code_9_mv_allregs
          call jcc_long_with_code_9_mv_constant_simple_clear
          call jcc_long_with_code_9_mv_constant_simple_set
          call jcc_long_with_code_9_mv_constant_complex1
          call jcc_long_with_code_9_mv_constant_complex2
          call jcc_long_with_code_a_mv_plain
          call jcc_long_with_code_a_mv_allregs
          call jcc_long_with_code_a_mv_constant_simple_clear
          call jcc_long_with_code_a_mv_constant_simple_set
          call jcc_long_with_code_a_mv_constant_complex1
          call jcc_long_with_code_a_mv_constant_complex2
          call jcc_long_with_code_b_mv_plain
          call jcc_long_with_code_b_mv_allregs
          call jcc_long_with_code_b_mv_constant_simple_clear
          call jcc_long_with_code_b_mv_constant_simple_set
          call jcc_long_with_code_b_mv_constant_complex1
          call jcc_long_with_code_b_mv_constant_complex2
          call jcc_long_with_code_c_mv_plain
          call jcc_long_with_code_c_mv_allregs
          call jcc_long_with_code_c_mv_constant_simple_clear
          call jcc_long_with_code_c_mv_constant_simple_set
          call jcc_long_with_code_c_mv_constant_complex1
          call jcc_long_with_code_c_mv_constant_complex2
          call jcc_long_with_code_d_mv_plain
          call jcc_long_with_code_d_mv_allregs
          call jcc_long_with_code_d_mv_constant_simple_clear
          call jcc_long_with_code_d_mv_constant_simple_set
          call jcc_long_with_code_d_mv_constant_complex1
          call jcc_long_with_code_d_mv_constant_complex2
          call jcc_long_with_code_e_mv_plain
          call jcc_long_with_code_e_mv_allregs
          call jcc_long_with_code_e_mv_constant_simple_clear
          call jcc_long_with_code_e_mv_constant_simple_set
          call jcc_long_with_code_e_mv_constant_complex1
          call jcc_long_with_code_e_mv_constant_complex2
          call jcc_long_with_code_f_mv_plain
          call jcc_long_with_code_f_mv_allregs
          call jcc_long_with_code_f_mv_constant_simple_clear
          call jcc_long_with_code_f_mv_constant_simple_set
          call jcc_long_with_code_f_mv_constant_complex1
          call jcc_long_with_code_f_mv_constant_complex2
          call jcxz_plain
          call jcxz_allregs
          call jcxz_constant_simple
          call jcxz_constant_complex1
          call jcxz_constant_complex2
          call jecxz_plain
          call jecxz_allregs
          call jecxz_constant_simple
          call jecxz_constant_complex1
          call jecxz_constant_complex2
          call jecxz_test_none_mv_plain
          call jecxz_test_none_mv_allregs
          call jecxz_test_none_mv_constant_simple
          call jecxz_test_none_mv_constant_complex1
          call jecxz_test_none_mv_constant_complex2
          call jecxz_test_66_mv_plain
          call jecxz_test_66_mv_allregs
          call jecxz_test_66_mv_constant_simple
          call jecxz_test_66_mv_constant_complex1
          call jecxz_test_66_mv_constant_complex2
          call jecxz_test_67_mv_plain
          call jecxz_test_67_mv_allregs
          call jecxz_test_67_mv_constant_simple
          call jecxz_test_67_mv_constant_complex1
          call jecxz_test_67_mv_constant_complex2
          call jmp1_plain
          call jmp1_allregs
          call jmp1_constant_simple
          call jmp1_constant_complex1
          call jmp1_constant_complex2
          call jmp2_mv_plain
          call jmp2_mv_allregs
          call jmp2_mv_constant_simple
          call jmp2_mv_constant_complex1
          call jmp2_mv_constant_complex2
          call jmp3_mv_plain
          call jmp3_mv_allregs
          call jmp3_mv_constant_simple
          call jmp3_mv_constant_complex1
          call jmp3_mv_constant_complex2
          call lahf_plain
          call lahf_allregs
          call lahf_constant_simple_clear
          call lahf_constant_simple_set
          call lahf_constant_complex1
          call lahf_constant_complex2
          call lar_plain
          call lar_allregs
          call lar_constant_simple
          call lar_constant_complex1
          call lar_constant_complex2
          call lea1_plain
          call lea1_allregs
          call lea1_constant_simple
          call lea1_constant_complex1
          call lea1_constant_complex2
          call lea2_mv_plain
          call lea2_mv_allregs
          call lea2_mv_constant_simple
          call lea2_mv_constant_complex1
          call lea2_mv_constant_complex2
          call leave1_plain
          call leave1_allregs
          call leave1_constant_simple
          call leave1_constant_complex1
          call leave1_constant_complex2
          call leave2_mv_plain
          call leave2_mv_allregs
          call leave2_mv_constant_simple
          call leave2_mv_constant_complex1
          call leave2_mv_constant_complex2
          call lgdtl_plain
          call lgdtl_allregs
          call lgdtl_constant_simple
          call lgdtl_constant_complex1
          call lgdtl_constant_complex2
          call lidtl_plain
          call lidtl_allregs
          call lidtl_constant_simple
          call lidtl_constant_complex1
          call lidtl_constant_complex2
          call lds1_plain
          call lds1_allregs
          call lds1_constant_simple
          call lds1_constant_complex1
          call lds1_constant_complex2
          call lds2_mv_plain
          call lds2_mv_allregs
          call lds2_mv_constant_simple
          call lds2_mv_constant_complex1
          call lds2_mv_constant_complex2
          call les1_plain
          call les1_allregs
          call les1_constant_simple
          call les1_constant_complex1
          call les1_constant_complex2
          call les2_mv_plain
          call les2_mv_allregs
          call les2_mv_constant_simple
          call les2_mv_constant_complex1
          call les2_mv_constant_complex2
          call lfs1_plain
          call lfs1_allregs
          call lfs1_constant_simple
          call lfs1_constant_complex1
          call lfs1_constant_complex2
          call lfs2_mv_plain
          call lfs2_mv_allregs
          call lfs2_mv_constant_simple
          call lfs2_mv_constant_complex1
          call lfs2_mv_constant_complex2
          call lgs1_plain
          call lgs1_allregs
          call lgs1_constant_simple
          call lgs1_constant_complex1
          call lgs1_constant_complex2
          call lgs2_mv_plain
          call lgs2_mv_allregs
          call lgs2_mv_constant_simple
          call lgs2_mv_constant_complex1
          call lgs2_mv_constant_complex2
          call lss1_plain
          call lss1_allregs
          call lss1_constant_simple
          call lss1_constant_complex1
          call lss1_constant_complex2
          call lss2_mv_plain
          call lss2_mv_allregs
          call lss2_mv_constant_simple
          call lss2_mv_constant_complex1
          call lss2_mv_constant_complex2
          call lldt_plain
          call lldt_allregs
          call lldt_constant_simple
          call lldt_constant_complex1
          call lldt_constant_complex2
          call lmsw_plain
          call lmsw_allregs
          call lmsw_constant_simple
          call lmsw_constant_complex1
          call lmsw_constant_complex2
          call lods1_plain
          call lods1_allregs
          call lods1_constant_simple
          call lods1_constant_complex1
          call lods1_constant_complex2
          call lods2_mv_plain
          call lods2_mv_allregs
          call lods2_mv_constant_simple
          call lods2_mv_constant_complex1
          call lods2_mv_constant_complex2
          call lods3_plain
          call lods3_allregs
          call lods3_constant_simple
          call lods3_constant_complex1
          call lods3_constant_complex2
          call lods_seg_mv_plain
          call lods_seg_mv_allregs
          call lods_seg_mv_constant_simple
          call lods_seg_mv_constant_complex1
          call lods_seg_mv_constant_complex2
          call loop_type_0_plain
          call loop_type_0_allregs
          call loop_type_0_constant_simple
          call loop_type_0_constant_complex1
          call loop_type_0_constant_complex2
          call loop_type_0w_mv_plain
          call loop_type_0w_mv_allregs
          call loop_type_0w_mv_constant_simple
          call loop_type_0w_mv_constant_complex1
          call loop_type_0w_mv_constant_complex2
          call loop_type_1_plain
          call loop_type_1_allregs
          call loop_type_1_constant_simple
          call loop_type_1_constant_complex1
          call loop_type_1_constant_complex2
          call loop_type_1w_mv_plain
          call loop_type_1w_mv_allregs
          call loop_type_1w_mv_constant_simple
          call loop_type_1w_mv_constant_complex1
          call loop_type_1w_mv_constant_complex2
          call loop_type_2_plain
          call loop_type_2_allregs
          call loop_type_2_constant_simple
          call loop_type_2_constant_complex1
          call loop_type_2_constant_complex2
          call loop_type_2w_mv_plain
          call loop_type_2w_mv_allregs
          call loop_type_2w_mv_constant_simple
          call loop_type_2w_mv_constant_complex1
          call loop_type_2w_mv_constant_complex2
          call lsl_plain
          call lsl_allregs
          call lsl_constant_simple
          call lsl_constant_complex1
          call lsl_constant_complex2
          call ltr_plain
          call ltr_allregs
          call ltr_constant_simple
          call ltr_constant_complex1
          call ltr_constant_complex2
          call mov_b1_plain
          call mov_b1_allregs
          call mov_b1_constant_simple
          call mov_b1_constant_complex1
          call mov_b1_constant_complex2
          call mov_b2_mv_plain
          call mov_b2_mv_allregs
          call mov_b2_mv_constant_simple
          call mov_b2_mv_constant_complex1
          call mov_b2_mv_constant_complex2
          call mov_b3_mv_plain
          call mov_b3_mv_allregs
          call mov_b3_mv_constant_simple
          call mov_b3_mv_constant_complex1
          call mov_b3_mv_constant_complex2
          call mov_b4_mv_plain
          call mov_b4_mv_allregs
          call mov_b4_mv_constant_simple
          call mov_b4_mv_constant_complex1
          call mov_b4_mv_constant_complex2
          call mov_b5_mv_plain
          call mov_b5_mv_allregs
          call mov_b5_mv_constant_simple
          call mov_b5_mv_constant_complex1
          call mov_b5_mv_constant_complex2
          call mov_b6_mv_plain
          call mov_b6_mv_allregs
          call mov_b6_mv_constant_simple
          call mov_b6_mv_constant_complex1
          call mov_b6_mv_constant_complex2
          call mov_b7_mv_plain
          call mov_b7_mv_allregs
          call mov_b7_mv_constant_simple
          call mov_b7_mv_constant_complex1
          call mov_b7_mv_constant_complex2
          call mov_w1_plain
          call mov_w1_allregs
          call mov_w1_constant_simple
          call mov_w1_constant_complex1
          call mov_w1_constant_complex2
          call mov_w2_mv_plain
          call mov_w2_mv_allregs
          call mov_w2_mv_constant_simple
          call mov_w2_mv_constant_complex1
          call mov_w2_mv_constant_complex2
          call mov_w3_mv_plain
          call mov_w3_mv_allregs
          call mov_w3_mv_constant_simple
          call mov_w3_mv_constant_complex1
          call mov_w3_mv_constant_complex2
          call mov_w4_mv_plain
          call mov_w4_mv_allregs
          call mov_w4_mv_constant_simple
          call mov_w4_mv_constant_complex1
          call mov_w4_mv_constant_complex2
          call mov_l1_plain
          call mov_l1_allregs
          call mov_l1_constant_simple
          call mov_l1_constant_complex1
          call mov_l1_constant_complex2
          call mov_l2_mv_plain
          call mov_l2_mv_allregs
          call mov_l2_mv_constant_simple
          call mov_l2_mv_constant_complex1
          call mov_l2_mv_constant_complex2
          call mov_l3_mv_plain
          call mov_l3_mv_allregs
          call mov_l3_mv_constant_simple
          call mov_l3_mv_constant_complex1
          call mov_l3_mv_constant_complex2
          call mov_l4_mv_plain
          call mov_l4_mv_allregs
          call mov_l4_mv_constant_simple
          call mov_l4_mv_constant_complex1
          call mov_l4_mv_constant_complex2
          call mov_from_cr_mv_plain
          call mov_from_cr_mv_allregs
          call mov_from_cr_mv_constant_simple
          call mov_from_cr_mv_constant_complex1
          call mov_from_cr_mv_constant_complex2
          call mov_to_cr_mv_plain
          call mov_to_cr_mv_allregs
          call mov_to_cr_mv_constant_simple
          call mov_to_cr_mv_constant_complex1
          call mov_to_cr_mv_constant_complex2
          call mov_from_dr_mv_plain
          call mov_from_dr_mv_allregs
          call mov_from_dr_mv_constant_simple
          call mov_from_dr_mv_constant_complex1
          call mov_from_dr_mv_constant_complex2
          call mov_to_dr_mv_plain
          call mov_to_dr_mv_allregs
          call mov_to_dr_mv_constant_simple
          call mov_to_dr_mv_constant_complex1
          call mov_to_dr_mv_constant_complex2
          call mov_from_tr_mv_plain
          call mov_from_tr_mv_allregs
          call mov_from_tr_mv_constant_simple
          call mov_from_tr_mv_constant_complex1
          call mov_from_tr_mv_constant_complex2
          call mov_to_tr_mv_plain
          call mov_to_tr_mv_allregs
          call mov_to_tr_mv_constant_simple
          call mov_to_tr_mv_constant_complex1
          call mov_to_tr_mv_constant_complex2
          call movs1_plain
          call movs1_allregs
          call movs1_constant_simple
          call movs1_constant_complex1
          call movs1_constant_complex2
          call movs2_mv_plain
          call movs2_mv_allregs
          call movs2_mv_constant_simple
          call movs2_mv_constant_complex1
          call movs2_mv_constant_complex2
          call movs3_plain
          call movs3_allregs
          call movs3_constant_simple
          call movs3_constant_complex1
          call movs3_constant_complex2
          call movs_seg_mv_plain
          call movs_seg_mv_allregs
          call movs_seg_mv_constant_simple
          call movs_seg_mv_constant_complex1
          call movs_seg_mv_constant_complex2
          call movsx1_plain
          call movsx1_allregs
          call movsx1_constant_simple
          call movsx1_constant_complex1
          call movsx1_constant_complex2
          call movsx2_plain
          call movsx2_allregs
          call movsx2_constant_simple
          call movsx2_constant_complex1
          call movsx2_constant_complex2
          call movsx3_plain
          call movsx3_allregs
          call movsx3_constant_simple
          call movsx3_constant_complex1
          call movsx3_constant_complex2
          call movzx1_plain
          call movzx1_allregs
          call movzx1_constant_simple
          call movzx1_constant_complex1
          call movzx1_constant_complex2
          call movzx2_plain
          call movzx2_allregs
          call movzx2_constant_simple
          call movzx2_constant_complex1
          call movzx2_constant_complex2
          call movzx3_plain
          call movzx3_allregs
          call movzx3_constant_simple
          call movzx3_constant_complex1
          call movzx3_constant_complex2
          call mul1_plain
          call mul1_allregs
          call mul1_constant_simple
          call mul1_constant_complex1
          call mul1_constant_complex2
          call mul2_plain
          call mul2_allregs
          call mul2_constant_simple
          call mul2_constant_complex1
          call mul2_constant_complex2
          call mul3_plain
          call mul3_allregs
          call mul3_constant_simple
          call mul3_constant_complex1
          call mul3_constant_complex2
          call neg1_mv_plain
          call neg1_mv_allregs
          call neg1_mv_constant_simple
          call neg1_mv_constant_complex1
          call neg1_mv_constant_complex2
          call neg2_mv_plain
          call neg2_mv_allregs
          call neg2_mv_constant_simple
          call neg2_mv_constant_complex1
          call neg2_mv_constant_complex2
          call neg3_plain
          call neg3_allregs
          call neg3_constant_simple
          call neg3_constant_complex1
          call neg3_constant_complex2
          call neg4a_zero_mv_plain
          call neg4a_zero_mv_allregs
          call neg4a_zero_mv_constant_simple
          call neg4a_zero_mv_constant_complex1
          call neg4a_zero_mv_constant_complex2
          call neg4b_1_mv_plain
          call neg4b_1_mv_allregs
          call neg4b_1_mv_constant_simple
          call neg4b_1_mv_constant_complex1
          call neg4b_1_mv_constant_complex2
          call neg4c_80_mv_plain
          call neg4c_80_mv_allregs
          call neg4c_80_mv_constant_simple
          call neg4c_80_mv_constant_complex1
          call neg4c_80_mv_constant_complex2
          call neg4d_m1_mv_plain
          call neg4d_m1_mv_allregs
          call neg4d_m1_mv_constant_simple
          call neg4d_m1_mv_constant_complex1
          call neg4d_m1_mv_constant_complex2
          call neg5_mv_plain
          call neg5_mv_allregs
          call neg5_mv_constant_simple
          call neg5_mv_constant_complex1
          call neg5_mv_constant_complex2
          call neg_locked_mv_plain
          call neg_locked_mv_allregs
          call neg_locked_mv_constant_simple
          call neg_locked_mv_constant_complex1
          call neg_locked_mv_constant_complex2
          call nop1_plain
          call nop1_allregs
          call nop1_constant_simple
          call nop1_constant_complex1
          call nop1_constant_complex2
          call nop2_mv_plain
          call nop2_mv_allregs
          call nop2_mv_constant_simple
          call nop2_mv_constant_complex1
          call nop2_mv_constant_complex2
          call nop3_mv_plain
          call nop3_mv_allregs
          call nop3_mv_constant_simple
          call nop3_mv_constant_complex1
          call nop3_mv_constant_complex2
          call nop4_mv_plain
          call nop4_mv_allregs
          call nop4_mv_constant_simple
          call nop4_mv_constant_complex1
          call nop4_mv_constant_complex2
          call nop5_mv_plain
          call nop5_mv_allregs
          call nop5_mv_constant_simple
          call nop5_mv_constant_complex1
          call nop5_mv_constant_complex2
          call nop6_mv_plain
          call nop6_mv_allregs
          call nop6_mv_constant_simple
          call nop6_mv_constant_complex1
          call nop6_mv_constant_complex2
          call nop7_mv_plain
          call nop7_mv_allregs
          call nop7_mv_constant_simple
          call nop7_mv_constant_complex1
          call nop7_mv_constant_complex2
          call not1_mv_plain
          call not1_mv_allregs
          call not1_mv_constant_simple
          call not1_mv_constant_complex1
          call not1_mv_constant_complex2
          call not2_mv_plain
          call not2_mv_allregs
          call not2_mv_constant_simple
          call not2_mv_constant_complex1
          call not2_mv_constant_complex2
          call not3_plain
          call not3_allregs
          call not3_constant_simple
          call not3_constant_complex1
          call not3_constant_complex2
          call not_locked_mv_plain
          call not_locked_mv_allregs
          call not_locked_mv_constant_simple
          call not_locked_mv_constant_complex1
          call not_locked_mv_constant_complex2
          call or1_mv_plain
          call or1_mv_allregs
          call or1_mv_constant_simple
          call or1_mv_constant_complex1
          call or1_mv_constant_complex2
          call or2_mv_plain
          call or2_mv_allregs
          call or2_mv_constant_simple
          call or2_mv_constant_complex1
          call or2_mv_constant_complex2
          call or3_mv_plain
          call or3_mv_allregs
          call or3_mv_constant_simple
          call or3_mv_constant_complex1
          call or3_mv_constant_complex2
          call or4_mv_plain
          call or4_mv_allregs
          call or4_mv_constant_simple
          call or4_mv_constant_complex1
          call or4_mv_constant_complex2
          call or5_plain
          call or5_allregs
          call or5_constant_simple
          call or5_constant_complex1
          call or5_constant_complex2
          call or6_mv_plain
          call or6_mv_allregs
          call or6_mv_constant_simple
          call or6_mv_constant_complex1
          call or6_mv_constant_complex2
          call or7_mv_plain
          call or7_mv_allregs
          call or7_mv_constant_simple
          call or7_mv_constant_complex1
          call or7_mv_constant_complex2
          call or8_mv_plain
          call or8_mv_allregs
          call or8_mv_constant_simple
          call or8_mv_constant_complex1
          call or8_mv_constant_complex2
          call or9_mv_plain
          call or9_mv_allregs
          call or9_mv_constant_simple
          call or9_mv_constant_complex1
          call or9_mv_constant_complex2
          call or_locked_mv_plain
          call or_locked_mv_allregs
          call or_locked_mv_constant_simple
          call or_locked_mv_constant_complex1
          call or_locked_mv_constant_complex2
          call out1_plain
          call out1_allregs
          call out1_constant_simple
          call out1_constant_complex1
          call out1_constant_complex2
          call out2_mv_plain
          call out2_mv_allregs
          call out2_mv_constant_simple
          call out2_mv_constant_complex1
          call out2_mv_constant_complex2
          call out3_plain
          call out3_allregs
          call out3_constant_simple
          call out3_constant_complex1
          call out3_constant_complex2
          call out4_plain
          call out4_allregs
          call out4_constant_simple
          call out4_constant_complex1
          call out4_constant_complex2
          call out5_mv_plain
          call out5_mv_allregs
          call out5_mv_constant_simple
          call out5_mv_constant_complex1
          call out5_mv_constant_complex2
          call out6_mv_plain
          call out6_mv_allregs
          call out6_mv_constant_simple
          call out6_mv_constant_complex1
          call out6_mv_constant_complex2
          call outs1_plain
          call outs1_allregs
          call outs1_constant_simple
          call outs1_constant_complex1
          call outs1_constant_complex2
          call outs2_mv_plain
          call outs2_mv_allregs
          call outs2_mv_constant_simple
          call outs2_mv_constant_complex1
          call outs2_mv_constant_complex2
          call outs3_plain
          call outs3_allregs
          call outs3_constant_simple
          call outs3_constant_complex1
          call outs3_constant_complex2
          call pop1_mv_plain
          call pop1_mv_allregs
          call pop1_mv_constant_simple
          call pop1_mv_constant_complex1
          call pop1_mv_constant_complex2
          call pop2_mv_plain
          call pop2_mv_allregs
          call pop2_mv_constant_simple
          call pop2_mv_constant_complex1
          call pop2_mv_constant_complex2
          call pop3_mv_plain
          call pop3_mv_allregs
          call pop3_mv_constant_simple
          call pop3_mv_constant_complex1
          call pop3_mv_constant_complex2
          call pop4_plain
          call pop4_allregs
          call pop4_constant_simple
          call pop4_constant_complex1
          call pop4_constant_complex2
          call pop_seg1_mv_plain
          call pop_seg1_mv_allregs
          call pop_seg1_mv_constant_simple
          call pop_seg1_mv_constant_complex1
          call pop_seg1_mv_constant_complex2
          call pop_seg2_mv_plain
          call pop_seg2_mv_allregs
          call pop_seg2_mv_constant_simple
          call pop_seg2_mv_constant_complex1
          call pop_seg2_mv_constant_complex2
          call pop_seg3_mv_plain
          call pop_seg3_mv_allregs
          call pop_seg3_mv_constant_simple
          call pop_seg3_mv_constant_complex1
          call pop_seg3_mv_constant_complex2
          call pop_seg4_mv_plain
          call pop_seg4_mv_allregs
          call pop_seg4_mv_constant_simple
          call pop_seg4_mv_constant_complex1
          call pop_seg4_mv_constant_complex2
          call pop_seg5_mv_plain
          call pop_seg5_mv_allregs
          call pop_seg5_mv_constant_simple
          call pop_seg5_mv_constant_complex1
          call pop_seg5_mv_constant_complex2
          call popa1_plain
          call popa1_allregs
          call popa1_constant_simple
          call popa1_constant_complex1
          call popa1_constant_complex2
          call popa2_mv_plain
          call popa2_mv_allregs
          call popa2_mv_constant_simple
          call popa2_mv_constant_complex1
          call popa2_mv_constant_complex2
          call popf1_plain
          call popf1_allregs
          call popf1_constant_simple
          call popf1_constant_complex1
          call popf1_constant_complex2
          call popf2_plain
          call popf2_allregs
          call popf2_constant_simple
          call popf2_constant_complex1
          call popf2_constant_complex2
          call push1_mv_plain
          call push1_mv_allregs
          call push1_mv_constant_simple
          call push1_mv_constant_complex1
          call push1_mv_constant_complex2
          call push2_mv_plain
          call push2_mv_allregs
          call push2_mv_constant_simple
          call push2_mv_constant_complex1
          call push2_mv_constant_complex2
          call push3_mv_plain
          call push3_mv_allregs
          call push3_mv_constant_simple
          call push3_mv_constant_complex1
          call push3_mv_constant_complex2
          call push4_mv_plain
          call push4_mv_allregs
          call push4_mv_constant_simple
          call push4_mv_constant_complex1
          call push4_mv_constant_complex2
          call push4_effect_plain
          call push4_effect_allregs
          call push4_effect_constant_simple
          call push4_effect_constant_complex1
          call push4_effect_constant_complex2
          call push5_mv_plain
          call push5_mv_allregs
          call push5_mv_constant_simple
          call push5_mv_constant_complex1
          call push5_mv_constant_complex2
          call push6_mv_plain
          call push6_mv_allregs
          call push6_mv_constant_simple
          call push6_mv_constant_complex1
          call push6_mv_constant_complex2
          call push7_mv_plain
          call push7_mv_allregs
          call push7_mv_constant_simple
          call push7_mv_constant_complex1
          call push7_mv_constant_complex2
          call push_seg1_mv_plain
          call push_seg1_mv_allregs
          call push_seg1_mv_constant_simple
          call push_seg1_mv_constant_complex1
          call push_seg1_mv_constant_complex2
          call push_seg2_mv_plain
          call push_seg2_mv_allregs
          call push_seg2_mv_constant_simple
          call push_seg2_mv_constant_complex1
          call push_seg2_mv_constant_complex2
          call push_seg3_mv_plain
          call push_seg3_mv_allregs
          call push_seg3_mv_constant_simple
          call push_seg3_mv_constant_complex1
          call push_seg3_mv_constant_complex2
          call push_seg4_mv_plain
          call push_seg4_mv_allregs
          call push_seg4_mv_constant_simple
          call push_seg4_mv_constant_complex1
          call push_seg4_mv_constant_complex2
          call push_seg5_mv_plain
          call push_seg5_mv_allregs
          call push_seg5_mv_constant_simple
          call push_seg5_mv_constant_complex1
          call push_seg5_mv_constant_complex2
          call pusha1_plain
          call pusha1_allregs
          call pusha1_constant_simple
          call pusha1_constant_complex1
          call pusha1_constant_complex2
          call pusha2_mv_plain
          call pusha2_mv_allregs
          call pusha2_mv_constant_simple
          call pusha2_mv_constant_complex1
          call pusha2_mv_constant_complex2
          call pushf1_plain
          call pushf1_allregs
          call pushf1_constant_simple
          call pushf1_constant_complex1
          call pushf1_constant_complex2
          call pushf2_plain
          call pushf2_allregs
          call pushf2_constant_simple
          call pushf2_constant_complex1
          call pushf2_constant_complex2
          call rotate_once_rol_b_mv_plain
          call rotate_once_rol_b_mv_allregs
          call rotate_once_rol_b_mv_constant_simple
          call rotate_once_rol_b_mv_constant_complex1
          call rotate_once_rol_b_mv_constant_complex2
          call rotate_once_rol_w_mv_plain
          call rotate_once_rol_w_mv_allregs
          call rotate_once_rol_w_mv_constant_simple
          call rotate_once_rol_w_mv_constant_complex1
          call rotate_once_rol_w_mv_constant_complex2
          call rotate_once_rol_l_plain
          call rotate_once_rol_l_allregs
          call rotate_once_rol_l_constant_simple
          call rotate_once_rol_l_constant_complex1
          call rotate_once_rol_l_constant_complex2
          call rotate_once_ror_b_mv_plain
          call rotate_once_ror_b_mv_allregs
          call rotate_once_ror_b_mv_constant_simple
          call rotate_once_ror_b_mv_constant_complex1
          call rotate_once_ror_b_mv_constant_complex2
          call rotate_once_ror_w_mv_plain
          call rotate_once_ror_w_mv_allregs
          call rotate_once_ror_w_mv_constant_simple
          call rotate_once_ror_w_mv_constant_complex1
          call rotate_once_ror_w_mv_constant_complex2
          call rotate_once_ror_l_plain
          call rotate_once_ror_l_allregs
          call rotate_once_ror_l_constant_simple
          call rotate_once_ror_l_constant_complex1
          call rotate_once_ror_l_constant_complex2
          call rotate_once_rcl_b_mv_plain
          call rotate_once_rcl_b_mv_allregs
          call rotate_once_rcl_b_mv_constant_simple
          call rotate_once_rcl_b_mv_constant_complex1
          call rotate_once_rcl_b_mv_constant_complex2
          call rotate_once_rcl_w_mv_plain
          call rotate_once_rcl_w_mv_allregs
          call rotate_once_rcl_w_mv_constant_simple
          call rotate_once_rcl_w_mv_constant_complex1
          call rotate_once_rcl_w_mv_constant_complex2
          call rotate_once_rcl_l_plain
          call rotate_once_rcl_l_allregs
          call rotate_once_rcl_l_constant_simple
          call rotate_once_rcl_l_constant_complex1
          call rotate_once_rcl_l_constant_complex2
          call rotate_once_rcr_b_mv_plain
          call rotate_once_rcr_b_mv_allregs
          call rotate_once_rcr_b_mv_constant_simple
          call rotate_once_rcr_b_mv_constant_complex1
          call rotate_once_rcr_b_mv_constant_complex2
          call rotate_once_rcr_w_mv_plain
          call rotate_once_rcr_w_mv_allregs
          call rotate_once_rcr_w_mv_constant_simple
          call rotate_once_rcr_w_mv_constant_complex1
          call rotate_once_rcr_w_mv_constant_complex2
          call rotate_once_rcr_l_plain
          call rotate_once_rcr_l_allregs
          call rotate_once_rcr_l_constant_simple
          call rotate_once_rcr_l_constant_complex1
          call rotate_once_rcr_l_constant_complex2
          call rotate_once_shl_b_mv_plain
          call rotate_once_shl_b_mv_allregs
          call rotate_once_shl_b_mv_constant_simple
          call rotate_once_shl_b_mv_constant_complex1
          call rotate_once_shl_b_mv_constant_complex2
          call rotate_once_shl_w_mv_plain
          call rotate_once_shl_w_mv_allregs
          call rotate_once_shl_w_mv_constant_simple
          call rotate_once_shl_w_mv_constant_complex1
          call rotate_once_shl_w_mv_constant_complex2
          call rotate_once_shl_l_plain
          call rotate_once_shl_l_allregs
          call rotate_once_shl_l_constant_simple
          call rotate_once_shl_l_constant_complex1
          call rotate_once_shl_l_constant_complex2
          call rotate_once_shr_b_mv_plain
          call rotate_once_shr_b_mv_allregs
          call rotate_once_shr_b_mv_constant_simple
          call rotate_once_shr_b_mv_constant_complex1
          call rotate_once_shr_b_mv_constant_complex2
          call rotate_once_shr_w_mv_plain
          call rotate_once_shr_w_mv_allregs
          call rotate_once_shr_w_mv_constant_simple
          call rotate_once_shr_w_mv_constant_complex1
          call rotate_once_shr_w_mv_constant_complex2
          call rotate_once_shr_l_plain
          call rotate_once_shr_l_allregs
          call rotate_once_shr_l_constant_simple
          call rotate_once_shr_l_constant_complex1
          call rotate_once_shr_l_constant_complex2
          call rotate_once_sar_b_mv_plain
          call rotate_once_sar_b_mv_allregs
          call rotate_once_sar_b_mv_constant_simple
          call rotate_once_sar_b_mv_constant_complex1
          call rotate_once_sar_b_mv_constant_complex2
          call rotate_once_sar_w_mv_plain
          call rotate_once_sar_w_mv_allregs
          call rotate_once_sar_w_mv_constant_simple
          call rotate_once_sar_w_mv_constant_complex1
          call rotate_once_sar_w_mv_constant_complex2
          call rotate_once_sar_l_plain
          call rotate_once_sar_l_allregs
          call rotate_once_sar_l_constant_simple
          call rotate_once_sar_l_constant_complex1
          call rotate_once_sar_l_constant_complex2
          call rotate_cl_controlled_rol_b_mv_plain
          call rotate_cl_controlled_rol_b_mv_allregs
          call rotate_cl_controlled_rol_b_mv_constant_simple
          call rotate_cl_controlled_rol_b_mv_constant_complex1
          call rotate_cl_controlled_rol_b_mv_constant_complex2
          call rotate_cl_controlled_rol_w_mv_plain
          call rotate_cl_controlled_rol_w_mv_allregs
          call rotate_cl_controlled_rol_w_mv_constant_simple
          call rotate_cl_controlled_rol_w_mv_constant_complex1
          call rotate_cl_controlled_rol_w_mv_constant_complex2
          call rotate_cl_controlled_rol_l_plain
          call rotate_cl_controlled_rol_l_allregs
          call rotate_cl_controlled_rol_l_constant_simple
          call rotate_cl_controlled_rol_l_constant_complex1
          call rotate_cl_controlled_rol_l_constant_complex2
          call rotate_cl_controlled_ror_b_mv_plain
          call rotate_cl_controlled_ror_b_mv_allregs
          call rotate_cl_controlled_ror_b_mv_constant_simple
          call rotate_cl_controlled_ror_b_mv_constant_complex1
          call rotate_cl_controlled_ror_b_mv_constant_complex2
          call rotate_cl_controlled_ror_w_mv_plain
          call rotate_cl_controlled_ror_w_mv_allregs
          call rotate_cl_controlled_ror_w_mv_constant_simple
          call rotate_cl_controlled_ror_w_mv_constant_complex1
          call rotate_cl_controlled_ror_w_mv_constant_complex2
          call rotate_cl_controlled_ror_l_plain
          call rotate_cl_controlled_ror_l_allregs
          call rotate_cl_controlled_ror_l_constant_simple
          call rotate_cl_controlled_ror_l_constant_complex1
          call rotate_cl_controlled_ror_l_constant_complex2
          call rotate_cl_controlled_rcl_b_mv_plain
          call rotate_cl_controlled_rcl_b_mv_allregs
          call rotate_cl_controlled_rcl_b_mv_constant_simple
          call rotate_cl_controlled_rcl_b_mv_constant_complex1
          call rotate_cl_controlled_rcl_b_mv_constant_complex2
          call rotate_cl_controlled_rcl_w_mv_plain
          call rotate_cl_controlled_rcl_w_mv_allregs
          call rotate_cl_controlled_rcl_w_mv_constant_simple
          call rotate_cl_controlled_rcl_w_mv_constant_complex1
          call rotate_cl_controlled_rcl_w_mv_constant_complex2
          call rotate_cl_controlled_rcl_l_plain
          call rotate_cl_controlled_rcl_l_allregs
          call rotate_cl_controlled_rcl_l_constant_simple
          call rotate_cl_controlled_rcl_l_constant_complex1
          call rotate_cl_controlled_rcl_l_constant_complex2
          call rotate_cl_controlled_rcr_b_mv_plain
          call rotate_cl_controlled_rcr_b_mv_allregs
          call rotate_cl_controlled_rcr_b_mv_constant_simple
          call rotate_cl_controlled_rcr_b_mv_constant_complex1
          call rotate_cl_controlled_rcr_b_mv_constant_complex2
          call rotate_cl_controlled_rcr_w_mv_plain
          call rotate_cl_controlled_rcr_w_mv_allregs
          call rotate_cl_controlled_rcr_w_mv_constant_simple
          call rotate_cl_controlled_rcr_w_mv_constant_complex1
          call rotate_cl_controlled_rcr_w_mv_constant_complex2
          call rotate_cl_controlled_rcr_l_plain
          call rotate_cl_controlled_rcr_l_allregs
          call rotate_cl_controlled_rcr_l_constant_simple
          call rotate_cl_controlled_rcr_l_constant_complex1
          call rotate_cl_controlled_rcr_l_constant_complex2
          call rotate_cl_controlled_shl_b_mv_plain
          call rotate_cl_controlled_shl_b_mv_allregs
          call rotate_cl_controlled_shl_b_mv_constant_simple
          call rotate_cl_controlled_shl_b_mv_constant_complex1
          call rotate_cl_controlled_shl_b_mv_constant_complex2
          call rotate_cl_controlled_shl_w_mv_plain
          call rotate_cl_controlled_shl_w_mv_allregs
          call rotate_cl_controlled_shl_w_mv_constant_simple
          call rotate_cl_controlled_shl_w_mv_constant_complex1
          call rotate_cl_controlled_shl_w_mv_constant_complex2
          call rotate_cl_controlled_shl_l_plain
          call rotate_cl_controlled_shl_l_allregs
          call rotate_cl_controlled_shl_l_constant_simple
          call rotate_cl_controlled_shl_l_constant_complex1
          call rotate_cl_controlled_shl_l_constant_complex2
          call rotate_cl_controlled_shr_b_mv_plain
          call rotate_cl_controlled_shr_b_mv_allregs
          call rotate_cl_controlled_shr_b_mv_constant_simple
          call rotate_cl_controlled_shr_b_mv_constant_complex1
          call rotate_cl_controlled_shr_b_mv_constant_complex2
          call rotate_cl_controlled_shr_w_mv_plain
          call rotate_cl_controlled_shr_w_mv_allregs
          call rotate_cl_controlled_shr_w_mv_constant_simple
          call rotate_cl_controlled_shr_w_mv_constant_complex1
          call rotate_cl_controlled_shr_w_mv_constant_complex2
          call rotate_cl_controlled_shr_l_plain
          call rotate_cl_controlled_shr_l_allregs
          call rotate_cl_controlled_shr_l_constant_simple
          call rotate_cl_controlled_shr_l_constant_complex1
          call rotate_cl_controlled_shr_l_constant_complex2
          call rotate_cl_controlled_sar_b_mv_plain
          call rotate_cl_controlled_sar_b_mv_allregs
          call rotate_cl_controlled_sar_b_mv_constant_simple
          call rotate_cl_controlled_sar_b_mv_constant_complex1
          call rotate_cl_controlled_sar_b_mv_constant_complex2
          call rotate_cl_controlled_sar_w_mv_plain
          call rotate_cl_controlled_sar_w_mv_allregs
          call rotate_cl_controlled_sar_w_mv_constant_simple
          call rotate_cl_controlled_sar_w_mv_constant_complex1
          call rotate_cl_controlled_sar_w_mv_constant_complex2
          call rotate_cl_controlled_sar_l_plain
          call rotate_cl_controlled_sar_l_allregs
          call rotate_cl_controlled_sar_l_constant_simple
          call rotate_cl_controlled_sar_l_constant_complex1
          call rotate_cl_controlled_sar_l_constant_complex2
          call rotate_imm8_rol_b_mv_plain
          call rotate_imm8_rol_b_mv_allregs
          call rotate_imm8_rol_b_mv_constant_simple
          call rotate_imm8_rol_b_mv_constant_complex1
          call rotate_imm8_rol_b_mv_constant_complex2
          call rotate_imm8_rol_w_mv_plain
          call rotate_imm8_rol_w_mv_allregs
          call rotate_imm8_rol_w_mv_constant_simple
          call rotate_imm8_rol_w_mv_constant_complex1
          call rotate_imm8_rol_w_mv_constant_complex2
          call rotate_imm8_rol_l_plain
          call rotate_imm8_rol_l_allregs
          call rotate_imm8_rol_l_constant_simple
          call rotate_imm8_rol_l_constant_complex1
          call rotate_imm8_rol_l_constant_complex2
          call rotate_imm8_ror_b_mv_plain
          call rotate_imm8_ror_b_mv_allregs
          call rotate_imm8_ror_b_mv_constant_simple
          call rotate_imm8_ror_b_mv_constant_complex1
          call rotate_imm8_ror_b_mv_constant_complex2
          call rotate_imm8_ror_w_mv_plain
          call rotate_imm8_ror_w_mv_allregs
          call rotate_imm8_ror_w_mv_constant_simple
          call rotate_imm8_ror_w_mv_constant_complex1
          call rotate_imm8_ror_w_mv_constant_complex2
          call rotate_imm8_ror_l_plain
          call rotate_imm8_ror_l_allregs
          call rotate_imm8_ror_l_constant_simple
          call rotate_imm8_ror_l_constant_complex1
          call rotate_imm8_ror_l_constant_complex2
          call rotate_imm8_rcl_b_mv_plain
          call rotate_imm8_rcl_b_mv_allregs
          call rotate_imm8_rcl_b_mv_constant_simple
          call rotate_imm8_rcl_b_mv_constant_complex1
          call rotate_imm8_rcl_b_mv_constant_complex2
          call rotate_imm8_rcl_w_mv_plain
          call rotate_imm8_rcl_w_mv_allregs
          call rotate_imm8_rcl_w_mv_constant_simple
          call rotate_imm8_rcl_w_mv_constant_complex1
          call rotate_imm8_rcl_w_mv_constant_complex2
          call rotate_imm8_rcl_l_plain
          call rotate_imm8_rcl_l_allregs
          call rotate_imm8_rcl_l_constant_simple
          call rotate_imm8_rcl_l_constant_complex1
          call rotate_imm8_rcl_l_constant_complex2
          call rotate_imm8_rcr_b_mv_plain
          call rotate_imm8_rcr_b_mv_allregs
          call rotate_imm8_rcr_b_mv_constant_simple
          call rotate_imm8_rcr_b_mv_constant_complex1
          call rotate_imm8_rcr_b_mv_constant_complex2
          call rotate_imm8_rcr_w_mv_plain
          call rotate_imm8_rcr_w_mv_allregs
          call rotate_imm8_rcr_w_mv_constant_simple
          call rotate_imm8_rcr_w_mv_constant_complex1
          call rotate_imm8_rcr_w_mv_constant_complex2
          call rotate_imm8_rcr_l_plain
          call rotate_imm8_rcr_l_allregs
          call rotate_imm8_rcr_l_constant_simple
          call rotate_imm8_rcr_l_constant_complex1
          call rotate_imm8_rcr_l_constant_complex2
          call rotate_imm8_shl_b_mv_plain
          call rotate_imm8_shl_b_mv_allregs
          call rotate_imm8_shl_b_mv_constant_simple
          call rotate_imm8_shl_b_mv_constant_complex1
          call rotate_imm8_shl_b_mv_constant_complex2
          call rotate_imm8_shl_w_mv_plain
          call rotate_imm8_shl_w_mv_allregs
          call rotate_imm8_shl_w_mv_constant_simple
          call rotate_imm8_shl_w_mv_constant_complex1
          call rotate_imm8_shl_w_mv_constant_complex2
          call rotate_imm8_shl_l_plain
          call rotate_imm8_shl_l_allregs
          call rotate_imm8_shl_l_constant_simple
          call rotate_imm8_shl_l_constant_complex1
          call rotate_imm8_shl_l_constant_complex2
          call rotate_imm8_shr_b_mv_plain
          call rotate_imm8_shr_b_mv_allregs
          call rotate_imm8_shr_b_mv_constant_simple
          call rotate_imm8_shr_b_mv_constant_complex1
          call rotate_imm8_shr_b_mv_constant_complex2
          call rotate_imm8_shr_w_mv_plain
          call rotate_imm8_shr_w_mv_allregs
          call rotate_imm8_shr_w_mv_constant_simple
          call rotate_imm8_shr_w_mv_constant_complex1
          call rotate_imm8_shr_w_mv_constant_complex2
          call rotate_imm8_shr_l_plain
          call rotate_imm8_shr_l_allregs
          call rotate_imm8_shr_l_constant_simple
          call rotate_imm8_shr_l_constant_complex1
          call rotate_imm8_shr_l_constant_complex2
          call rotate_imm8_sar_b_mv_plain
          call rotate_imm8_sar_b_mv_allregs
          call rotate_imm8_sar_b_mv_constant_simple
          call rotate_imm8_sar_b_mv_constant_complex1
          call rotate_imm8_sar_b_mv_constant_complex2
          call rotate_imm8_sar_w_mv_plain
          call rotate_imm8_sar_w_mv_allregs
          call rotate_imm8_sar_w_mv_constant_simple
          call rotate_imm8_sar_w_mv_constant_complex1
          call rotate_imm8_sar_w_mv_constant_complex2
          call rotate_imm8_sar_l_plain
          call rotate_imm8_sar_l_allregs
          call rotate_imm8_sar_l_constant_simple
          call rotate_imm8_sar_l_constant_complex1
          call rotate_imm8_sar_l_constant_complex2
          call rep_ins1b_plain
          call rep_ins1b_allregs
          call rep_ins1b_constant_simple
          call rep_ins1b_constant_complex1
          call rep_ins1b_constant_complex2
          call rep_ins1w_mv_plain
          call rep_ins1w_mv_allregs
          call rep_ins1w_mv_constant_simple
          call rep_ins1w_mv_constant_complex1
          call rep_ins1w_mv_constant_complex2
          call rep_ins1l_mv_plain
          call rep_ins1l_mv_allregs
          call rep_ins1l_mv_constant_simple
          call rep_ins1l_mv_constant_complex1
          call rep_ins1l_mv_constant_complex2
          call rep_ins2b_plain
          call rep_ins2b_allregs
          call rep_ins2b_constant_simple
          call rep_ins2b_constant_complex1
          call rep_ins2b_constant_complex2
          call rep_ins2w_mv_plain
          call rep_ins2w_mv_allregs
          call rep_ins2w_mv_constant_simple
          call rep_ins2w_mv_constant_complex1
          call rep_ins2w_mv_constant_complex2
          call rep_ins2l_mv_plain
          call rep_ins2l_mv_allregs
          call rep_ins2l_mv_constant_simple
          call rep_ins2l_mv_constant_complex1
          call rep_ins2l_mv_constant_complex2
          call rep_lods1b_plain
          call rep_lods1b_allregs
          call rep_lods1b_constant_simple
          call rep_lods1b_constant_complex1
          call rep_lods1b_constant_complex2
          call rep_lods1w_mv_plain
          call rep_lods1w_mv_allregs
          call rep_lods1w_mv_constant_simple
          call rep_lods1w_mv_constant_complex1
          call rep_lods1w_mv_constant_complex2
          call rep_lods1l_mv_plain
          call rep_lods1l_mv_allregs
          call rep_lods1l_mv_constant_simple
          call rep_lods1l_mv_constant_complex1
          call rep_lods1l_mv_constant_complex2
          call rep_lods2b_plain
          call rep_lods2b_allregs
          call rep_lods2b_constant_simple
          call rep_lods2b_constant_complex1
          call rep_lods2b_constant_complex2
          call rep_lods2w_mv_plain
          call rep_lods2w_mv_allregs
          call rep_lods2w_mv_constant_simple
          call rep_lods2w_mv_constant_complex1
          call rep_lods2w_mv_constant_complex2
          call rep_lods2l_mv_plain
          call rep_lods2l_mv_allregs
          call rep_lods2l_mv_constant_simple
          call rep_lods2l_mv_constant_complex1
          call rep_lods2l_mv_constant_complex2
          call rep_movs1b_plain
          call rep_movs1b_allregs
          call rep_movs1b_constant_simple
          call rep_movs1b_constant_complex1
          call rep_movs1b_constant_complex2
          call rep_movs1w_mv_plain
          call rep_movs1w_mv_allregs
          call rep_movs1w_mv_constant_simple
          call rep_movs1w_mv_constant_complex1
          call rep_movs1w_mv_constant_complex2
          call rep_movs1l_mv_plain
          call rep_movs1l_mv_allregs
          call rep_movs1l_mv_constant_simple
          call rep_movs1l_mv_constant_complex1
          call rep_movs1l_mv_constant_complex2
          call rep_movs2b_plain
          call rep_movs2b_allregs
          call rep_movs2b_constant_simple
          call rep_movs2b_constant_complex1
          call rep_movs2b_constant_complex2
          call rep_movs2w_mv_plain
          call rep_movs2w_mv_allregs
          call rep_movs2w_mv_constant_simple
          call rep_movs2w_mv_constant_complex1
          call rep_movs2w_mv_constant_complex2
          call rep_movs2l_mv_plain
          call rep_movs2l_mv_allregs
          call rep_movs2l_mv_constant_simple
          call rep_movs2l_mv_constant_complex1
          call rep_movs2l_mv_constant_complex2
          call rep_outs1b_plain
          call rep_outs1b_allregs
          call rep_outs1b_constant_simple
          call rep_outs1b_constant_complex1
          call rep_outs1b_constant_complex2
          call rep_outs1w_mv_plain
          call rep_outs1w_mv_allregs
          call rep_outs1w_mv_constant_simple
          call rep_outs1w_mv_constant_complex1
          call rep_outs1w_mv_constant_complex2
          call rep_outs1l_mv_plain
          call rep_outs1l_mv_allregs
          call rep_outs1l_mv_constant_simple
          call rep_outs1l_mv_constant_complex1
          call rep_outs1l_mv_constant_complex2
          call rep_outs2b_plain
          call rep_outs2b_allregs
          call rep_outs2b_constant_simple
          call rep_outs2b_constant_complex1
          call rep_outs2b_constant_complex2
          call rep_outs2w_mv_plain
          call rep_outs2w_mv_allregs
          call rep_outs2w_mv_constant_simple
          call rep_outs2w_mv_constant_complex1
          call rep_outs2w_mv_constant_complex2
          call rep_outs2l_mv_plain
          call rep_outs2l_mv_allregs
          call rep_outs2l_mv_constant_simple
          call rep_outs2l_mv_constant_complex1
          call rep_outs2l_mv_constant_complex2
          call rep_stos1b_plain
          call rep_stos1b_allregs
          call rep_stos1b_constant_simple
          call rep_stos1b_constant_complex1
          call rep_stos1b_constant_complex2
          call rep_stos1w_mv_plain
          call rep_stos1w_mv_allregs
          call rep_stos1w_mv_constant_simple
          call rep_stos1w_mv_constant_complex1
          call rep_stos1w_mv_constant_complex2
          call rep_stos1l_mv_plain
          call rep_stos1l_mv_allregs
          call rep_stos1l_mv_constant_simple
          call rep_stos1l_mv_constant_complex1
          call rep_stos1l_mv_constant_complex2
          call rep_stos2b_plain
          call rep_stos2b_allregs
          call rep_stos2b_constant_simple
          call rep_stos2b_constant_complex1
          call rep_stos2b_constant_complex2
          call rep_stos2w_mv_plain
          call rep_stos2w_mv_allregs
          call rep_stos2w_mv_constant_simple
          call rep_stos2w_mv_constant_complex1
          call rep_stos2w_mv_constant_complex2
          call rep_stos2l_mv_plain
          call rep_stos2l_mv_allregs
          call rep_stos2l_mv_constant_simple
          call rep_stos2l_mv_constant_complex1
          call rep_stos2l_mv_constant_complex2
          call rep_cmps1b_plain
          call rep_cmps1b_allregs
          call rep_cmps1b_constant_simple
          call rep_cmps1b_constant_complex1
          call rep_cmps1b_constant_complex2
          call rep_cmps1w_mv_plain
          call rep_cmps1w_mv_allregs
          call rep_cmps1w_mv_constant_simple
          call rep_cmps1w_mv_constant_complex1
          call rep_cmps1w_mv_constant_complex2
          call rep_cmps1l_mv_plain
          call rep_cmps1l_mv_allregs
          call rep_cmps1l_mv_constant_simple
          call rep_cmps1l_mv_constant_complex1
          call rep_cmps1l_mv_constant_complex2
          call rep_cmps2b_plain
          call rep_cmps2b_allregs
          call rep_cmps2b_constant_simple
          call rep_cmps2b_constant_complex1
          call rep_cmps2b_constant_complex2
          call rep_cmps2w_mv_plain
          call rep_cmps2w_mv_allregs
          call rep_cmps2w_mv_constant_simple
          call rep_cmps2w_mv_constant_complex1
          call rep_cmps2w_mv_constant_complex2
          call rep_cmps2l_mv_plain
          call rep_cmps2l_mv_allregs
          call rep_cmps2l_mv_constant_simple
          call rep_cmps2l_mv_constant_complex1
          call rep_cmps2l_mv_constant_complex2
          call rep_cmps_seg1_mv_plain
          call rep_cmps_seg1_mv_allregs
          call rep_cmps_seg1_mv_constant_simple
          call rep_cmps_seg1_mv_constant_complex1
          call rep_cmps_seg1_mv_constant_complex2
          call rep_cmps_clear_mv_plain
          call rep_cmps_clear_mv_allregs
          call rep_cmps_clear_mv_constant_simple
          call rep_cmps_clear_mv_constant_complex1
          call rep_cmps_clear_mv_constant_complex2
          call rep_cmps_set_mv_plain
          call rep_cmps_set_mv_allregs
          call rep_cmps_set_mv_constant_simple
          call rep_cmps_set_mv_constant_complex1
          call rep_cmps_set_mv_constant_complex2
          call rep_scas1b_plain
          call rep_scas1b_allregs
          call rep_scas1b_constant_simple
          call rep_scas1b_constant_complex1
          call rep_scas1b_constant_complex2
          call rep_scas1w_mv_plain
          call rep_scas1w_mv_allregs
          call rep_scas1w_mv_constant_simple
          call rep_scas1w_mv_constant_complex1
          call rep_scas1w_mv_constant_complex2
          call rep_scas1l_plain
          call rep_scas1l_allregs
          call rep_scas1l_constant_simple
          call rep_scas1l_constant_complex1
          call rep_scas1l_constant_complex2
          call rep_scas2b_plain
          call rep_scas2b_allregs
          call rep_scas2b_constant_simple
          call rep_scas2b_constant_complex1
          call rep_scas2b_constant_complex2
          call rep_scas2w_mv_plain
          call rep_scas2w_mv_allregs
          call rep_scas2w_mv_constant_simple
          call rep_scas2w_mv_constant_complex1
          call rep_scas2w_mv_constant_complex2
          call rep_scas2l_plain
          call rep_scas2l_allregs
          call rep_scas2l_constant_simple
          call rep_scas2l_constant_complex1
          call rep_scas2l_constant_complex2
          call rep_scas_seg_mv_plain
          call rep_scas_seg_mv_allregs
          call rep_scas_seg_mv_constant_simple
          call rep_scas_seg_mv_constant_complex1
          call rep_scas_seg_mv_constant_complex2
          call rep_scas_memchr_mv_plain
          call rep_scas_memchr_mv_allregs
          call rep_scas_memchr_mv_constant_simple
          call rep_scas_memchr_mv_constant_complex1
          call rep_scas_memchr_mv_constant_complex2
          call rep_cmps1_test_with_count_0_mv_plain
          call rep_cmps1_test_with_count_0_mv_allregs
          call rep_cmps1_test_with_count_0_mv_constant_simple
          call rep_cmps1_test_with_count_0_mv_constant_complex1
          call rep_cmps1_test_with_count_0_mv_constant_complex2
          call rep_cmps1_test_all_4bytes_differ_mv_plain
          call rep_cmps1_test_all_4bytes_differ_mv_allregs
          call rep_cmps1_test_all_4bytes_differ_mv_constant_simple
          call rep_cmps1_test_all_4bytes_differ_mv_constant_complex1
          call rep_cmps1_test_all_4bytes_differ_mv_constant_complex2
          call rep_cmps1_test_5th_byte_is_equal_mv_plain
          call rep_cmps1_test_5th_byte_is_equal_mv_allregs
          call rep_cmps1_test_5th_byte_is_equal_mv_constant_simple
          call rep_cmps1_test_5th_byte_is_equal_mv_constant_complex1
          call rep_cmps1_test_5th_byte_is_equal_mv_constant_complex2
          call rep_cmps2_test_with_count_0_mv_plain
          call rep_cmps2_test_with_count_0_mv_allregs
          call rep_cmps2_test_with_count_0_mv_constant_simple
          call rep_cmps2_test_with_count_0_mv_constant_complex1
          call rep_cmps2_test_with_count_0_mv_constant_complex2
          call rep_cmps2_test_all_4_bytes_are_equal_mv_plain
          call rep_cmps2_test_all_4_bytes_are_equal_mv_allregs
          call rep_cmps2_test_all_4_bytes_are_equal_mv_constant_simple
          call rep_cmps2_test_all_4_bytes_are_equal_mv_constant_complex1
          call rep_cmps2_test_all_4_bytes_are_equal_mv_constant_complex2
          call rep_cmps2_test_more_after_3_bytes_mv_plain
          call rep_cmps2_test_more_after_3_bytes_mv_allregs
          call rep_cmps2_test_more_after_3_bytes_mv_constant_simple
          call rep_cmps2_test_more_after_3_bytes_mv_constant_complex1
          call rep_cmps2_test_more_after_3_bytes_mv_constant_complex2
          call rep_cmps2_test_less_after_3_bytes_mv_plain
          call rep_cmps2_test_less_after_3_bytes_mv_allregs
          call rep_cmps2_test_less_after_3_bytes_mv_constant_simple
          call rep_cmps2_test_less_after_3_bytes_mv_constant_complex1
          call rep_cmps2_test_less_after_3_bytes_mv_constant_complex2
          call rep_lods_test_mv_plain
          call rep_lods_test_mv_allregs
          call rep_lods_test_mv_constant_simple
          call rep_lods_test_mv_constant_complex1
          call rep_lods_test_mv_constant_complex2
          call ret1_plain
          call ret1_allregs
          call ret1_constant_simple
          call ret1_constant_complex1
          call ret1_constant_complex2
          call ret2_mv_plain
          call ret2_mv_allregs
          call ret2_mv_constant_simple
          call ret2_mv_constant_complex1
          call ret2_mv_constant_complex2
          call ret3_mv_plain
          call ret3_mv_allregs
          call ret3_mv_constant_simple
          call ret3_mv_constant_complex1
          call ret3_mv_constant_complex2
          call ret4_mv_plain
          call ret4_mv_allregs
          call ret4_mv_constant_simple
          call ret4_mv_constant_complex1
          call ret4_mv_constant_complex2
          call ret_pop1_plain
          call ret_pop1_allregs
          call ret_pop1_constant_simple
          call ret_pop1_constant_complex1
          call ret_pop1_constant_complex2
          call ret_pop2_mv_plain
          call ret_pop2_mv_allregs
          call ret_pop2_mv_constant_simple
          call ret_pop2_mv_constant_complex1
          call ret_pop2_mv_constant_complex2
          call ret_pop3_mv_plain
          call ret_pop3_mv_allregs
          call ret_pop3_mv_constant_simple
          call ret_pop3_mv_constant_complex1
          call ret_pop3_mv_constant_complex2
          call ret_pop4_mv_plain
          call ret_pop4_mv_allregs
          call ret_pop4_mv_constant_simple
          call ret_pop4_mv_constant_complex1
          call ret_pop4_mv_constant_complex2
          call sahf_plain
          call sahf_allregs
          call sahf_constant_simple
          call sahf_constant_complex1
          call sahf_constant_complex2
          call sbb1_mv_plain
          call sbb1_mv_allregs
          call sbb1_mv_constant_simple_clear
          call sbb1_mv_constant_simple_set
          call sbb1_mv_constant_complex1
          call sbb1_mv_constant_complex2
          call sbb2_mv_plain
          call sbb2_mv_allregs
          call sbb2_mv_constant_simple_clear
          call sbb2_mv_constant_simple_set
          call sbb2_mv_constant_complex1
          call sbb2_mv_constant_complex2
          call sbb3_plain
          call sbb3_allregs
          call sbb3_constant_simple_clear
          call sbb3_constant_simple_set
          call sbb3_constant_complex1
          call sbb3_constant_complex2
          call sbb4_mv_plain
          call sbb4_mv_allregs
          call sbb4_mv_constant_simple_clear
          call sbb4_mv_constant_simple_set
          call sbb4_mv_constant_complex1
          call sbb4_mv_constant_complex2
          call sbb5_mv_plain
          call sbb5_mv_allregs
          call sbb5_mv_constant_simple_clear
          call sbb5_mv_constant_simple_set
          call sbb5_mv_constant_complex1
          call sbb5_mv_constant_complex2
          call sbb6_mv_plain
          call sbb6_mv_allregs
          call sbb6_mv_constant_simple_clear
          call sbb6_mv_constant_simple_set
          call sbb6_mv_constant_complex1
          call sbb6_mv_constant_complex2
          call sbb7_mv_plain
          call sbb7_mv_allregs
          call sbb7_mv_constant_simple_clear
          call sbb7_mv_constant_simple_set
          call sbb7_mv_constant_complex1
          call sbb7_mv_constant_complex2
          call sbb_locked_mv_plain
          call sbb_locked_mv_allregs
          call sbb_locked_mv_constant_simple
          call sbb_locked_mv_constant_complex1
          call sbb_locked_mv_constant_complex2
          call scas1_plain
          call scas1_allregs
          call scas1_constant_simple
          call scas1_constant_complex1
          call scas1_constant_complex2
          call scas2_mv_plain
          call scas2_mv_allregs
          call scas2_mv_constant_simple
          call scas2_mv_constant_complex1
          call scas2_mv_constant_complex2
          call scas3_plain
          call scas3_allregs
          call scas3_constant_simple
          call scas3_constant_complex1
          call scas3_constant_complex2
          call setcc_with_code_0_plain
          call setcc_with_code_0_allregs
          call setcc_with_code_0_constant_simple_clear
          call setcc_with_code_0_constant_simple_set
          call setcc_with_code_0_constant_complex1
          call setcc_with_code_0_constant_complex2
          call setcc_with_code_1_mv_plain
          call setcc_with_code_1_mv_allregs
          call setcc_with_code_1_mv_constant_simple_clear
          call setcc_with_code_1_mv_constant_simple_set
          call setcc_with_code_1_mv_constant_complex1
          call setcc_with_code_1_mv_constant_complex2
          call setcc_with_code_2_mv_plain
          call setcc_with_code_2_mv_allregs
          call setcc_with_code_2_mv_constant_simple_clear
          call setcc_with_code_2_mv_constant_simple_set
          call setcc_with_code_2_mv_constant_complex1
          call setcc_with_code_2_mv_constant_complex2
          call setcc_with_code_3_mv_plain
          call setcc_with_code_3_mv_allregs
          call setcc_with_code_3_mv_constant_simple_clear
          call setcc_with_code_3_mv_constant_simple_set
          call setcc_with_code_3_mv_constant_complex1
          call setcc_with_code_3_mv_constant_complex2
          call setcc_with_code_4_mv_plain
          call setcc_with_code_4_mv_allregs
          call setcc_with_code_4_mv_constant_simple_clear
          call setcc_with_code_4_mv_constant_simple_set
          call setcc_with_code_4_mv_constant_complex1
          call setcc_with_code_4_mv_constant_complex2
          call setcc_with_code_5_mv_plain
          call setcc_with_code_5_mv_allregs
          call setcc_with_code_5_mv_constant_simple_clear
          call setcc_with_code_5_mv_constant_simple_set
          call setcc_with_code_5_mv_constant_complex1
          call setcc_with_code_5_mv_constant_complex2
          call setcc_with_code_6_mv_plain
          call setcc_with_code_6_mv_allregs
          call setcc_with_code_6_mv_constant_simple_clear
          call setcc_with_code_6_mv_constant_simple_set
          call setcc_with_code_6_mv_constant_complex1
          call setcc_with_code_6_mv_constant_complex2
          call setcc_with_code_7_mv_plain
          call setcc_with_code_7_mv_allregs
          call setcc_with_code_7_mv_constant_simple_clear
          call setcc_with_code_7_mv_constant_simple_set
          call setcc_with_code_7_mv_constant_complex1
          call setcc_with_code_7_mv_constant_complex2
          call setcc_with_code_8_mv_plain
          call setcc_with_code_8_mv_allregs
          call setcc_with_code_8_mv_constant_simple_clear
          call setcc_with_code_8_mv_constant_simple_set
          call setcc_with_code_8_mv_constant_complex1
          call setcc_with_code_8_mv_constant_complex2
          call setcc_with_code_9_mv_plain
          call setcc_with_code_9_mv_allregs
          call setcc_with_code_9_mv_constant_simple_clear
          call setcc_with_code_9_mv_constant_simple_set
          call setcc_with_code_9_mv_constant_complex1
          call setcc_with_code_9_mv_constant_complex2
          call setcc_with_code_a_mv_plain
          call setcc_with_code_a_mv_allregs
          call setcc_with_code_a_mv_constant_simple_clear
          call setcc_with_code_a_mv_constant_simple_set
          call setcc_with_code_a_mv_constant_complex1
          call setcc_with_code_a_mv_constant_complex2
          call setcc_with_code_b_mv_plain
          call setcc_with_code_b_mv_allregs
          call setcc_with_code_b_mv_constant_simple_clear
          call setcc_with_code_b_mv_constant_simple_set
          call setcc_with_code_b_mv_constant_complex1
          call setcc_with_code_b_mv_constant_complex2
          call setcc_with_code_c_mv_plain
          call setcc_with_code_c_mv_allregs
          call setcc_with_code_c_mv_constant_simple_clear
          call setcc_with_code_c_mv_constant_simple_set
          call setcc_with_code_c_mv_constant_complex1
          call setcc_with_code_c_mv_constant_complex2
          call setcc_with_code_d_mv_plain
          call setcc_with_code_d_mv_allregs
          call setcc_with_code_d_mv_constant_simple_clear
          call setcc_with_code_d_mv_constant_simple_set
          call setcc_with_code_d_mv_constant_complex1
          call setcc_with_code_d_mv_constant_complex2
          call setcc_with_code_e_mv_plain
          call setcc_with_code_e_mv_allregs
          call setcc_with_code_e_mv_constant_simple_clear
          call setcc_with_code_e_mv_constant_simple_set
          call setcc_with_code_e_mv_constant_complex1
          call setcc_with_code_e_mv_constant_complex2
          call setcc_with_code_f_mv_plain
          call setcc_with_code_f_mv_allregs
          call setcc_with_code_f_mv_constant_simple_clear
          call setcc_with_code_f_mv_constant_simple_set
          call setcc_with_code_f_mv_constant_complex1
          call setcc_with_code_f_mv_constant_complex2
          call sgdt_plain
          call sgdt_allregs
          call sgdt_constant_simple
          call sgdt_constant_complex1
          call sgdt_constant_complex2
          call sidt_plain
          call sidt_allregs
          call sidt_constant_simple
          call sidt_constant_complex1
          call sidt_constant_complex2
          call shld1_plain
          call shld1_allregs
          call shld1_constant_simple
          call shld1_constant_complex1
          call shld1_constant_complex2
          call shld2_plain
          call shld2_allregs
          call shld2_constant_simple
          call shld2_constant_complex1
          call shld2_constant_complex2
          call shld3_plain
          call shld3_allregs
          call shld3_constant_simple
          call shld3_constant_complex1
          call shld3_constant_complex2
          call shld4_plain
          call shld4_allregs
          call shld4_constant_simple
          call shld4_constant_complex1
          call shld4_constant_complex2
          call shrd1_plain
          call shrd1_allregs
          call shrd1_constant_simple
          call shrd1_constant_complex1
          call shrd1_constant_complex2
          call shrd2_plain
          call shrd2_allregs
          call shrd2_constant_simple
          call shrd2_constant_complex1
          call shrd2_constant_complex2
          call shrd3_plain
          call shrd3_allregs
          call shrd3_constant_simple
          call shrd3_constant_complex1
          call shrd3_constant_complex2
          call shrd4_plain
          call shrd4_allregs
          call shrd4_constant_simple
          call shrd4_constant_complex1
          call shrd4_constant_complex2
          call sldt_plain
          call sldt_allregs
          call sldt_constant_simple
          call sldt_constant_complex1
          call sldt_constant_complex2
          call smsw_plain
          call smsw_allregs
          call smsw_constant_simple
          call smsw_constant_complex1
          call smsw_constant_complex2
          call stc_plain
          call stc_allregs
          call stc_constant_simple_clear
          call stc_constant_simple_set
          call stc_constant_complex1
          call stc_constant_complex2
          call std_plain
          call std_allregs
          call std_constant_simple
          call std_constant_complex1
          call std_constant_complex2
          call sti_plain
          call sti_allregs
          call sti_constant_simple
          call sti_constant_complex1
          call sti_constant_complex2
          call stos1_plain
          call stos1_allregs
          call stos1_constant_simple
          call stos1_constant_complex1
          call stos1_constant_complex2
          call stos2_mv_plain
          call stos2_mv_allregs
          call stos2_mv_constant_simple
          call stos2_mv_constant_complex1
          call stos2_mv_constant_complex2
          call stos3_plain
          call stos3_allregs
          call stos3_constant_simple
          call stos3_constant_complex1
          call stos3_constant_complex2
          call str_plain
          call str_allregs
          call str_constant_simple
          call str_constant_complex1
          call str_constant_complex2
          call sub1_mv_plain
          call sub1_mv_allregs
          call sub1_mv_constant_simple
          call sub1_mv_constant_complex1
          call sub1_mv_constant_complex2
          call sub2_mv_plain
          call sub2_mv_allregs
          call sub2_mv_constant_simple
          call sub2_mv_constant_complex1
          call sub2_mv_constant_complex2
          call sub3_mv_plain
          call sub3_mv_allregs
          call sub3_mv_constant_simple
          call sub3_mv_constant_complex1
          call sub3_mv_constant_complex2
          call sub4_mv_plain
          call sub4_mv_allregs
          call sub4_mv_constant_simple
          call sub4_mv_constant_complex1
          call sub4_mv_constant_complex2
          call sub5_plain
          call sub5_allregs
          call sub5_constant_simple
          call sub5_constant_complex1
          call sub5_constant_complex2
          call sub6_mv_plain
          call sub6_mv_allregs
          call sub6_mv_constant_simple
          call sub6_mv_constant_complex1
          call sub6_mv_constant_complex2
          call sub7_mv_plain
          call sub7_mv_allregs
          call sub7_mv_constant_simple
          call sub7_mv_constant_complex1
          call sub7_mv_constant_complex2
          call sub_locked_mv_plain
          call sub_locked_mv_allregs
          call sub_locked_mv_constant_simple
          call sub_locked_mv_constant_complex1
          call sub_locked_mv_constant_complex2
          call sub_ft_0_mv_plain
          call sub_ft_0_mv_allregs
          call sub_ft_0_mv_constant_simple
          call sub_ft_0_mv_constant_complex1
          call sub_ft_0_mv_constant_complex2
          call sub_ft_1_mv_plain
          call sub_ft_1_mv_allregs
          call sub_ft_1_mv_constant_simple
          call sub_ft_1_mv_constant_complex1
          call sub_ft_1_mv_constant_complex2
          call sub_ft_2_mv_plain
          call sub_ft_2_mv_allregs
          call sub_ft_2_mv_constant_simple
          call sub_ft_2_mv_constant_complex1
          call sub_ft_2_mv_constant_complex2
          call sub_ft_3_mv_plain
          call sub_ft_3_mv_allregs
          call sub_ft_3_mv_constant_simple
          call sub_ft_3_mv_constant_complex1
          call sub_ft_3_mv_constant_complex2
          call sub_ft_4_mv_plain
          call sub_ft_4_mv_allregs
          call sub_ft_4_mv_constant_simple
          call sub_ft_4_mv_constant_complex1
          call sub_ft_4_mv_constant_complex2
          call sub_ft_5_mv_plain
          call sub_ft_5_mv_allregs
          call sub_ft_5_mv_constant_simple
          call sub_ft_5_mv_constant_complex1
          call sub_ft_5_mv_constant_complex2
          call sub_ft_6_mv_plain
          call sub_ft_6_mv_allregs
          call sub_ft_6_mv_constant_simple
          call sub_ft_6_mv_constant_complex1
          call sub_ft_6_mv_constant_complex2
          call sub_ft_7_mv_plain
          call sub_ft_7_mv_allregs
          call sub_ft_7_mv_constant_simple
          call sub_ft_7_mv_constant_complex1
          call sub_ft_7_mv_constant_complex2
          call test1_mv_plain
          call test1_mv_allregs
          call test1_mv_constant_simple
          call test1_mv_constant_complex1
          call test1_mv_constant_complex2
          call test2_mv_plain
          call test2_mv_allregs
          call test2_mv_constant_simple
          call test2_mv_constant_complex1
          call test2_mv_constant_complex2
          call test3_plain
          call test3_allregs
          call test3_constant_simple
          call test3_constant_complex1
          call test3_constant_complex2
          call test4_mv_plain
          call test4_mv_allregs
          call test4_mv_constant_simple
          call test4_mv_constant_complex1
          call test4_mv_constant_complex2
          call test5_mv_plain
          call test5_mv_allregs
          call test5_mv_constant_simple
          call test5_mv_constant_complex1
          call test5_mv_constant_complex2
          call test6_mv_plain
          call test6_mv_allregs
          call test6_mv_constant_simple
          call test6_mv_constant_complex1
          call test6_mv_constant_complex2
          call test7_mv_plain
          call test7_mv_allregs
          call test7_mv_constant_simple
          call test7_mv_constant_complex1
          call test7_mv_constant_complex2
          call test8_mv_plain
          call test8_mv_allregs
          call test8_mv_constant_simple
          call test8_mv_constant_complex1
          call test8_mv_constant_complex2
          call test9_mv_plain
          call test9_mv_allregs
          call test9_mv_constant_simple
          call test9_mv_constant_complex1
          call test9_mv_constant_complex2
          call verr_plain
          call verr_allregs
          call verr_constant_simple
          call verr_constant_complex1
          call verr_constant_complex2
          call verw_plain
          call verw_allregs
          call verw_constant_simple
          call verw_constant_complex1
          call verw_constant_complex2
          call wait_plain
          call wait_allregs
          call wait_constant_simple
          call wait_constant_complex1
          call wait_constant_complex2
          call xchg1_plain
          call xchg1_allregs
          call xchg1_constant_simple
          call xchg1_constant_complex1
          call xchg1_constant_complex2
          call xchg2_plain
          call xchg2_allregs
          call xchg2_constant_simple
          call xchg2_constant_complex1
          call xchg2_constant_complex2
          call xchg3_mv_plain
          call xchg3_mv_allregs
          call xchg3_mv_constant_simple
          call xchg3_mv_constant_complex1
          call xchg3_mv_constant_complex2
          call xchg4_mv_plain
          call xchg4_mv_allregs
          call xchg4_mv_constant_simple
          call xchg4_mv_constant_complex1
          call xchg4_mv_constant_complex2
          call xchg5_mv_plain
          call xchg5_mv_allregs
          call xchg5_mv_constant_simple
          call xchg5_mv_constant_complex1
          call xchg5_mv_constant_complex2
          call xchg_locked_mv_plain
          call xchg_locked_mv_allregs
          call xchg_locked_mv_constant_simple
          call xchg_locked_mv_constant_complex1
          call xchg_locked_mv_constant_complex2
          call xlat1_plain
          call xlat1_allregs
          call xlat1_constant_simple
          call xlat1_constant_complex1
          call xlat1_constant_complex2
          call xlat2_mv_plain
          call xlat2_mv_allregs
          call xlat2_mv_constant_simple
          call xlat2_mv_constant_complex1
          call xlat2_mv_constant_complex2
          call xor1_mv_plain
          call xor1_mv_allregs
          call xor1_mv_constant_simple
          call xor1_mv_constant_complex1
          call xor1_mv_constant_complex2
          call xor2_mv_plain
          call xor2_mv_allregs
          call xor2_mv_constant_simple
          call xor2_mv_constant_complex1
          call xor2_mv_constant_complex2
          call xor3_mv_plain
          call xor3_mv_allregs
          call xor3_mv_constant_simple
          call xor3_mv_constant_complex1
          call xor3_mv_constant_complex2
          call xor4_mv_plain
          call xor4_mv_allregs
          call xor4_mv_constant_simple
          call xor4_mv_constant_complex1
          call xor4_mv_constant_complex2
          call xor5_plain
          call xor5_allregs
          call xor5_constant_simple
          call xor5_constant_complex1
          call xor5_constant_complex2
          call xor6_mv_plain
          call xor6_mv_allregs
          call xor6_mv_constant_simple
          call xor6_mv_constant_complex1
          call xor6_mv_constant_complex2
          call xor7_mv_plain
          call xor7_mv_allregs
          call xor7_mv_constant_simple
          call xor7_mv_constant_complex1
          call xor7_mv_constant_complex2
          call xor8_mv_plain
          call xor8_mv_allregs
          call xor8_mv_constant_simple
          call xor8_mv_constant_complex1
          call xor8_mv_constant_complex2
          call xor9_mv_plain
          call xor9_mv_allregs
          call xor9_mv_constant_simple
          call xor9_mv_constant_complex1
          call xor9_mv_constant_complex2
          call xor_locked_mv_plain
          call xor_locked_mv_allregs
          call xor_locked_mv_constant_simple
          call xor_locked_mv_constant_complex1
          call xor_locked_mv_constant_complex2
         .size   callAll, .-callAll
