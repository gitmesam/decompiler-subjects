# _mv stands for minor variant

aaa[in=flags al ah,out=al ah]: hex 37

aad1[in=al ah,out=al ah]: hex d5 0a
aad2[in=al ah,out=al ah]: hex d5 0f

aam1[in=al,out=al ah]: hex d4 0a
aam2[in=al,out=al ah]: hex d4 0f

aas[in=flags al ah,out=al ah]: hex 3f

adc1_mv[in=flags al,out=al]: adc $0x10,%al
adc2_mv[in=flags ax,out=ax]: adc $0x10,%ax
adc2a_mv[in=flags ax,out=ax]: hex 66 15 10 00
adc3[in=flags eax,out=eax]: adc $0x10,%eax
adc3a_mv[in=flags eax,out=eax]: hex 15 10 00 00 00
adc4_mv[doNotEval,in=flags eax ebp,out=eax]: adc 8(%ebp), %eax
adc_locked_mv[doNotEval]: hex f0 13 45 08

add1[in=al,out=al]: hex 04 02
add2_mv[in=al,out=al]: hex 04 fe
add3_mv[in=ax,out=ax]: hex 66 05 02 00
add4_mv[in=ax,out=ax]: hex 66 05 fe ff
add5[in=eax,out=eax]: hex 05 02 00 00 00
add6[in=eax,out=eax]: hex 05 fe ff ff ff
add7_mv[doNotEval,in=eax ebp,out=eax]: addl 8(%ebp), %eax
add8_mv[in=al,out=eax]: add $0x2, %ah
add9_mv[in=ax,out=eax]: add $0x2, %ax
add10_mv[in=al,out=ax]: add $0x2, %al
add11_mv[in=ah,out=ax]: add $0x2, %ah
add12_mv[in=ax,out=eax]: add $0x2, %ax
add_locked_mv[doNotEval]: hex f0 03 45 08
add_ft_0_mv: mov $0x01,%al; mov $0x01,%bl; add %al,%bl
add_ft_1_mv: mov $0x7f,%al; mov $0x01,%bl; add %al,%bl
add_ft_2_mv: mov $0x01,%al; mov $0xff,%bl; add %al,%bl
add_ft_3_mv: mov $0x01,%al; mov $0xfe,%bl; add %al,%bl
add_ft_4_mv: mov $0xff,%al; mov $0x01,%bl; add %al,%bl
add_ft_5_mv: mov $0xfe,%al; mov $0x01,%bl; add %al,%bl
add_ft_6_mv: mov $0x80,%al; mov $0x80,%bl; add %al,%bl
add_ft_7_mv: mov $0xff,%al; mov $0xff,%bl; add %al,%bl

and1[in=al,out=al]: hex 24 02
and2_mv[in=al,out=al]: hex 24 fe
and3_mv[in=ax,out=ax]: hex 66 25 02 00
and4_mv[in=ax,out=ax]: hex 66 25 fe ff
and5[in=eax,out=eax]: hex 25 02 00 00 00
and6_mv[in=eax,out=eax]: hex 25 fe ff ff ff
and7_mv[doNotEval,in=eax ebp,out=eax]: andl 8(%ebp), %eax
and_locked_mv[doNotEval]: hex f0 23 45 08

arpl[in=ax bx,out=]: arpl %ax, %bx

bound1_mv[doNotEval,in=ax bx,out=]: bound %ax,(%bx)
bound2[doNotEval,in=eax ebx,out=]: bound %eax,(%ebx)

bsf1_mv[in=bx,out=ax]: bsf %bx,%ax
bsf2[in=ebx,out=eax]: bsf %ebx,%eax
bsf3_mv[in=bx,out=ax]: bsf %bx,%ax
bsf4_mv[in=ebx,out=eax]: bsf %ebx,%eax
bsf5_mv[doNotEval,in=bx,out=ax]: bsf (%bx),%ax
bsf6_mv[doNotEval,in=ebx,out=eax]: bsf (%ebx),%eax
bsf7_mv[doNotEval,in=bx,out=eax]: bsf (%bx),%eax
bsf8_mv[doNotEval,in=ebx,out=eax]: bsf (%ebx),%ax

bsr1_mv[in=bx,out=ax]: bsr %bx,%ax
bsr2[in=ebx,out=eax]: bsr %ebx,%eax
bsr3_mv[in=bx,out=ax]: bsr %bx,%ax
bsr4_mv[in=ebx,out=eax]: bsr %ebx,%eax
bsr5_mv[doNotEval,in=bx,out=ax]: bsr (%bx),%ax
bsr6_mv[doNotEval,in=ebx,out=eax]: bsr (%ebx),%eax
bsr7_mv[doNotEval,in=bx,out=ax]: bsr (%bx),%eax
bsr8_mv[doNotEval,in=ebx,out=ax]: bsr (%ebx),%ax

bt1_mv[in=ax,out=]: bt $4,%ax
bt2_mv[in=ax bx,out=]: bt %bx,%ax
bt3[in=eax,out=]: bt $31,%eax
bt4_mv[in=eax ebx,out=]: bt %ebx,%eax
bt5_mv[doNotEval,in=eax ebx,out=]: bt %ebx,(%eax)

btc1_mv[in=ax,out=ax]: btc $4,%ax
btc2_mv[in=ax bx,out=ax]: btc %bx,%ax
btc3[in=eax,out=eax]: btc $31,%eax
btc4_mv[in=eax ebx,out=eax]: btc %ebx,%eax
btc5_mv[doNotEval,in=eax ebx,out=]: btc %ebx,(%eax)
btc_locked_mv[doNotEval]: lock btc %ebx,(%eax)

btr1_mv[in=ax,out=ax]: btr $4,%ax
btr2_mv[in=ax bx,out=ax]: btr %bx,%ax
btr3[in=eax,out=eax]: btr $31,%eax
btr4_mv[in=eax ebx,out=eax]: btr %ebx,%eax
btr5_mv[doNotEval,in=eax ebx,out=]: btr %ebx,(%eax)
btr_locked_mv[doNotEval]: lock btr %ebx,(%eax)

bts1_mv[in=ax,out=ax]: bts $4,%ax
bts2_mv[in=ax bx,out=ax]: bts %bx,%ax
bts3[in=eax,out=eax]: bts $31,%eax
bts4_mv[in=eax ebx,out=eax]: bts %ebx,%eax
bts5_mv[doNotEval,in=eax ebx,out=]: bts %ebx,(%eax)
bts_locked_mv[doNotEval]: lock bts %ebx,(%eax)

call1_mv[doNotEval]: hex e8 fb ff ff ff
call2[doNotEval]: call call2_plain
call3_mv[doNotEval]: call malloc
#call4: call 0x1234
call5_mv[doNotEval,in=eax,out=]: call *%eax
call6_mv[doNotEval,in=eax,out=]: call *(%eax)

cbw1[in=ax,out=eax]: hex 98
cbw2[in=al,out=ax]: hex 66 98

clc[in=flags,out=]: clc

cld: cld

cli[doNotEval]: cli

clts[doNotEval]: clts

cmc[in=flags,out=]: cmc

cmp1_mv[in=al,out=]: hex 3c 02
cmp2_mv[in=al,out=]: hex 3c fe
cmp3_mv[in=ax,out=]: hex 66 3d 02 00
cmp4_mv[in=ax,out=]: hex 66 3d fe ff
cmp5[in=eax,out=]: hex 3d 02 00 00 00
cmp6_mv[in=eax,out=]: hex 3d fe ff ff ff
cmp7_mv[doNotEval,in=eax ebp,out=]: cmpl 8(%ebp), %eax
cmp8_mv[doNotEval,in=eax ebp,out=]: cmpl $100, 7(%eax,%ebp)

cmps1[doNotEval,in=edi esi,out=]: hex a6
cmps2_mv[doNotEval,in=di si,out=]: hex 67 a6
cmps3[doNotEval,in=edi esi,out=]: hex a7
cmps4_mv[doNotEval,in=edi esi,out=]: hex 66 a7
cmps5_mv[doNotEval,in=di si,out=]: hex 66 67 a7
cmps6_mv[doNotEval,in=di si,out=]: hex 67 a7

cmps_seg_mv[doNotEval]: hex 36 67 a7

cwd1[in=eax,out=eax edx]: hex 99
cwd2[in=ax,out=ax dx]: hex 66 99

daa[in=flags al,out=al]: daa

das[in=flags al,out=al]: das

dec1_mv[in=al,out=al]: dec %al
dec2_mv[in=ax,out=ax]: dec %ax
dec3_mv[in=ah,out=ah]: dec %ah
dec4[in=eax,out=eax]: dec %eax
dec5b_mv[doNotEval,in=eax,out=]: decb (%eax)
dec5w_mv[doNotEval,in=eax,out=]: decw (%eax)
dec5l_mv[doNotEval,in=eax,out=]: decl (%eax)
dec_locked_mv[doNotEval]: lock decl (%eax)

div1[in=ax bl,out=al ah]: div %bl,%al
div2[in=ax ax bx,out=ax dx]: div %bp,%ax
div3[in=eax edx ebx,out=eax edx]: div %edi,%eax
div4_mv[doNotEval,in=ax ebx,out=al ah]: divb 0x1234(%ebx),%al

enter1[doNotEval]: hex c8 34 12 00
enter2_mv[doNotEval]: hex c8 34 12 01
enter3_mv[doNotEval]: hex c8 34 12 55

hlt[doNotEval]: hlt

idiv1[in=ax bl,out=al ah,overwrite:1:eax:0xa3b11984,overwrite:2:eax:0xa3b1f978]: idiv %cl,%al
idiv2[in=ax dx bx,out=ax dx,overwrite:0:ecx:0xf3,overwrite:1:edx:0xf9b2]: idiv %cx,%ax
idiv3[in=eax edx ebx,out=eax edx,overwrite:0:ecx:0xfe3f6cb2,overwrite:1:ecx:0x7e3f6cb2,overwrite:2:edx:0x1e6925b3,overwrite:2:ecx:0x73af6cb2]: idiv %ecx,%eax

imul_one_op1[in=al bl,out=ax]: imul %bl
imul_one_op2[in=ax bx,out=ax dx]: imul %bx
imul_one_op3[in=eax ebx,out=eax edx]: imul %ebx
imul_one_op4_mv[doNotEval,in=ax ebx,out=]: imulw (%ebx)

imul_two_op1[in=bx cx,out=cx]: imul %bx,%cx
imul_two_op2[in=ebx ecx,out=ecx]: imul %ebx,%ecx
imul_two_op3_mv[doNotEval,in=ebx ecx,out=ecx]: imul (%ebx),%ecx

imul_three_op1[in=bx cx,out=cx]: imul $10,%bx,%cx
imul_three_op2[in=ebx ecx,out=ecx]: imul $10,%ebx,%ecx
imul_three_op3_mv[doNotEval,in=ebx ecx,out=ecx]: imul $10,(%ebx),%ecx

in1[doNotEval,in=,out=al]: hex e4 12
in2_mv[doNotEval,in=,out=ax]: hex 66 e5 12
in3[doNotEval,in=,out=eax]: hex e5 12
in4[doNotEval,in=dx,out=al]: hex ec
in5_mv[doNotEval,in=dx,out=ax]: hex 66 ed
in6_mv[doNotEval,in=dx,out=eax]: hex ed

inc1_mv[in=al,out=al]: inc %al
inc2_mv[in=ax,out=ax]: inc %ax
inc3_mv[in=ah,out=ah]: inc %ah
inc4[doNotEval,in=eax,out=eax]: inc %eax
inc5b_mv[doNotEval,in=eax,out=]: incb (%eax)
inc5w_mv[doNotEval,in=eax,out=]: incw (%eax)
inc5l_mv[doNotEval,in=eax,out=]: incl (%eax)
inc_locked_mv[doNotEval]: lock incl (%eax)

ins1[doNotEval,in=edi df dx,out=edi]: hex 6c
ins2_mv[doNotEval,in=edi df dx,out=edi]: hex 66 6d
ins3[doNotEval,in=edi df dx,out=edi]: hex 6d

int1_mv[doNotEval]: hex cc
int2_mv[doNotEval]: hex cd 12
int3_mv[doNotEval]: hex ce

iret1[doNotEval]: hex cf
iret2_mv[doNotEval]: hex 66 cf

# Prefix each line with "3c 02" which is "cmp $0x2,%al" the jump jumps between two nops (0x90)
jcc_short_with_code_0[in=flags,out=al noflags]: hex b0 01 70 02 b0 00 90
jcc_short_with_code_1_mv[in=flags,out=al noflags]: hex b0 01 71 02 b0 00 90
jcc_short_with_code_2_mv[in=flags,out=al noflags]: hex b0 01 72 02 b0 00 90
jcc_short_with_code_3_mv[in=flags,out=al noflags]: hex b0 01 73 02 b0 00 90
jcc_short_with_code_4_mv[in=flags,out=al noflags]: hex b0 01 74 02 b0 00 90
jcc_short_with_code_5_mv[in=flags,out=al noflags]: hex b0 01 75 02 b0 00 90
jcc_short_with_code_6_mv[in=flags,out=al noflags]: hex b0 01 76 02 b0 00 90
jcc_short_with_code_7_mv[in=flags,out=al noflags]: hex b0 01 77 02 b0 00 90
jcc_short_with_code_8_mv[in=flags,out=al noflags]: hex b0 01 78 02 b0 00 90
jcc_short_with_code_9_mv[in=flags,out=al noflags]: hex b0 01 79 02 b0 00 90
jcc_short_with_code_a_mv[in=flags,out=al noflags]: hex b0 01 7a 02 b0 00 90
jcc_short_with_code_b_mv[in=flags,out=al noflags]: hex b0 01 7b 02 b0 00 90
jcc_short_with_code_c_mv[in=flags,out=al noflags]: hex b0 01 7c 02 b0 00 90
jcc_short_with_code_d_mv[in=flags,out=al noflags]: hex b0 01 7d 02 b0 00 90
jcc_short_with_code_e_mv[in=flags,out=al noflags]: hex b0 01 7e 02 b0 00 90
jcc_short_with_code_f_mv[in=flags,out=al noflags]: hex b0 01 7f 02 b0 00 90

jcc_long_with_code_0[in=flags,out=al noflags]: hex b0 01 0f 80 02 00 00 00 b0 00 90
jcc_long_with_code_1_mv[in=flags,out=al noflags]: hex b0 01 0f 81 02 00 00 00 b0 00 90
jcc_long_with_code_2_mv[in=flags,out=al noflags]: hex b0 01 0f 82 02 00 00 00 b0 00 90
jcc_long_with_code_3_mv[in=flags,out=al noflags]: hex b0 01 0f 83 02 00 00 00 b0 00 90
jcc_long_with_code_4_mv[in=flags,out=al noflags]: hex b0 01 0f 84 02 00 00 00 b0 00 90
jcc_long_with_code_5_mv[in=flags,out=al noflags]: hex b0 01 0f 85 02 00 00 00 b0 00 90
jcc_long_with_code_6_mv[in=flags,out=al noflags]: hex b0 01 0f 86 02 00 00 00 b0 00 90
jcc_long_with_code_7_mv[in=flags,out=al noflags]: hex b0 01 0f 87 02 00 00 00 b0 00 90
jcc_long_with_code_8_mv[in=flags,out=al noflags]: hex b0 01 0f 88 02 00 00 00 b0 00 90
jcc_long_with_code_9_mv[in=flags,out=al noflags]: hex b0 01 0f 89 02 00 00 00 b0 00 90
jcc_long_with_code_a_mv[in=flags,out=al noflags]: hex b0 01 0f 8a 02 00 00 00 b0 00 90
jcc_long_with_code_b_mv[in=flags,out=al noflags]: hex b0 01 0f 8b 02 00 00 00 b0 00 90
jcc_long_with_code_c_mv[in=flags,out=al noflags]: hex b0 01 0f 8c 02 00 00 00 b0 00 90
jcc_long_with_code_d_mv[in=flags,out=al noflags]: hex b0 01 0f 8d 02 00 00 00 b0 00 90
jcc_long_with_code_e_mv[in=flags,out=al noflags]: hex b0 01 0f 8e 02 00 00 00 b0 00 90
jcc_long_with_code_f_mv[in=flags,out=al noflags]: hex b0 01 0f 8f 02 00 00 00 b0 00 90

jcxz[in=cx,out=al noflags]: hex b0 01 67 e3 02 b0 00 90
jecxz[in=ecx,out=al noflags]: hex b0 01 e3 02 b0 00 90

jecxz_test_none_mv[in=ecx,out=al noflags]: hex b9 00 00 01 00 b0 01 e3 02 b0 00 90
jecxz_test_66_mv[in=ecx,out=al noflags]: hex b9 00 00 01 00 b0 01 66 e3 02 b0 00 90
jecxz_test_67_mv[in=ecx,out=al noflags]: hex b9 00 00 01 00 b0 01 67 e3 02 b0 00 90
# Fails at runtime
#jecxz_test_66_67_mv[in=ecx,out=al noflags]: hex b9 00 00 01 00 b0 01 66 67 e3 02 b0 00 90

jmp1: hex eb 01 40 40
jmp2_mv: hex e9 01 00 00 00 40 40
jmp3_mv[doNotEval]: hex ff 23

lahf[in=flags,out=ah]: lahf

lar: lar %ax,%ebx

lea1[in=ebx,out=eax]: lea 0x42(%ebx),%eax
lea2_mv[in=ebx,out=ax]: hex 66 8d 43 42

leave1[doNotEval]: hex c9
leave2_mv[doNotEval]: hex 66 c9

lgdtl[doNotEval]: lgdtl (%eax)
lidtl[doNotEval]: lidtl (%eax)

lds1[doNotEval]: lds (%ecx),%edx
lds2_mv[doNotEval]: lds (%ecx),%dx
les1[doNotEval]: les (%ecx),%edx
les2_mv[doNotEval]: les (%ecx),%dx
lfs1[doNotEval]: lfs (%ecx),%edx
lfs2_mv[doNotEval]: lfs (%ecx),%dx
lgs1[doNotEval]: lgs (%ecx),%edx
lgs2_mv[doNotEval]: lgs (%ecx),%dx
lss1[doNotEval]: lss (%ecx),%edx
lss2_mv[doNotEval]: lss (%ecx),%dx

lldt[doNotEval]: lldt (%eax)

lmsw[doNotEval]: lmsw (%eax)

lods1[doNotEval,in=esi df,out=esi al]: hex ac
lods2_mv[doNotEval,in=esi df,out=esi ax]: hex 66 ad
lods3[doNotEval,in=esi df,out=esi eax]: hex ad
lods_seg_mv[doNotEval]: hex 36 ad

loop_type_0[in=eax ecx,out=eax ecx]: hex 40 e0 fd
loop_type_0w_mv[in=eax cx,out=eax cx]: hex 40 67 e0 fc
loop_type_1[in=eax ecx,out=eax ecx]: hex 40 e1 fd
loop_type_1w_mv[in=eax cx,out=eax cx]: hex 40 67 e1 fc
loop_type_2[in=eax ecx,out=eax ecx]: hex 40 e2 fd
loop_type_2w_mv[in=eax cx,out=eax cx]: hex 40 67 e2 fc

lsl[doNotEval]: lsl (%eax),%ebx

ltr[doNotEval]: ltr %bx

mov_b1[in=bh,out=cl]: mov %bh,%cl
mov_b2_mv[in=al,out=cl]: mov %al,%cl
mov_b3_mv[in=cl,out=al]: mov %cl,%al
mov_b4_mv[in=,out=cl]: mov $0x10,%cl
mov_b5_mv[in=,out=al]: mov $0x10,%al
mov_b6_mv[doNotEval,in=ah ebx,out=]: mov %ah,(%ebx)
mov_b7_mv[doNotEval,in=ebx,out=ah]: mov (%ebx),%ah

mov_w1[in=ax,out=cx]: mov %ax,%cx
mov_w2_mv[in=,out=ax]: mov $0x10,%ax
mov_w3_mv[doNotEval,in=ax ebx,out=]: mov %ax,(%ebx)
mov_w4_mv[doNotEval,in=ebx,out=ax]: mov (%ebx),%ax

mov_l1[in=eax,out=ecx]: mov %eax,%ecx
mov_l2_mv[in=,out=eax]: mov $0x10,%eax
mov_l3_mv[doNotEval,in=eax ebx,out=]: mov %eax,(%ebx)
mov_l4_mv[doNotEval,in=ebx,out=eax]: mov (%ebx),%eax

mov_from_cr_mv[doNotEval]: mov %cr4,%eax
mov_to_cr_mv[doNotEval]: mov %eax,%cr4
mov_from_dr_mv[doNotEval]: mov %dr4,%eax
mov_to_dr_mv[doNotEval]: mov %eax,%dr4
mov_from_tr_mv[doNotEval]: mov %tr6,%eax
mov_to_tr_mv[doNotEval]: mov %eax,%tr6

movs1[doNotEval,in=esi edi df,out=esi edi]: hex a4
movs2_mv[doNotEval,in=esi edi df,out=esi edi]: hex 66 a5
movs3[doNotEval,in=esi edi df,out=esi edi]: hex a5
movs_seg_mv[doNotEval]: hex 36 a5

movsx1[in=al,out=cx]: movsx %al,%cx
movsx2[in=ax,out=ecx]: movsx %ax,%ecx
movsx3[in=al,out=ecx]: movsx %al,%ecx

movzx1[in=al,out=cx]: movzx %al,%cx
movzx2[in=ax,out=ecx]: movzx %ax,%ecx
movzx3[in=al,out=ecx]: movzx %al,%ecx

mul1[in=al bl,out=ax]: mul %bl
mul2[in=ax bx,out=ax dx]: mul %bx
mul3[in=eax ebx,out=eax edx]: mul %ebx

neg1_mv[in=al,out=al]: neg %bl
neg2_mv[in=bx,out=bx]: neg %bx
neg3[in=ebx,out=ebx]: neg %ebx
neg4a_zero_mv: mov $0,%al; neg %al
neg4b_1_mv: mov $1,%al; neg %al
neg4c_80_mv: mov $0x80,%al; neg %al
neg4d_m1_mv: mov $0xff,%al; neg %al
neg5_mv: mov $0x80,%al; neg %al; sets %bl
neg_locked_mv[doNotEval]: lock negl (%ebx)

nop1: hex 90
nop2_mv: hex 66 90
nop3_mv: hex 0f 1f 00
nop4_mv: hex 0f 1f 40 00
nop5_mv: hex 0f 1f 44 00 00
nop6_mv: hex 66 0f 1f 44 00 00
nop7_mv: hex 0f 1f 80 00 00 00 00

not1_mv[in=bl,out=bl]: not %bl
not2_mv[in=bx,out=bx]: not %bx
not3[in=ebx,out=ebx]: not %ebx
not_locked_mv[doNotEval]: lock notl (%ebx)

or1_mv[in=al,out=al]: hex 0c 02
or2_mv[in=al,out=al]: hex 0c fe
or3_mv[in=ax,out=ax]: hex 66 0d 02 00
or4_mv[in=ax,out=ax]: hex 66 0d fe ff
or5[in=eax,out=eax]: hex 0d 02 00 00 00
or6_mv[in=eax,out=eax]: hex 0d fe ff ff ff
or7_mv[doNotEval,in=eax ebp,out=eax]: orl 8(%ebp), %eax
or8_mv[in=eax,out=eax]: orl $0x02,%eax
or9_mv[in=eax,out=eax]: orl $0xf2,%eax
or_locked_mv[doNotEval]: hex f0 0b 45 08

out1[doNotEval,in=al,out=]: hex e6 12
out2_mv[doNotEval,in=ax,out=]: hex 66 e7 12
out3[doNotEval,in=eax,out=]: hex e7 12
out4[doNotEval,in=al dx,out=]: hex ee
out5_mv[doNotEval,in=ax dx,out=]: hex 66 ef
out6_mv[doNotEval,in=eax dx,out=]: hex ef

outs1[doNotEval,in=dx al esi,out=esi]: hex 6e
outs2_mv[doNotEval,in=dx ax esi,out=esi]: hex 66 6f
outs3[doNotEval,in=dx eax esi,out=esi]: hex 6f

pop1_mv[doNotEval]: popw (%eax)
pop2_mv[doNotEval]: pop (%eax)
pop3_mv: push %bx;pop %ax
pop4: push %ebx;pop %eax
pop_seg1_mv[doNotEval]: push %bx;pop %ds
pop_seg2_mv[doNotEval]: push %bx;pop %es
pop_seg3_mv[doNotEval]: push %bx;pop %fs
pop_seg4_mv[doNotEval]: push %bx;pop %gs
pop_seg5_mv[doNotEval]: push %bx;pop %ss

popa1: pushl $1;pushl $2;pushl $3;pushl $4;pushl $5;pushl $6;pushl $7;pushl $8;popa
popa2_mv: pushw $1;pushw $2;pushw $3;pushw $4;pushw $5;pushw $6;pushw $7;pushw $8;popaw

popf1: pushl $0;popf
popf2: pushw $0;popfw

push1_mv[doNotEval]: pushw (%eax);add $2,%esp
push2_mv[doNotEval]: push (%eax);add $4,%esp
push3_mv: push %ax;add $2,%esp
push4_mv: push %eax;add $4,%esp
push4_effect: push %eax;mov (%esp),%ebx;pop %ecx
push5_mv: push $0x11;add $4,%esp
push6_mv: push $0x1122;add $4,%esp
push7_mv: push $0x11223344;add $4,%esp
push_seg1_mv: push %ds;add $4,%esp
push_seg2_mv: push %es;add $4,%esp
push_seg3_mv: push %fs;add $4,%esp
push_seg4_mv: push %gs;add $4,%esp
push_seg5_mv: push %ss;add $4,%esp

array:l_esp:.long 0

pusha1: mov %esp,(l_esp);pusha;mov (l_esp),%esp
pusha2_mv: pushaw;add $16,%esp

pushf1: pushf;mov (%esp),%ebx;pop %eax
pushf2: pushfw;mov (%esp),%bx;pop %ax

rotate_once_rol_b_mv[in=eax,out=]: hex d0 c0
rotate_once_rol_w_mv[in=eax,out=]: hex 66 d1 c0
rotate_once_rol_l[in=eax,out=]: hex d1 c0
rotate_once_ror_b_mv[in=eax,out=]: hex d0 c8
rotate_once_ror_w_mv[in=eax,out=]: hex 66 d1 c8
rotate_once_ror_l[in=eax,out=]: hex d1 c8
rotate_once_rcl_b_mv[in=eax,out=]: hex d0 d0
rotate_once_rcl_w_mv[in=eax,out=]: hex 66 d1 d0
rotate_once_rcl_l[in=eax,out=]: hex d1 d0
rotate_once_rcr_b_mv[in=eax,out=]: hex d0 d8
rotate_once_rcr_w_mv[in=eax,out=]: hex 66 d1 d8
rotate_once_rcr_l[in=eax,out=]: hex d1 d8
rotate_once_shl_b_mv[in=eax,out=]: hex d0 e0
rotate_once_shl_w_mv[in=eax,out=]: hex 66 d1 e0
rotate_once_shl_l[in=eax,out=]: hex d1 e0
rotate_once_shr_b_mv[in=eax,out=]: hex d0 e8
rotate_once_shr_w_mv[in=eax,out=]: hex 66 d1 e8
rotate_once_shr_l[in=eax,out=]: hex d1 e8
rotate_once_sar_b_mv[in=eax,out=]: hex d0 f8
rotate_once_sar_w_mv[in=eax,out=]: hex 66 d1 f8
rotate_once_sar_l[in=eax,out=]: hex d1 f8

rotate_cl_controlled_rol_b_mv[in=eax cl,out=]: hex d2 c0
rotate_cl_controlled_rol_w_mv[in=eax cl,out=]: hex 66 d3 c0
rotate_cl_controlled_rol_l[in=eax cl,out=]: hex d3 c0
rotate_cl_controlled_ror_b_mv[in=eax cl,out=]: hex d2 c8
rotate_cl_controlled_ror_w_mv[in=eax cl,out=]: hex 66 d3 c8
rotate_cl_controlled_ror_l[in=eax cl,out=]: hex d3 c8
rotate_cl_controlled_rcl_b_mv[in=eax cl,out=]: hex d2 d0
rotate_cl_controlled_rcl_w_mv[in=eax cl,out=]: hex 66 d3 d0
rotate_cl_controlled_rcl_l[in=eax cl,out=]: hex d3 d0
rotate_cl_controlled_rcr_b_mv[in=eax cl,out=]: hex d2 d8
rotate_cl_controlled_rcr_w_mv[in=eax cl,out=]: hex 66 d3 d8
rotate_cl_controlled_rcr_l[in=eax cl,out=]: hex d3 d8
rotate_cl_controlled_shl_b_mv[in=eax cl,out=]: hex d2 e0
rotate_cl_controlled_shl_w_mv[in=eax cl,out=]: hex 66 d3 e0
rotate_cl_controlled_shl_l[in=eax cl,out=]: hex d3 e0
rotate_cl_controlled_shr_b_mv[in=eax cl,out=]: hex d2 e8
rotate_cl_controlled_shr_w_mv[in=eax cl,out=]: hex 66 d3 e8
rotate_cl_controlled_shr_l[in=eax cl,out=]: hex d3 e8
rotate_cl_controlled_sar_b_mv[in=eax cl,out=]: hex d2 f8
rotate_cl_controlled_sar_w_mv[in=eax cl,out=]: hex 66 d3 f8
rotate_cl_controlled_sar_l[in=eax cl,out=]: hex d3 f8

rotate_imm8_rol_b_mv[in=eax,out=]: hex c0 c0 04
rotate_imm8_rol_w_mv[in=eax,out=]: hex 66 c1 c0 04
rotate_imm8_rol_l[in=eax,out=]: hex c1 c0 04
rotate_imm8_ror_b_mv[in=eax,out=]: hex c0 c8 04
rotate_imm8_ror_w_mv[in=eax,out=]: hex 66 c1 c8 04
rotate_imm8_ror_l[in=eax,out=]: hex c1 c8 04
rotate_imm8_rcl_b_mv[in=eax,out=]: hex c0 d0 04
rotate_imm8_rcl_w_mv[in=eax,out=]: hex 66 c1 d0 04
rotate_imm8_rcl_l[in=eax,out=]: hex c1 d0 04
rotate_imm8_rcr_b_mv[in=eax,out=]: hex c0 d8 04
rotate_imm8_rcr_w_mv[in=eax,out=]: hex 66 c1 d8 04
rotate_imm8_rcr_l[in=eax,out=]: hex c1 d8 04
rotate_imm8_shl_b_mv[in=eax,out=]: hex c0 e0 04
rotate_imm8_shl_w_mv[in=eax,out=]: hex 66 c1 e0 04
rotate_imm8_shl_l[in=eax,out=]: hex c1 e0 04
rotate_imm8_shr_b_mv[in=eax,out=]: hex c0 e8 04
rotate_imm8_shr_w_mv[in=eax,out=]: hex 66 c1 e8 04
rotate_imm8_shr_l[in=eax,out=]: hex c1 e8 04
rotate_imm8_sar_b_mv[in=eax,out=]: hex c0 f8 04
rotate_imm8_sar_w_mv[in=eax,out=]: hex 66 c1 f8 04
rotate_imm8_sar_l[in=eax,out=]: hex c1 f8 04

rep_ins1b[doNotEval,in=edi df dx ecx,out=edi ecx]: hex f2 6c
rep_ins1w_mv[doNotEval,in=edi df dx ecx,out=edi ecx]: hex f2 66 6d
rep_ins1l_mv[doNotEval,in=edi df dx ecx,out=edi ecx]: hex f2 6d
rep_ins2b[doNotEval,in=edi df dx ecx,out=edi ecx]: hex f3 6c
rep_ins2w_mv[doNotEval,in=edi df dx ecx,out=edi ecx]: hex f3 66 6d
rep_ins2l_mv[doNotEval,in=edi df dx ecx,out=edi ecx]: hex f3 6d

rep_lods1b[doNotEval,in=esi df ecx,out=esi al ecx]: hex f2 ac
rep_lods1w_mv[doNotEval,in=esi df ecx,out=esi ax ecx]: hex f2 66 ad
rep_lods1l_mv[doNotEval,in=esi df ecx,out=esi eax ecx]: hex f2 ad
rep_lods2b[doNotEval,in=esi df ecx,out=esi al ecx]: hex f3 ac
rep_lods2w_mv[doNotEval,in=esi df ecx,out=esi ax ecx]: hex f3 66 ad
rep_lods2l_mv[doNotEval,in=esi df ecx,out=esi eax ecx]: hex f3 ad

rep_movs1b[doNotEval,in=esi edi df ecx,out=esi edi ecx]: hex f2 a4
rep_movs1w_mv[doNotEval,in=esi edi df ecx,out=esi edi ecx]: hex f2 66 a5
rep_movs1l_mv[doNotEval,in=esi edi df ecx,out=esi edi ecx]: hex f2 a5
rep_movs2b[doNotEval,in=esi edi df ecx,out=esi edi ecx]: hex f3 a4
rep_movs2w_mv[doNotEval,in=esi edi df ecx,out=esi edi ecx]: hex f3 66 a5
rep_movs2l_mv[doNotEval,in=esi edi df ecx,out=esi edi ecx]: hex f3 a5

rep_outs1b[doNotEval,in=esi df dx ecx,out=esi ecx]: hex f2 6e
rep_outs1w_mv[doNotEval,in=esi df dx ecx,out=esi ecx]: hex f2 66 6f
rep_outs1l_mv[doNotEval,in=esi df dx ecx,out=esi ecx]: hex f2 6f
rep_outs2b[doNotEval,in=esi df dx ecx,out=esi ecx]: hex f3 6e
rep_outs2w_mv[doNotEval,in=esi df dx ecx,out=esi ecx]: hex f3 66 6f
rep_outs2l_mv[doNotEval,in=esi df dx ecx,out=esi ecx]: hex f3 6f

rep_stos1b[doNotEval,in=edi df al ecx,out=edi ecx]: hex f2 aa
rep_stos1w_mv[doNotEval,in=edi df ax ecx,out=edi ecx]: hex f2 66 ab
rep_stos1l_mv[doNotEval,in=edi df eax ecx,out=edi ecx]: hex f2 ab
rep_stos2b[doNotEval,in=edi df al ecx,out=edi ecx]: hex f3 aa
rep_stos2w_mv[doNotEval,in=edi df ax ecx,out=edi ecx]: hex f3 66 ab
rep_stos2l_mv[doNotEval,in=edi df eax ecx,out=edi ecx]: hex f3 ab

rep_cmps1b[doNotEval,in=esi edi df ecx,out=esi edi ecx]: hex f2 a6
rep_cmps1w_mv[doNotEval,in=esi edi df ecx,out=esi edi ecx]: hex f2 66 a7
rep_cmps1l_mv[doNotEval,in=esi edi df ecx,out=esi edi ecx]: hex f2 a7
rep_cmps2b[doNotEval,in=esi edi df ecx,out=esi edi ecx]: hex f3 a6
rep_cmps2w_mv[doNotEval,in=esi edi df ecx,out=esi edi ecx]: hex f3 66 a7
rep_cmps2l_mv[doNotEval,in=esi edi df ecx,out=esi edi ecx]: hex f3 a7
rep_cmps_seg1_mv[doNotEval]: hex 36 f2 a6

#rep_cmpsw_w: hex f2 66 67 a7

rep_cmps_clear_mv[doNotEval]: hex fc 36 f2 a6
rep_cmps_set_mv[doNotEval]: hex fd 36 f2 a6

#rep_cmpsb_memcmp[doNotEval]: hex 55 b9 08 00 00 00 89 e5 fc 83 ec 08 89 34 24 8b 75 08 89 7c 24 04 8b 7d 0c f3 a6 0f 92 c0 8b 34 24 8b 7c 24 04 0f 97 c2 89 ec 5d 28 c2 0f be c2 c3

rep_scas1b[doNotEval,in=edi df al ecx,out=edi ecx]: hex f2 ae
rep_scas1w_mv[doNotEval,in=edi df ax ecx,out=edi ecx]: hex f2 66 af
rep_scas1l[doNotEval,in=edi df eax ecx,out=edi ecx]: hex f2 af
rep_scas2b[doNotEval,in=edi df al ecx,out=edi ecx]: hex f3 ae
rep_scas2w_mv[doNotEval,in=edi df ax ecx,out=edi ecx]: hex f3 66 af
rep_scas2l[doNotEval,in=edi df eax ecx,out=edi ecx]: hex f3 af
rep_scas_seg_mv[doNotEval]: hex f2 ae

### rep eval section
rep_scas_memchr_mv[doNotEval]: hex 57 8b 7c 24 08 8b 44 24 0c 8b 4c 24 10 85 c9 74 0a fc f2 ae 75 05 8d 47 ff 5f c3 31 c0 5f c3

array:barr_abcde:.byte 0x10,0x12,0x14,0x16,0x18
array:barr_abcxe:.byte 0x10,0x12,0x14,0x36,0x18
array:barr_abcae:.byte 0x10,0x12,0x14,0x06,0x18
array:barr_ghije:.byte 0x80,0x82,0x84,0x86,0x18

## repnz
rep_cmps1_test_with_count_0_mv[in=esi edi df ecx,out=esi edi ecx]: mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $0,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf

rep_cmps1_test_all_4bytes_differ_mv[in=esi edi df ecx,out=esi edi ecx]: mov $barr_abcde,%edi;mov $barr_ghije,%esi;mov $4,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_ghije,%esi;popf

rep_cmps1_test_5th_byte_is_equal_mv[in=esi edi df ecx,out=esi edi ecx]: mov $barr_abcde,%edi;mov $barr_ghije,%esi;mov $5,%ecx; repnz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_ghije,%esi;popf

## repz
rep_cmps2_test_with_count_0_mv[in=esi edi df ecx,out=esi edi ecx]: mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $0,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf

rep_cmps2_test_all_4_bytes_are_equal_mv[in=esi edi df ecx,out=esi edi ecx]: mov $barr_abcde,%edi;mov $barr_abcde,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcde,%esi;popf

rep_cmps2_test_more_after_3_bytes_mv[in=esi edi df ecx,out=esi edi ecx]: mov $barr_abcde,%edi;mov $barr_abcxe,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcxe,%esi;popf

rep_cmps2_test_less_after_3_bytes_mv[in=esi edi df ecx,out=esi edi ecx]: mov $barr_abcde,%edi;mov $barr_abcae,%esi;mov $8,%ecx; repz cmpsb %es:(%edi),%ds:(%esi);pushf;sub $barr_abcde,%edi;sub $barr_abcae,%esi;popf

rep_lods_test_mv[in=df]: mov $barr_abcde,%esi;mov $3,%ecx; repz lods %ds:(%esi),%al;sub $barr_abcde,%esi

ret1[doNotEval]: hex c3
ret2_mv[doNotEval]: hex 66 c3
ret3_mv[doNotEval]: hex cb
ret4_mv[doNotEval]: hex 66 cb
ret_pop1[doNotEval]: hex c2 34 12
ret_pop2_mv[doNotEval]: hex 66 c2 34 12
ret_pop3_mv[doNotEval]: hex ca 34 12
ret_pop4_mv[doNotEval]: hex 66 ca 34 12

sahf[in=ah,out=]: sahf

sbb1_mv[in=flags al,out=al]: sbb $0xe8,%al
sbb2_mv[in=flags ax,out=ax]: sbb $0xe8,%ax
sbb3[in=flags eax,out=eax]: sbb $0xe8,%eax
sbb4_mv[doNotEval,in=flags eax,out=]: sbbb $0xe8,(%eax)
sbb5_mv[doNotEval,in=flags eax,out=]: sbbw $0xe8,(%eax)
sbb6_mv[doNotEval,in=flags eax,out=]: sbbl $0xe8,(%eax)
sbb7_mv[doNotEval,in=flags ax bx,out=bx]: sbb %ax,%bx
sbb_locked_mv[doNotEval]: lock sbb %eax,(%ebx)

scas1[doNotEval,in=edi df al,out=edi]: hex ae
scas2_mv[doNotEval,in=edi df al,out=edi]: hex 66 af
scas3[doNotEval,in=edi df al,out=edi]: hex af

setcc_with_code_0[in=flags ecx,out=]: hex 0f 90 c3
setcc_with_code_1_mv[in=flags ecx,out=]: hex 0f 91 c3
setcc_with_code_2_mv[in=flags ecx,out=]: hex 0f 92 c3
setcc_with_code_3_mv[in=flags ecx,out=]: hex 0f 93 c3
setcc_with_code_4_mv[in=flags ecx,out=]: hex 0f 94 c3
setcc_with_code_5_mv[in=flags ecx,out=]: hex 0f 95 c3
setcc_with_code_6_mv[in=flags ecx,out=]: hex 0f 96 c3
setcc_with_code_7_mv[in=flags ecx,out=]: hex 0f 97 c3
setcc_with_code_8_mv[in=flags ecx,out=]: hex 0f 98 c3
setcc_with_code_9_mv[in=flags ecx,out=]: hex 0f 99 c3
setcc_with_code_a_mv[in=flags ecx,out=]: hex 0f 9a c3
setcc_with_code_b_mv[in=flags ecx,out=]: hex 0f 9b c3
setcc_with_code_c_mv[in=flags ecx,out=]: hex 0f 9c c3
setcc_with_code_d_mv[in=flags ecx,out=]: hex 0f 9d c3
setcc_with_code_e_mv[in=flags ecx,out=]: hex 0f 9e c3
setcc_with_code_f_mv[in=flags ecx,out=]: hex 0f 9f c3

sgdt[doNotEval]: sgdt (%eax)
sidt[doNotEval]: sidt (%eax)

shld1[in=ax bx,out=ax bx]: shld $4,%ax,%bx
shld2[in=eax ebx,out=eax ebx]: shld $4,%eax,%ebx
shld3[in=ax bx cl,out=ax bx]: shld %cl,%ax,%bx
shld4[in=eax ebx cl,out=eax ebx]: shld %cl,%eax,%ebx

shrd1[in=ax bx,out=ax bx]: shrd $4,%ax,%bx
shrd2[in=eax ebx,out=eax ebx]: shrd $4,%eax,%ebx
shrd3[in=ax bx cl,out=ax bx]: shrd %cl,%ax,%bx
shrd4[in=eax ebx cl,out=eax ebx]: shrd %cl,%eax,%ebx

sldt[doNotEval]: sldt (%eax)

smsw[doNotEval]: smsw (%eax)

stc[in=flags,out=]: stc

std: std

sti[doNotEval]: sti

stos1[doNotEval,in=edi df al,out=edi]: hex aa
stos2_mv[doNotEval,in=edi df ax,out=edi]: hex 66 ab
stos3[doNotEval,in=edi df eax,out=edi]: hex ab

str[doNotEval]: str (%eax)

sub1_mv[in=al,out=al]: hex 2c 02
sub2_mv[in=al,out=al]: hex 2c fe
sub3_mv[in=ax,out=ax]: hex 66 2d 02 00
sub4_mv[in=ax,out=ax]: hex 66 2d fe ff
sub5[in=eax,out=eax]: hex 2d 02 00 00 00
sub6_mv[in=eax,out=eax]: hex 2d fe ff ff ff
sub7_mv[doNotEval,in=eax ebp,out=eax]: subl 8(%ebp), %eax
sub_locked_mv[doNotEval]: hex f0 2b 45 08
sub_ft_0_mv: mov $0x01,%al; mov $0x01,%bl; sub %bl,%al
sub_ft_1_mv: mov $0x01,%al; mov $0x02,%bl; sub %bl,%al
sub_ft_2_mv: mov $0x80,%al; mov $0x7f,%bl; sub %bl,%al
sub_ft_3_mv: mov $0xff,%al; mov $0x02,%bl; sub %bl,%al
sub_ft_4_mv: mov $0x01,%al; mov $0xff,%bl; sub %bl,%al
sub_ft_5_mv: mov $0x01,%al; mov $0x80,%bl; sub %bl,%al
sub_ft_6_mv: mov $0x80,%al; mov $0x80,%bl; sub %bl,%al
sub_ft_7_mv: mov $0x80,%al; mov $0xff,%bl; sub %bl,%al

test1_mv[in=al,out=]: test $0x42,%al
test2_mv[in=ax,out=]: test $0x42,%ax
test3[in=eax,out=]: test $0x42,%eax
test4_mv[doNotEval,in=ecx,out=]: testb $0x42,(%ecx)
test5_mv[doNotEval,in=ecx,out=]: testw $0x42,(%ecx)
test6_mv[doNotEval,in=ecx,out=]: testl $0x42,(%ecx)
test7_mv[doNotEval,in=bl ecx,out=]: test %bl,(%ecx)
test8_mv[doNotEval,in=bx ecx,out=]: test %bx,(%ecx)
test9_mv[doNotEval,in=ebx ecx,out=]: test %ebx,(%ecx)

verr[doNotEval]: verr (%eax)
verw[doNotEval]: verw (%eax)

wait[doNotEval]: hex 9b

xchg1[in=ax bx,out=ax bx]: xchg %ax,%bx
xchg2[in=eax ebx,out=eax ebx]: xchg %eax,%ebx
xchg3_mv[doNotEval,in=bl ecx,out=bl]: xchg %bl,(%ecx)
xchg4_mv[doNotEval,in=bx ecx,out=bx]: xchg %bx,(%ecx)
xchg5_mv[doNotEval,in=ebx ecx,out=ebx]: xchg %ebx,(%ecx)
xchg_locked_mv[doNotEval]: lock xchg %ebx,(%ecx)

xlat1[doNotEval]: hex d7
xlat2_mv[doNotEval]: hex 67 d7

xor1_mv[in=al,out=al]: hex 34 02
xor2_mv[in=al,out=al]: hex 34 fe
xor3_mv[in=ax,out=ax]: hex 66 35 02 00
xor4_mv[in=ax,out=ax]: hex 66 35 fe ff
xor5[in=eax,out=eax]: hex 35 02 00 00 00
xor6_mv[in=eax,out=eax]: hex 35 fe ff ff ff
xor7_mv[doNotEval,in=eax ebp,out=eax]: xorl 8(%ebp), %eax
xor8_mv[in=eax,out=eax]: xorl $0x02,%eax
xor9_mv[in=eax,out=eax]: xorl $0xf2,%eax
xor_locked_mv[doNotEval]: lock xorl $0xf2,(%eax)
