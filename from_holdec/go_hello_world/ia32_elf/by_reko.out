=== Using options:--aggressive-branch-removal
080494B0: warning: Procedure runtime/internal/atomic.Loaduintptr previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
08055274: error: 
0805DC79: warning: Unable to determine the upper bound of an indirect call or jump; there may be more than 2 entries.
0808F764: warning: x86 instruction 'vpshufb' is not supported yet.
08090AC6: warning: Procedure runtime.clone previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080BD303: error: The address 080BD303 is invalid.
0808F9EE: warning: Procedure runtime.memequal previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
080B4761: warning: Procedure reflect.(*sliceType).IsVariadic previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080A9F40: warning: Call target address 00000004 is invalid.
080A9FC5: warning: Call target address 00000004 is invalid.
080B4AE1: warning: Procedure reflect.(*sliceType).Comparable previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B4AB1: warning: Procedure reflect.(*sliceType).ConvertibleTo previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B4A81: warning: Procedure reflect.(*sliceType).AssignableTo previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B4A51: warning: Procedure reflect.(*sliceType).Implements previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B4984: warning: Procedure reflect.(*sliceType).NumField previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B489C: warning: Procedure reflect.(*sliceType).FieldByNameFunc previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B485C: warning: Procedure reflect.(*sliceType).FieldByName previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B4817: warning: Procedure reflect.(*sliceType).FieldByIndex previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B47D7: warning: Procedure reflect.(*sliceType).Field previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B46BC: warning: Procedure reflect.(*sliceType).PkgPath previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B467C: warning: Procedure reflect.(*sliceType).MethodByName previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B45D4: warning: Procedure reflect.(*sliceType).common previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B45A4: warning: Procedure reflect.(*sliceType).Kind previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B4574: warning: Procedure reflect.(*sliceType).FieldAlign previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B4544: warning: Procedure reflect.(*sliceType).Align previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B4514: warning: Procedure reflect.(*sliceType).Bits previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080B44E4: warning: Procedure reflect.(*sliceType).Size previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
08090950: warning: Procedure runtime.cgoSigtramp previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
0808FB24: warning: Procedure runtime.cmpstring previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
0808FA24: warning: Procedure runtime.eqstring previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
0808FA0D: warning: Procedure runtime.memequal_varlen previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
0808F6BC: warning: Procedure runtime.aeshash previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
0808E7A1: warning: Unable to determine the upper bound of an indirect call or jump; there may be more than 2 entries.
0808E711: warning: Unable to determine the upper bound of an indirect call or jump; there may be more than 2 entries.
0808E681: warning: Unable to determine the upper bound of an indirect call or jump; there may be more than 2 entries.
0808E5EE: warning: Unable to determine the upper bound of an indirect call or jump; there may be more than 2 entries.
08090650: warning: Procedure main previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080492A0: warning: Procedure sync/atomic.StoreUintptr previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
08049210: warning: Procedure sync/atomic.AddInt32 previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
080491A0: warning: Procedure sync/atomic.CompareAndSwapInt32 previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
error: An error occurred during decompilation. System.ArgumentException: dt
Parameter name: Invalid bit size.
  at Reko.Core.Expressions.Constant.Slice (Reko.Core.Types.DataType dt, System.Int32 offset) [0x0002c] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Evaluation.SliceConstant_Rule.Transform () [0x00017] in <412f049f2cb248eca19ae8eb793a6a5b>:0 
  at Reko.Evaluation.ExpressionSimplifier.VisitSlice (Reko.Core.Expressions.Slice slice) [0x00058] in <412f049f2cb248eca19ae8eb793a6a5b>:0 
  at Reko.Core.Expressions.Slice.Accept[T] (Reko.Core.Expressions.ExpressionVisitor`1[T] v) [0x00001] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Analysis.TrashedRegisterFinder.VisitAssignment (Reko.Core.Code.Assignment ass) [0x00006] in <412f049f2cb248eca19ae8eb793a6a5b>:0 
  at Reko.Core.Code.Assignment.Accept[T] (Reko.Core.Code.InstructionVisitor`1[T] visitor) [0x00001] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Analysis.TrashedRegisterFinder.ProcessBlock (Reko.Core.Block block) [0x0005c] in <412f049f2cb248eca19ae8eb793a6a5b>:0 
  at Reko.Analysis.TrashedRegisterFinder.Compute () [0x00020] in <412f049f2cb248eca19ae8eb793a6a5b>:0 
  at Reko.Analysis.DataFlowAnalysis.UntangleProcedureScc (System.Collections.Generic.IList`1[T] procs) [0x00070] in <412f049f2cb248eca19ae8eb793a6a5b>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x0012a] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].Dfs (Reko.Core.Lib.SccFinder`1+Node[TNode] node) [0x00070] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Core.Lib.SccFinder`1[TNode].FindAll () [0x00038] in <b9cfb1f835ef496fb9812173153e1b7d>:0 
  at Reko.Analysis.DataFlowAnalysis.RewriteProceduresToSsa () [0x00027] in <412f049f2cb248eca19ae8eb793a6a5b>:0 
  at Reko.Analysis.DataFlowAnalysis.UntangleProcedures () [0x00067] in <412f049f2cb248eca19ae8eb793a6a5b>:0 
  at Reko.Decompiler.AnalyzeDataFlow () [0x00094] in <412f049f2cb248eca19ae8eb793a6a5b>:0 
  at Reko.CmdLine.CmdLineDriver.Decompile (System.Collections.Generic.Dictionary`2[TKey,TValue] pArgs) [0x00232] in <46a9a108998349f9975ff5dd656c4cb0>:0 
